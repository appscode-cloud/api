syntax = "proto3";

package db;

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

service Databases {
  rpc Create(CreateRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put : "/db/v0.1/{cluster}/{type}"
      body : "*"
    };
  }

  rpc Delete(DeleteRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/db/v0.1/{cluster}/{type}/{name}"
    };
  }

  rpc Backup(BackupRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      post: "/db/v0.1/backup/{cluster}/{type}"
      body: "*"
    };
  }

  rpc SnapshotList(SnapshotListRequest) returns (SnapshotListResponse) {
    option (google.api.http) = {
      get: "/db/v0.1/snapshots/{name}"
    };
  }

  rpc Restore(RestoreRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put: "/db/v0.1/restore/{cluster}/{type}"
      body: "*"
    };
  }

  rpc Describe(DescribeRequest) returns (DescribeResponse) {
    option (google.api.http) = {
      get: "/db/v0.1/{cluster}/{name}"
    };
  }

  rpc List(dtypes.VoidRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/db/v0.1"
    };
  }
}


message CreateRequest {
  string type = 1;
  string sku = 2;
  string name = 3;
  string cluster = 4;
  string pv = 5;
  int64 pv_size = 6;
  int32 node = 7;
  string region = 8;
  string bucket_name = 9;
  string credential = 10;
  string version = 11;
  string gfs_endpoint = 12;
  string gfs_disk = 13;
  string auth_secret_name = 14;
}

message DeleteRequest {
  string type = 1;
  string name = 2;
  string cluster = 3;
}

message BackupRequest {
  string cluster = 1;
  string name = 2;
  string type = 3;
  string bucket_name = 4;
  string secret_name = 5;
  string snapshot_name = 6;
  string credential = 7;
  string region = 8;
  string auth_secret_name = 9;
  bool wal = 10;
  bool force = 11;

}

message RestoreRequest {
  string cluster = 1;
  string name = 2;
  string type = 3;
  string pv = 4;
  int64 pv_size = 5;
  string sku = 6;
  int32 node = 7;
  string snapshot_phid = 8;
  string bucket_name = 9;
  string credential = 10;
  string region = 11;
  string secret_name = 12;
  string version = 13;
  string auth_secret_name = 14;
  bool wal = 15;
  bool force = 16;
}

message DescribeRequest {
  string cluster = 1;
  string name = 2;
}

message DescribeResponse {
  dtypes.Status status = 1;
  string name = 2;
  string phid = 3;
  string cluster = 4;
  string type = 5;
  string sku = 6;
  string version = 7;
  int32 auto_snapshot = 8;
  string last_backup = 9;
  kubeInfo kube = 10;
  string db_status = 11;
  string created = 12;
}

message kubeInfo {
  int64 svc = 1;
  int64 pods = 2;
  int64 rc = 3;
}

message ListRequest {}

message ListResponse {
  dtypes.Status status = 1;
  repeated Database databases = 2;
}

message Database {
  string phid = 1;
  string cluster_name = 2;
  string name = 3;
  string namespace = 4;
  string type = 5;
  string sku = 6;
  string version = 7;
  string auth_secret = 8;
  int32 auto_snapshot = 9;
  int64 pv_size = 10;
  string created = 11;
  string last_backup = 12;
}

message SnapshotListRequest {
  string name = 1;
}

message SnapshotListResponse {
  dtypes.Status status = 1;
  repeated Snapshot list = 2;
}

message Snapshot {
  string name = 1;
  string phid = 2;
  string db_name = 3;
  string db_cluster = 4;
  string provider = 5;
  string cloud_cred = 6;
  string bucket = 7;
  string region = 8;
  string zone = 9;
  string status = 10;
  string process = 11;
  string restore_db = 12;
  string restore_snap = 13;
  string created = 14;
}
