{
  "swagger": "2.0",
  "info": {
    "title": "db.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/appscode/api/db/v0.1": {
      "get": {
        "operationId": "List",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dbListResponse"
            }
          }
        },
        "tags": [
          "Databases"
        ]
      }
    },
    "/appscode/api/db/v0.1/backup/{cluster}/{type}": {
      "post": {
        "operationId": "Backup",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dbBackupRequest"
            }
          }
        ],
        "tags": [
          "Databases"
        ]
      }
    },
    "/appscode/api/db/v0.1/restore/{cluster}/{type}": {
      "put": {
        "operationId": "Restore",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dbRestoreRequest"
            }
          }
        ],
        "tags": [
          "Databases"
        ]
      }
    },
    "/appscode/api/db/v0.1/snapshots/{name}": {
      "get": {
        "operationId": "SnapshotList",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dbSnapshotListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Databases"
        ]
      }
    },
    "/appscode/api/db/v0.1/{cluster}/{name}": {
      "get": {
        "operationId": "Describe",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dbDescribeResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Databases"
        ]
      }
    },
    "/appscode/api/db/v0.1/{cluster}/{type}": {
      "put": {
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dbCreateRequest"
            }
          }
        ],
        "tags": [
          "Databases"
        ]
      }
    },
    "/appscode/api/db/v0.1/{cluster}/{type}/{name}": {
      "delete": {
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Databases"
        ]
      }
    }
  },
  "definitions": {
    "dbBackupRequest": {
      "type": "object",
      "properties": {
        "auth_secret_name": {
          "type": "string",
          "format": "string"
        },
        "bucket_name": {
          "type": "string",
          "format": "string"
        },
        "cluster": {
          "type": "string",
          "format": "string"
        },
        "credential": {
          "type": "string",
          "format": "string"
        },
        "force": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "region": {
          "type": "string",
          "format": "string"
        },
        "snapshot_name": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "wal": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "dbCreateRequest": {
      "type": "object",
      "properties": {
        "auth_secret_name": {
          "type": "string",
          "format": "string"
        },
        "bucket_name": {
          "type": "string",
          "format": "string"
        },
        "cluster": {
          "type": "string",
          "format": "string"
        },
        "credential": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "node": {
          "type": "integer",
          "format": "int64"
        },
        "pv": {
          "type": "string",
          "format": "string"
        },
        "pv_size": {
          "type": "integer",
          "format": "int64"
        },
        "region": {
          "type": "string",
          "format": "string"
        },
        "sku": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "version": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "dbDatabase": {
      "type": "object",
      "properties": {
        "auth_secret": {
          "type": "string",
          "format": "string"
        },
        "auto_snapshot": {
          "type": "integer",
          "format": "int32"
        },
        "cluster_name": {
          "type": "string",
          "format": "string"
        },
        "created": {
          "type": "string",
          "format": "string"
        },
        "last_backup": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "namespace": {
          "type": "string",
          "format": "string"
        },
        "phid": {
          "type": "string",
          "format": "string"
        },
        "pv_size": {
          "type": "integer",
          "format": "int64"
        },
        "sku": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "version": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "dbDeleteRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "dbDescribeRequest": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "dbDescribeResponse": {
      "type": "object",
      "properties": {
        "auto_snapshot": {
          "type": "integer",
          "format": "int32"
        },
        "cluster": {
          "type": "string",
          "format": "string"
        },
        "created": {
          "type": "string",
          "format": "string"
        },
        "db_status": {
          "type": "string",
          "format": "string"
        },
        "kube": {
          "$ref": "#/definitions/dbkubeInfo"
        },
        "last_backup": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "phid": {
          "type": "string",
          "format": "string"
        },
        "sku": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "version": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "dbListResponse": {
      "type": "object",
      "properties": {
        "databases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dbDatabase"
          }
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      }
    },
    "dbRestoreRequest": {
      "type": "object",
      "properties": {
        "auth_secret_name": {
          "type": "string",
          "format": "string"
        },
        "bucket_name": {
          "type": "string",
          "format": "string"
        },
        "cluster": {
          "type": "string",
          "format": "string"
        },
        "credential": {
          "type": "string",
          "format": "string"
        },
        "force": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "node": {
          "type": "integer",
          "format": "int64"
        },
        "pv": {
          "type": "string",
          "format": "string"
        },
        "pv_size": {
          "type": "integer",
          "format": "int64"
        },
        "region": {
          "type": "string",
          "format": "string"
        },
        "sku": {
          "type": "string",
          "format": "string"
        },
        "snapshot_phid": {
          "type": "string",
          "format": "string"
        },
        "type": {
          "type": "string",
          "format": "string"
        },
        "version": {
          "type": "string",
          "format": "string"
        },
        "wal": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "dbSnapshot": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string",
          "format": "string"
        },
        "cloud_cred": {
          "type": "string",
          "format": "string"
        },
        "created": {
          "type": "string",
          "format": "string"
        },
        "db_cluster": {
          "type": "string",
          "format": "string"
        },
        "db_name": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "phid": {
          "type": "string",
          "format": "string"
        },
        "process": {
          "type": "string",
          "format": "string"
        },
        "provider": {
          "type": "string",
          "format": "string"
        },
        "region": {
          "type": "string",
          "format": "string"
        },
        "restore_db": {
          "type": "string",
          "format": "string"
        },
        "restore_snap": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string"
        },
        "zone": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "dbSnapshotListRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "dbSnapshotListResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dbSnapshot"
          }
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      }
    },
    "dbkubeInfo": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "integer",
          "format": "int64"
        },
        "rc": {
          "type": "integer",
          "format": "int64"
        },
        "svc": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "dtypesHelp": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "format": "string",
          "title": "Describe what link offers"
        },
        "url": {
          "type": "string",
          "format": "string",
          "description": "The URL of The link."
        }
      },
      "title": "Provides links to documentation or for performing an out of band action.\nNext Id 3;"
    },
    "dtypesStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "format": "string",
          "title": "Response status code"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use."
        },
        "help": {
          "$ref": "#/definitions/dtypesHelp",
          "description": "Optional. Help link if there is an error."
        },
        "message": {
          "type": "string",
          "format": "string",
          "description": "User facing message."
        },
        "status": {
          "type": "string",
          "format": "string",
          "description": "Response status code string."
        }
      },
      "description": "Next Id 5."
    },
    "dtypesVoidRequest": {
      "type": "object",
      "description": "Void Requests and response to use with other types."
    },
    "dtypesVoidResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "format": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized message.\n\nFor URLs which use the schema `http`, `https`, or no schema, the\nfollowing restrictions and interpretations apply:\n\n* If no schema is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemas other than `http`, `https` (or the empty schema) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be valid serialized data of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized message along with a URL\nthat describes the type of the serialized message.\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    }
  }
}
