// Code generated by protoc-gen-go.
// source: db.proto
// DO NOT EDIT!

/*
Package db is a generated protocol buffer package.

It is generated from these files:
	db.proto
	slaves.proto

It has these top-level messages:
	CreateRequest
	DeleteRequest
	BackupRequest
	RestoreRequest
	DescribeRequest
	DescribeResponse
	DbPodSpecs
	ListResponse
	Database
	SlaveAddRequest
*/
package db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CreateRequest struct {
	Type       string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Sku        string `protobuf:"bytes,2,opt,name=sku" json:"sku,omitempty"`
	Config     string `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
	Cluster    string `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
	Pv         string `protobuf:"bytes,5,opt,name=pv" json:"pv,omitempty"`
	PvSize     int64  `protobuf:"varint,6,opt,name=pv_size" json:"pv_size,omitempty"`
	Node       int32  `protobuf:"varint,7,opt,name=node" json:"node,omitempty"`
	Name       string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	BucketName string `protobuf:"bytes,9,opt,name=bucket_name" json:"bucket_name,omitempty"`
	Credential string `protobuf:"bytes,10,opt,name=credential" json:"credential,omitempty"`
	Region     string `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DeleteRequest struct {
	Type    string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cluster string `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type BackupRequest struct {
	Cluster    string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	BucketName string `protobuf:"bytes,4,opt,name=bucket_name" json:"bucket_name,omitempty"`
	SecretName string `protobuf:"bytes,5,opt,name=secret_name" json:"secret_name,omitempty"`
	Credential string `protobuf:"bytes,6,opt,name=credential" json:"credential,omitempty"`
	Region     string `protobuf:"bytes,7,opt,name=region" json:"region,omitempty"`
}

func (m *BackupRequest) Reset()                    { *m = BackupRequest{} }
func (m *BackupRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()               {}
func (*BackupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RestoreRequest struct {
	Cluster    string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Pv         string `protobuf:"bytes,4,opt,name=pv" json:"pv,omitempty"`
	PvSize     int64  `protobuf:"varint,5,opt,name=pv_size" json:"pv_size,omitempty"`
	Config     string `protobuf:"bytes,6,opt,name=config" json:"config,omitempty"`
	Node       int32  `protobuf:"varint,7,opt,name=node" json:"node,omitempty"`
	SnapTime   string `protobuf:"bytes,8,opt,name=snap_time" json:"snap_time,omitempty"`
	BucketName string `protobuf:"bytes,9,opt,name=bucket_name" json:"bucket_name,omitempty"`
	Credential string `protobuf:"bytes,10,opt,name=credential" json:"credential,omitempty"`
	Region     string `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	SecretName string `protobuf:"bytes,12,opt,name=secret_name" json:"secret_name,omitempty"`
}

func (m *RestoreRequest) Reset()                    { *m = RestoreRequest{} }
func (m *RestoreRequest) String() string            { return proto.CompactTextString(m) }
func (*RestoreRequest) ProtoMessage()               {}
func (*RestoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DescribeRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *DescribeRequest) Reset()                    { *m = DescribeRequest{} }
func (m *DescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeRequest) ProtoMessage()               {}
func (*DescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DescribeResponse struct {
	Status      *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Pods        []*DbPodSpecs  `protobuf:"bytes,2,rep,name=pods" json:"pods,omitempty"`
	ServiceName string         `protobuf:"bytes,3,opt,name=service_name" json:"service_name,omitempty"`
	ServiceIp   string         `protobuf:"bytes,4,opt,name=service_ip" json:"service_ip,omitempty"`
}

func (m *DescribeResponse) Reset()                    { *m = DescribeResponse{} }
func (m *DescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeResponse) ProtoMessage()               {}
func (*DescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DescribeResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeResponse) GetPods() []*DbPodSpecs {
	if m != nil {
		return m.Pods
	}
	return nil
}

type DbPodSpecs struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Phase     string `protobuf:"bytes,2,opt,name=phase" json:"phase,omitempty"`
	Condition string `protobuf:"bytes,3,opt,name=condition" json:"condition,omitempty"`
	Status    string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (m *DbPodSpecs) Reset()                    { *m = DbPodSpecs{} }
func (m *DbPodSpecs) String() string            { return proto.CompactTextString(m) }
func (*DbPodSpecs) ProtoMessage()               {}
func (*DbPodSpecs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ListResponse struct {
	Status    *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Databases []*Database    `protobuf:"bytes,2,rep,name=databases" json:"databases,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListResponse) GetDatabases() []*Database {
	if m != nil {
		return m.Databases
	}
	return nil
}

type Database struct {
	Phid                string `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
	KubernetesPhid      string `protobuf:"bytes,2,opt,name=kubernetes_phid" json:"kubernetes_phid,omitempty"`
	KubernetesService   string `protobuf:"bytes,3,opt,name=kubernetes_service" json:"kubernetes_service,omitempty"`
	Type                string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	Sku                 string `protobuf:"bytes,5,opt,name=sku" json:"sku,omitempty"`
	ArchiveBucket       string `protobuf:"bytes,6,opt,name=archive_bucket" json:"archive_bucket,omitempty"`
	ArchiveBucketRegion string `protobuf:"bytes,7,opt,name=archive_bucket_region" json:"archive_bucket_region,omitempty"`
	AutoSnapshot        int32  `protobuf:"varint,8,opt,name=auto_snapshot" json:"auto_snapshot,omitempty"`
	PvSize              int64  `protobuf:"varint,9,opt,name=pv_size" json:"pv_size,omitempty"`
	Created             string `protobuf:"bytes,10,opt,name=created" json:"created,omitempty"`
}

func (m *Database) Reset()                    { *m = Database{} }
func (m *Database) String() string            { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()               {}
func (*Database) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*CreateRequest)(nil), "db.CreateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "db.DeleteRequest")
	proto.RegisterType((*BackupRequest)(nil), "db.BackupRequest")
	proto.RegisterType((*RestoreRequest)(nil), "db.RestoreRequest")
	proto.RegisterType((*DescribeRequest)(nil), "db.DescribeRequest")
	proto.RegisterType((*DescribeResponse)(nil), "db.DescribeResponse")
	proto.RegisterType((*DbPodSpecs)(nil), "db.DbPodSpecs")
	proto.RegisterType((*ListResponse)(nil), "db.ListResponse")
	proto.RegisterType((*Database)(nil), "db.Database")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for Databases service

type DatabasesClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error)
	List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type databasesClient struct {
	cc *grpc.ClientConn
}

func NewDatabasesClient(cc *grpc.ClientConn) DatabasesClient {
	return &databasesClient{cc}
}

func (c *databasesClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Backup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Restore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error) {
	out := new(DescribeResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/db.Databases/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Databases service

type DatabasesServer interface {
	Create(context.Context, *CreateRequest) (*dtypes.VoidResponse, error)
	Delete(context.Context, *DeleteRequest) (*dtypes.VoidResponse, error)
	Backup(context.Context, *BackupRequest) (*dtypes.VoidResponse, error)
	Restore(context.Context, *RestoreRequest) (*dtypes.VoidResponse, error)
	Describe(context.Context, *DescribeRequest) (*DescribeResponse, error)
	List(context.Context, *dtypes.VoidRequest) (*ListResponse, error)
}

func RegisterDatabasesServer(s *grpc.Server, srv DatabasesServer) {
	s.RegisterService(&_Databases_serviceDesc, srv)
}

func _Databases_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DatabasesServer).Create(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Databases_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DatabasesServer).Delete(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Databases_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DatabasesServer).Backup(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Databases_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(RestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DatabasesServer).Restore(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Databases_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DatabasesServer).Describe(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Databases_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DatabasesServer).List(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Databases_serviceDesc = grpc.ServiceDesc{
	ServiceName: "db.Databases",
	HandlerType: (*DatabasesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Databases_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Databases_Delete_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Databases_Backup_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _Databases_Restore_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _Databases_Describe_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Databases_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 746 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x55, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0x56, 0x12, 0xc7, 0x69, 0x4e, 0x2e, 0x6d, 0xa7, 0x97, 0xdf, 0x8a, 0xda, 0x1f, 0x64, 0x01,
	0x2a, 0x15, 0x8a, 0x4b, 0xd9, 0x21, 0xc4, 0x82, 0x76, 0x89, 0x04, 0x6a, 0x25, 0x16, 0xb0, 0xb0,
	0x7c, 0x19, 0x12, 0x2b, 0xc1, 0x36, 0x9e, 0x71, 0x24, 0x5a, 0x75, 0xc3, 0x92, 0x2d, 0xcf, 0x03,
	0x2f, 0xc1, 0x06, 0xf6, 0x3c, 0x08, 0x33, 0x67, 0x3c, 0x8d, 0x1d, 0x25, 0x55, 0x05, 0x9b, 0x48,
	0x73, 0x3c, 0xf3, 0x5d, 0xce, 0x7c, 0x73, 0x02, 0x6b, 0xa1, 0x3f, 0x4c, 0xb3, 0x84, 0x27, 0xa4,
	0x1e, 0xfa, 0x83, 0xbd, 0x51, 0x92, 0x8c, 0xa6, 0xd4, 0xf1, 0xd2, 0xc8, 0xf1, 0xe2, 0x38, 0xe1,
	0x1e, 0x8f, 0x92, 0x98, 0xa9, 0x1d, 0x83, 0x5d, 0x59, 0x0e, 0xf9, 0xa7, 0x94, 0x32, 0x07, 0x7f,
	0x55, 0xdd, 0xfe, 0x56, 0x83, 0xde, 0x49, 0x46, 0x3d, 0x4e, 0xcf, 0xe8, 0xc7, 0x9c, 0x32, 0x4e,
	0xba, 0x60, 0xc8, 0x0d, 0x56, 0xed, 0x6e, 0xed, 0xa0, 0x4d, 0x3a, 0xd0, 0x60, 0x93, 0xdc, 0xaa,
	0xe3, 0xa2, 0x0f, 0x66, 0x90, 0xc4, 0xef, 0xa3, 0x91, 0xd5, 0xc0, 0xf5, 0x3a, 0xb4, 0x82, 0x69,
	0xce, 0x38, 0xcd, 0x2c, 0x03, 0x0b, 0x00, 0xf5, 0x74, 0x66, 0x35, 0xf5, 0xc7, 0x74, 0xe6, 0xb2,
	0xe8, 0x82, 0x5a, 0xa6, 0x28, 0x34, 0x24, 0x70, 0x9c, 0x84, 0xd4, 0x6a, 0x89, 0x55, 0x13, 0x57,
	0xde, 0x07, 0x6a, 0xad, 0xe1, 0xe6, 0x2d, 0xe8, 0xf8, 0x79, 0x30, 0xa1, 0xdc, 0xc5, 0x62, 0x1b,
	0x8b, 0x02, 0x2e, 0xc8, 0x68, 0x48, 0x63, 0x1e, 0x79, 0x53, 0x0b, 0xb4, 0x84, 0x8c, 0x8e, 0x84,
	0x31, 0xab, 0x23, 0xd7, 0xf6, 0x33, 0xe8, 0x9d, 0xd2, 0x29, 0x5d, 0x25, 0x5f, 0xb3, 0xd4, 0x17,
	0xf5, 0xa2, 0x01, 0xfb, 0x8b, 0x70, 0xff, 0xc2, 0x0b, 0x26, 0x79, 0xaa, 0x8f, 0x97, 0xb6, 0x2c,
	0x43, 0xd0, 0xe8, 0x8d, 0x65, 0xaa, 0x0d, 0x5d, 0x64, 0x54, 0xe8, 0x2e, 0x8a, 0xcd, 0x25, 0x56,
	0xcc, 0x05, 0x2b, 0x2d, 0x14, 0xf3, 0xab, 0x06, 0xfd, 0x33, 0xa1, 0x21, 0xc9, 0xe8, 0x5f, 0xa9,
	0x51, 0xcd, 0x37, 0x16, 0x9b, 0xdf, 0xc4, 0xe6, 0xcf, 0xaf, 0xce, 0xbc, 0x06, 0x9a, 0x5f, 0xc6,
	0x26, 0xb4, 0x59, 0xec, 0xa5, 0x2e, 0x8f, 0xfe, 0xf9, 0x46, 0x16, 0xfd, 0x77, 0xd1, 0xdb, 0x73,
	0x58, 0x3f, 0xa5, 0x2c, 0xc8, 0x22, 0xff, 0x46, 0x6f, 0xe8, 0xa6, 0x5e, 0x71, 0xaa, 0x2e, 0xea,
	0x02, 0x36, 0xe6, 0xe7, 0x59, 0x2a, 0x72, 0x4d, 0xc9, 0xff, 0x60, 0x32, 0x11, 0xf2, 0x9c, 0xe1,
	0xf9, 0xce, 0x71, 0x7f, 0xa8, 0xf2, 0x3d, 0x3c, 0xc7, 0x2a, 0xd9, 0x03, 0x23, 0x4d, 0x42, 0x26,
	0xf0, 0x1a, 0xea, 0xab, 0x3f, 0x3c, 0xf5, 0x5f, 0x27, 0xe1, 0x79, 0x4a, 0x03, 0x46, 0xb6, 0xa1,
	0xcb, 0x68, 0x36, 0x8b, 0x02, 0xea, 0xce, 0x79, 0xa4, 0x41, 0x5d, 0x8d, 0x52, 0xd5, 0x4b, 0xfb,
	0x2d, 0x40, 0xe9, 0x9c, 0xd6, 0xa5, 0x34, 0xf7, 0xa0, 0x99, 0x8e, 0x3d, 0xa6, 0x45, 0x8b, 0x3e,
	0x8a, 0x2e, 0x87, 0x91, 0x7c, 0x79, 0x05, 0x62, 0xff, 0x5a, 0xa5, 0x51, 0x71, 0x89, 0xb9, 0xb0,
	0x5f, 0x41, 0xf7, 0x65, 0xc4, 0xf8, 0xad, 0x3d, 0xdd, 0x81, 0x76, 0xe8, 0x71, 0xcf, 0x17, 0x94,
	0xda, 0x58, 0x17, 0x8d, 0x15, 0x45, 0xfb, 0x67, 0x0d, 0xd6, 0xf4, 0x42, 0x72, 0xa5, 0xe3, 0x28,
	0x2c, 0xb4, 0xfe, 0x07, 0xeb, 0x93, 0xdc, 0xa7, 0x59, 0x2c, 0x5e, 0x0b, 0x73, 0xf1, 0x83, 0x52,
	0x3d, 0x00, 0x52, 0xfa, 0x50, 0xf8, 0x2f, 0xe4, 0x6b, 0xb9, 0x46, 0x79, 0x1a, 0xa8, 0x4c, 0xef,
	0x42, 0xdf, 0xcb, 0x82, 0x71, 0x34, 0xa3, 0xae, 0x4a, 0x4a, 0x11, 0xad, 0x7d, 0xd8, 0xa9, 0xd6,
	0xdd, 0x72, 0xcc, 0xc9, 0x0e, 0xf4, 0xbc, 0x9c, 0x27, 0xae, 0x0c, 0x1c, 0x1b, 0x27, 0x1c, 0xf3,
	0xd6, 0x2c, 0x27, 0xb6, 0x8d, 0x89, 0x95, 0xf9, 0xc0, 0xc1, 0x14, 0xaa, 0xa0, 0x1d, 0x7f, 0x37,
	0xa0, 0xad, 0xad, 0x31, 0xf2, 0x0e, 0x4c, 0x35, 0xb7, 0xc8, 0xa6, 0x6c, 0x40, 0x65, 0x86, 0x0d,
	0xb6, 0x75, 0xdb, 0xde, 0x24, 0x51, 0xa8, 0x9b, 0x6b, 0x1f, 0x7c, 0xfe, 0xf1, 0xfb, 0x6b, 0xdd,
	0x1e, 0xec, 0xe3, 0x8c, 0x0c, 0x7d, 0x67, 0x76, 0x34, 0x7c, 0xec, 0x5c, 0x16, 0x29, 0xbc, 0x72,
	0x2e, 0xe5, 0x99, 0xab, 0xa7, 0xb5, 0x43, 0xe2, 0x82, 0xa9, 0xa6, 0x8a, 0x02, 0xaf, 0x4c, 0x98,
	0x15, 0xe0, 0x8f, 0x10, 0xfc, 0xc1, 0xe1, 0xbd, 0x1b, 0xc1, 0x9d, 0x4b, 0x19, 0x9e, 0x2b, 0xe2,
	0x83, 0xa9, 0xe6, 0x8e, 0x22, 0xa8, 0xcc, 0xa0, 0x15, 0x04, 0x0e, 0x12, 0x3c, 0xb4, 0xab, 0x04,
	0x3e, 0x9e, 0x5c, 0x6a, 0x82, 0x42, 0xab, 0x18, 0x27, 0x84, 0x48, 0x92, 0xea, 0x6c, 0x59, 0xc1,
	0x72, 0x84, 0x2c, 0x87, 0x83, 0xfb, 0x15, 0x96, 0x4c, 0x1d, 0x5d, 0x4a, 0x13, 0x88, 0xc0, 0x15,
	0x4f, 0x93, 0x6c, 0xa9, 0x6e, 0x55, 0x1e, 0xba, 0x24, 0x2a, 0x17, 0xab, 0xfd, 0x22, 0xb7, 0xeb,
	0xd7, 0x09, 0x18, 0xf2, 0x9d, 0x48, 0x82, 0xb2, 0x68, 0x45, 0xb0, 0x21, 0x09, 0xca, 0xcf, 0xc8,
	0xde, 0x46, 0xf0, 0x3e, 0xe9, 0x96, 0xc1, 0x7d, 0x13, 0xff, 0xf2, 0x9e, 0xfc, 0x09, 0x00, 0x00,
	0xff, 0xff, 0xac, 0x21, 0x0e, 0xa6, 0x38, 0x07, 0x00, 0x00,
}
