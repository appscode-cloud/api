// Code generated by protoc-gen-go.
// source: db.proto
// DO NOT EDIT!

/*
Package db is a generated protocol buffer package.

It is generated from these files:
	db.proto
	slaves.proto

It has these top-level messages:
	CreateRequest
	DeleteRequest
	BackupRequest
	RestoreRequest
	DescribeRequest
	DescribeResponse
	KubeInfo
	ListRequest
	ListResponse
	Database
	SnapshotListRequest
	SnapshotListResponse
	Snapshot
	SlaveAddRequest
*/
package db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateRequest struct {
	Cluster        string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type           string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Sku            string `protobuf:"bytes,4,opt,name=sku" json:"sku,omitempty"`
	Version        string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	Pv             string `protobuf:"bytes,6,opt,name=pv" json:"pv,omitempty"`
	PvSize         int64  `protobuf:"varint,7,opt,name=pv_size,json=pvSize" json:"pv_size,omitempty"`
	AuthSecretName string `protobuf:"bytes,8,opt,name=auth_secret_name,json=authSecretName" json:"auth_secret_name,omitempty"`
	Node           int64  `protobuf:"varint,9,opt,name=node" json:"node,omitempty"`
	Credential     string `protobuf:"bytes,10,opt,name=credential" json:"credential,omitempty"`
	BucketName     string `protobuf:"bytes,11,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	Region         string `protobuf:"bytes,12,opt,name=region" json:"region,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DeleteRequest struct {
	Type    string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cluster string `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type BackupRequest struct {
	Cluster        string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type           string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	BucketName     string `protobuf:"bytes,4,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	SnapshotName   string `protobuf:"bytes,5,opt,name=snapshot_name,json=snapshotName" json:"snapshot_name,omitempty"`
	Credential     string `protobuf:"bytes,6,opt,name=credential" json:"credential,omitempty"`
	Region         string `protobuf:"bytes,7,opt,name=region" json:"region,omitempty"`
	AuthSecretName string `protobuf:"bytes,8,opt,name=auth_secret_name,json=authSecretName" json:"auth_secret_name,omitempty"`
	Wal            bool   `protobuf:"varint,9,opt,name=wal" json:"wal,omitempty"`
	Dump           bool   `protobuf:"varint,10,opt,name=dump" json:"dump,omitempty"`
	Force          bool   `protobuf:"varint,11,opt,name=force" json:"force,omitempty"`
}

func (m *BackupRequest) Reset()                    { *m = BackupRequest{} }
func (m *BackupRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()               {}
func (*BackupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RestoreRequest struct {
	Cluster        string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type           string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Pv             string `protobuf:"bytes,4,opt,name=pv" json:"pv,omitempty"`
	PvSize         int64  `protobuf:"varint,5,opt,name=pv_size,json=pvSize" json:"pv_size,omitempty"`
	Sku            string `protobuf:"bytes,6,opt,name=sku" json:"sku,omitempty"`
	Node           int64  `protobuf:"varint,7,opt,name=node" json:"node,omitempty"`
	SnapshotPhid   string `protobuf:"bytes,8,opt,name=snapshot_phid,json=snapshotPhid" json:"snapshot_phid,omitempty"`
	BucketName     string `protobuf:"bytes,9,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	Credential     string `protobuf:"bytes,10,opt,name=credential" json:"credential,omitempty"`
	Region         string `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	Version        string `protobuf:"bytes,12,opt,name=version" json:"version,omitempty"`
	AuthSecretName string `protobuf:"bytes,13,opt,name=auth_secret_name,json=authSecretName" json:"auth_secret_name,omitempty"`
	Wal            bool   `protobuf:"varint,14,opt,name=wal" json:"wal,omitempty"`
	Dump           bool   `protobuf:"varint,15,opt,name=dump" json:"dump,omitempty"`
	Force          bool   `protobuf:"varint,16,opt,name=force" json:"force,omitempty"`
}

func (m *RestoreRequest) Reset()                    { *m = RestoreRequest{} }
func (m *RestoreRequest) String() string            { return proto.CompactTextString(m) }
func (*RestoreRequest) ProtoMessage()               {}
func (*RestoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DescribeRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *DescribeRequest) Reset()                    { *m = DescribeRequest{} }
func (m *DescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeRequest) ProtoMessage()               {}
func (*DescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DescribeResponse struct {
	Status       *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Phid         string         `protobuf:"bytes,3,opt,name=phid" json:"phid,omitempty"`
	Cluster      string         `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
	Type         string         `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Sku          string         `protobuf:"bytes,6,opt,name=sku" json:"sku,omitempty"`
	Version      string         `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	AutoSnapshot int32          `protobuf:"varint,8,opt,name=auto_snapshot,json=autoSnapshot" json:"auto_snapshot,omitempty"`
	LastBackup   string         `protobuf:"bytes,9,opt,name=last_backup,json=lastBackup" json:"last_backup,omitempty"`
	Kube         *KubeInfo      `protobuf:"bytes,10,opt,name=kube" json:"kube,omitempty"`
	DbStatus     string         `protobuf:"bytes,11,opt,name=db_status,json=dbStatus" json:"db_status,omitempty"`
	AuthSecret   string         `protobuf:"bytes,12,opt,name=auth_secret,json=authSecret" json:"auth_secret,omitempty"`
	Created      string         `protobuf:"bytes,13,opt,name=created" json:"created,omitempty"`
}

func (m *DescribeResponse) Reset()                    { *m = DescribeResponse{} }
func (m *DescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeResponse) ProtoMessage()               {}
func (*DescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DescribeResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeResponse) GetKube() *KubeInfo {
	if m != nil {
		return m.Kube
	}
	return nil
}

type KubeInfo struct {
	Svc  int64 `protobuf:"varint,1,opt,name=svc" json:"svc,omitempty"`
	Pods int64 `protobuf:"varint,2,opt,name=pods" json:"pods,omitempty"`
	Rc   int64 `protobuf:"varint,3,opt,name=rc" json:"rc,omitempty"`
}

func (m *KubeInfo) Reset()                    { *m = KubeInfo{} }
func (m *KubeInfo) String() string            { return proto.CompactTextString(m) }
func (*KubeInfo) ProtoMessage()               {}
func (*KubeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ListResponse struct {
	Status           *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Databases        []*Database    `protobuf:"bytes,2,rep,name=databases" json:"databases,omitempty"`
	DeletedDatabases []*Database    `protobuf:"bytes,3,rep,name=deleted_databases,json=deletedDatabases" json:"deleted_databases,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListResponse) GetDatabases() []*Database {
	if m != nil {
		return m.Databases
	}
	return nil
}

func (m *ListResponse) GetDeletedDatabases() []*Database {
	if m != nil {
		return m.DeletedDatabases
	}
	return nil
}

type Database struct {
	Phid         string `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
	ClusterName  string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName" json:"cluster_name,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Namespace    string `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	Type         string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Sku          string `protobuf:"bytes,6,opt,name=sku" json:"sku,omitempty"`
	Mode         string `protobuf:"bytes,7,opt,name=mode" json:"mode,omitempty"`
	Version      string `protobuf:"bytes,8,opt,name=version" json:"version,omitempty"`
	AuthSecret   string `protobuf:"bytes,9,opt,name=auth_secret,json=authSecret" json:"auth_secret,omitempty"`
	AutoSnapshot int32  `protobuf:"varint,10,opt,name=auto_snapshot,json=autoSnapshot" json:"auto_snapshot,omitempty"`
	PvSize       int64  `protobuf:"varint,11,opt,name=pv_size,json=pvSize" json:"pv_size,omitempty"`
	LastBackup   string `protobuf:"bytes,12,opt,name=last_backup,json=lastBackup" json:"last_backup,omitempty"`
	Status       string `protobuf:"bytes,13,opt,name=status" json:"status,omitempty"`
	Created      string `protobuf:"bytes,14,opt,name=created" json:"created,omitempty"`
	Deleted      string `protobuf:"bytes,15,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *Database) Reset()                    { *m = Database{} }
func (m *Database) String() string            { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()               {}
func (*Database) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type SnapshotListRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *SnapshotListRequest) Reset()                    { *m = SnapshotListRequest{} }
func (m *SnapshotListRequest) String() string            { return proto.CompactTextString(m) }
func (*SnapshotListRequest) ProtoMessage()               {}
func (*SnapshotListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type SnapshotListResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	List   []*Snapshot    `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *SnapshotListResponse) Reset()                    { *m = SnapshotListResponse{} }
func (m *SnapshotListResponse) String() string            { return proto.CompactTextString(m) }
func (*SnapshotListResponse) ProtoMessage()               {}
func (*SnapshotListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SnapshotListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SnapshotListResponse) GetList() []*Snapshot {
	if m != nil {
		return m.List
	}
	return nil
}

type Snapshot struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Phid        string `protobuf:"bytes,2,opt,name=phid" json:"phid,omitempty"`
	DbName      string `protobuf:"bytes,3,opt,name=db_name,json=dbName" json:"db_name,omitempty"`
	DbCluster   string `protobuf:"bytes,4,opt,name=db_cluster,json=dbCluster" json:"db_cluster,omitempty"`
	Provider    string `protobuf:"bytes,5,opt,name=provider" json:"provider,omitempty"`
	CloudCred   string `protobuf:"bytes,6,opt,name=cloud_cred,json=cloudCred" json:"cloud_cred,omitempty"`
	Bucket      string `protobuf:"bytes,7,opt,name=bucket" json:"bucket,omitempty"`
	Region      string `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	Zone        string `protobuf:"bytes,9,opt,name=zone" json:"zone,omitempty"`
	Status      string `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	Process     string `protobuf:"bytes,11,opt,name=process" json:"process,omitempty"`
	RestoreDb   string `protobuf:"bytes,12,opt,name=restore_db,json=restoreDb" json:"restore_db,omitempty"`
	RestoreSnap string `protobuf:"bytes,13,opt,name=restore_snap,json=restoreSnap" json:"restore_snap,omitempty"`
	Created     string `protobuf:"bytes,14,opt,name=created" json:"created,omitempty"`
}

func (m *Snapshot) Reset()                    { *m = Snapshot{} }
func (m *Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()               {}
func (*Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func init() {
	proto.RegisterType((*CreateRequest)(nil), "db.CreateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "db.DeleteRequest")
	proto.RegisterType((*BackupRequest)(nil), "db.BackupRequest")
	proto.RegisterType((*RestoreRequest)(nil), "db.RestoreRequest")
	proto.RegisterType((*DescribeRequest)(nil), "db.DescribeRequest")
	proto.RegisterType((*DescribeResponse)(nil), "db.DescribeResponse")
	proto.RegisterType((*KubeInfo)(nil), "db.kubeInfo")
	proto.RegisterType((*ListRequest)(nil), "db.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "db.ListResponse")
	proto.RegisterType((*Database)(nil), "db.Database")
	proto.RegisterType((*SnapshotListRequest)(nil), "db.SnapshotListRequest")
	proto.RegisterType((*SnapshotListResponse)(nil), "db.SnapshotListResponse")
	proto.RegisterType((*Snapshot)(nil), "db.Snapshot")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for Databases service

type DatabasesClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	SnapshotList(ctx context.Context, in *SnapshotListRequest, opts ...grpc.CallOption) (*SnapshotListResponse, error)
	Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error)
	List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type databasesClient struct {
	cc *grpc.ClientConn
}

func NewDatabasesClient(cc *grpc.ClientConn) DatabasesClient {
	return &databasesClient{cc}
}

func (c *databasesClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Backup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) SnapshotList(ctx context.Context, in *SnapshotListRequest, opts ...grpc.CallOption) (*SnapshotListResponse, error) {
	out := new(SnapshotListResponse)
	err := grpc.Invoke(ctx, "/db.Databases/SnapshotList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Restore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error) {
	out := new(DescribeResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/db.Databases/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Databases service

type DatabasesServer interface {
	Create(context.Context, *CreateRequest) (*dtypes.VoidResponse, error)
	Delete(context.Context, *DeleteRequest) (*dtypes.VoidResponse, error)
	Backup(context.Context, *BackupRequest) (*dtypes.VoidResponse, error)
	SnapshotList(context.Context, *SnapshotListRequest) (*SnapshotListResponse, error)
	Restore(context.Context, *RestoreRequest) (*dtypes.VoidResponse, error)
	Describe(context.Context, *DescribeRequest) (*DescribeResponse, error)
	List(context.Context, *dtypes.VoidRequest) (*ListResponse, error)
}

func RegisterDatabasesServer(s *grpc.Server, srv DatabasesServer) {
	s.RegisterService(&_Databases_serviceDesc, srv)
}

func _Databases_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Backup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Backup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Backup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_SnapshotList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).SnapshotList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/SnapshotList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).SnapshotList(ctx, req.(*SnapshotListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Restore(ctx, req.(*RestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Describe(ctx, req.(*DescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).List(ctx, req.(*dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Databases_serviceDesc = grpc.ServiceDesc{
	ServiceName: "db.Databases",
	HandlerType: (*DatabasesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Databases_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Databases_Delete_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Databases_Backup_Handler,
		},
		{
			MethodName: "SnapshotList",
			Handler:    _Databases_SnapshotList_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _Databases_Restore_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _Databases_Describe_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Databases_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 1200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x57, 0xc1, 0x6e, 0x23, 0x35,
	0x18, 0x56, 0x32, 0xc9, 0x64, 0xf2, 0x27, 0xcd, 0x66, 0xbd, 0xa5, 0x1d, 0x85, 0x5d, 0x58, 0x06,
	0x69, 0x55, 0x8a, 0x48, 0xd8, 0xae, 0x90, 0x58, 0x2e, 0x20, 0xb6, 0x17, 0xa4, 0x15, 0x82, 0xa9,
	0xc4, 0x35, 0xcc, 0x8c, 0xbd, 0x6d, 0xd4, 0x34, 0x33, 0x3b, 0x9e, 0x04, 0xb1, 0x55, 0x2f, 0xbc,
	0xc2, 0x9e, 0x11, 0x4f, 0xc1, 0x91, 0xa7, 0xe0, 0x05, 0x38, 0xf0, 0x0e, 0x5c, 0x38, 0x60, 0xff,
	0xb6, 0x13, 0x4f, 0x67, 0x02, 0x2d, 0xda, 0x4b, 0x6b, 0x7f, 0x1e, 0xfb, 0xb7, 0xbf, 0xef, 0xf3,
	0xef, 0x3f, 0xe0, 0xd1, 0x78, 0x9c, 0xe5, 0x69, 0x91, 0x92, 0x26, 0x8d, 0x47, 0xf7, 0x4f, 0xd3,
	0xf4, 0x74, 0xce, 0x26, 0x51, 0x36, 0x9b, 0x44, 0x8b, 0x45, 0x5a, 0x44, 0xc5, 0x2c, 0x5d, 0x70,
	0xf5, 0xc5, 0x68, 0x4f, 0xc2, 0xb4, 0xf8, 0x31, 0x63, 0x7c, 0x82, 0x7f, 0x15, 0x1e, 0xfc, 0xd6,
	0x84, 0x9d, 0x67, 0x39, 0x8b, 0x0a, 0x16, 0xb2, 0x97, 0x4b, 0xc6, 0x0b, 0xe2, 0x43, 0x27, 0x99,
	0x2f, 0x79, 0xc1, 0x72, 0xbf, 0xf1, 0xb0, 0x71, 0xd0, 0x0d, 0x4d, 0x97, 0x10, 0x68, 0x2d, 0xa2,
	0x0b, 0xe6, 0x37, 0x11, 0xc6, 0xb6, 0xc4, 0xe4, 0x72, 0xbe, 0xa3, 0x30, 0xd9, 0x26, 0x43, 0x70,
	0xf8, 0xf9, 0xd2, 0x6f, 0x21, 0x24, 0x9b, 0x72, 0xcd, 0x15, 0xcb, 0xb9, 0xd8, 0x8f, 0xdf, 0x56,
	0x6b, 0xea, 0x2e, 0x19, 0x40, 0x33, 0x5b, 0xf9, 0x2e, 0x82, 0xa2, 0x45, 0xf6, 0xa1, 0x93, 0xad,
	0xa6, 0x7c, 0xf6, 0x8a, 0xf9, 0x1d, 0x01, 0x3a, 0xa1, 0x9b, 0xad, 0x4e, 0x44, 0x8f, 0x1c, 0xc0,
	0x30, 0x5a, 0x16, 0x67, 0x53, 0xce, 0x92, 0x9c, 0x15, 0x53, 0xdc, 0x88, 0x87, 0xd3, 0x06, 0x12,
	0x3f, 0x41, 0xf8, 0x6b, 0xbd, 0xa5, 0x45, 0x4a, 0x99, 0xdf, 0xc5, 0xf9, 0xd8, 0x26, 0xef, 0x00,
	0x88, 0x71, 0xca, 0x16, 0xc5, 0x2c, 0x9a, 0xfb, 0x80, 0xf3, 0x2c, 0x84, 0xbc, 0x0b, 0xbd, 0x78,
	0x99, 0x9c, 0x9b, 0x85, 0x7b, 0xea, 0x03, 0x05, 0xe1, 0xa2, 0x7b, 0xe0, 0xe6, 0xec, 0x54, 0x1e,
	0xa0, 0x8f, 0x63, 0xba, 0x17, 0x7c, 0x0b, 0x3b, 0xc7, 0x6c, 0xce, 0x36, 0xf4, 0x19, 0x42, 0x1a,
	0x16, 0x21, 0x75, 0xc4, 0x59, 0x34, 0x3b, 0x25, 0x9a, 0x83, 0x5f, 0x85, 0x24, 0x5f, 0x46, 0xc9,
	0xf9, 0x32, 0x7b, 0x73, 0x92, 0x5c, 0x3b, 0x5f, 0xab, 0x72, 0xbe, 0xf7, 0x61, 0x87, 0x2f, 0xa2,
	0x8c, 0x9f, 0xa5, 0xfa, 0x13, 0xa5, 0x53, 0xdf, 0x80, 0xf8, 0x51, 0x99, 0x45, 0xb7, 0xc2, 0xe2,
	0x86, 0xa4, 0x8e, 0x4d, 0xd2, 0x2d, 0xb4, 0x13, 0xd6, 0xf9, 0x41, 0x2c, 0x2d, 0xa5, 0xf3, 0x42,
	0xd9, 0x94, 0xa7, 0xa1, 0xcb, 0x8b, 0x0c, 0x35, 0xf3, 0x42, 0x6c, 0x93, 0x5d, 0x68, 0xbf, 0x48,
	0xf3, 0x44, 0xe9, 0xe4, 0x85, 0xaa, 0x13, 0xfc, 0xe2, 0xc0, 0x20, 0x14, 0x74, 0xa5, 0xf9, 0x1b,
	0xf4, 0xb2, 0xf2, 0x67, 0xab, 0xce, 0x9f, 0xed, 0x92, 0x3f, 0xb5, 0xe9, 0xdd, 0x8d, 0xe9, 0x8d,
	0x0f, 0x3b, 0x96, 0x0f, 0x6d, 0x9a, 0xb3, 0xb3, 0x19, 0xd5, 0x34, 0xac, 0x69, 0xfe, 0x46, 0x60,
	0xd7, 0xc5, 0xea, 0x56, 0xc4, 0xfa, 0x2f, 0x37, 0x6f, 0x74, 0xe8, 0x95, 0x74, 0xb0, 0xae, 0x61,
	0xbf, 0x7c, 0x0d, 0xeb, 0x14, 0xda, 0xf9, 0x37, 0x85, 0x06, 0x55, 0x85, 0xee, 0xd4, 0x29, 0x34,
	0xb4, 0x15, 0xfa, 0x1c, 0xee, 0x1c, 0x33, 0x9e, 0xe4, 0xb3, 0xf8, 0xff, 0x29, 0x14, 0xfc, 0xdd,
	0x84, 0xe1, 0x66, 0x05, 0x9e, 0x89, 0xfc, 0xc6, 0xc8, 0x23, 0x70, 0xb9, 0x48, 0x76, 0x4b, 0x8e,
	0x2b, 0xf4, 0x8e, 0x06, 0x63, 0x95, 0xe7, 0xc6, 0x27, 0x88, 0x86, 0x7a, 0x74, 0x9b, 0xe4, 0x28,
	0x83, 0x96, 0x5c, 0xb6, 0xed, 0x2d, 0xb5, 0x2a, 0x5b, 0x42, 0x83, 0xb4, 0xab, 0xc9, 0xce, 0xad,
	0x4d, 0x76, 0x9d, 0x32, 0xcb, 0x42, 0x7d, 0xc1, 0x66, 0x3a, 0x35, 0x6a, 0xa3, 0xfa, 0xed, 0xb0,
	0x2f, 0xc1, 0x13, 0x8d, 0x49, 0xf5, 0xe7, 0x11, 0x2f, 0xa6, 0x31, 0xa6, 0x00, 0xa3, 0xbe, 0x84,
	0x54, 0x52, 0x20, 0x0f, 0xa1, 0x75, 0xbe, 0x8c, 0x19, 0xea, 0xde, 0x3b, 0xea, 0x8f, 0xc5, 0x2b,
	0x20, 0xfb, 0x5f, 0x2d, 0x5e, 0xa4, 0x21, 0x8e, 0x90, 0xb7, 0xa1, 0x4b, 0xe3, 0xa9, 0x26, 0x45,
	0x59, 0x40, 0xbc, 0x15, 0x8a, 0x0e, 0xb9, 0xbe, 0x25, 0xb5, 0x36, 0x02, 0x6c, 0x54, 0xc6, 0xf3,
	0xe3, 0x8b, 0x40, 0xb5, 0x05, 0x4c, 0x37, 0xf8, 0x02, 0x3c, 0x13, 0x09, 0xcf, 0xbd, 0x4a, 0x90,
	0x72, 0x27, 0x94, 0x4d, 0xe4, 0x32, 0xa5, 0x1c, 0xf9, 0x15, 0x7e, 0x97, 0x6d, 0x79, 0x7d, 0xf2,
	0x04, 0xd9, 0x75, 0x42, 0xd1, 0x0a, 0x76, 0xa0, 0xf7, 0x7c, 0xc6, 0x0b, 0xad, 0x7e, 0xf0, 0x73,
	0x03, 0xfa, 0xaa, 0x7f, 0x4b, 0x2d, 0x0f, 0xc5, 0x09, 0xa3, 0x22, 0x8a, 0x23, 0xce, 0x64, 0x40,
	0xc7, 0x10, 0x71, 0xac, 0xc1, 0x70, 0x33, 0x4c, 0x9e, 0xc2, 0x5d, 0x8a, 0x29, 0x9a, 0x4e, 0x37,
	0x73, 0x9c, 0x9a, 0x39, 0x43, 0xfd, 0x99, 0x01, 0x78, 0xf0, 0xda, 0x01, 0xcf, 0xf4, 0xd6, 0x5e,
	0x69, 0x58, 0x5e, 0x79, 0x0f, 0xfa, 0xda, 0x1c, 0x53, 0xcb, 0x5b, 0x3d, 0x8d, 0xad, 0x9f, 0x23,
	0x39, 0xe4, 0x58, 0xb6, 0xbb, 0x0f, 0x5d, 0xf9, 0x9f, 0x67, 0x51, 0x62, 0x92, 0xf1, 0x06, 0xb8,
	0xa1, 0xcd, 0xc4, 0x57, 0x17, 0x26, 0xbd, 0x88, 0xaf, 0x64, 0xdb, 0xb6, 0x9e, 0x57, 0xb6, 0xde,
	0x35, 0xd5, 0xbb, 0x15, 0xd5, 0x2b, 0xde, 0x84, 0x1a, 0x6f, 0x5a, 0xd9, 0xaf, 0x57, 0xca, 0x7e,
	0xd7, 0x4c, 0xdb, 0xaf, 0x98, 0x76, 0x6f, 0x2d, 0xac, 0xf2, 0x94, 0x11, 0xd2, 0x32, 0xdb, 0xa0,
	0x64, 0x36, 0x39, 0xa2, 0xf5, 0xc0, 0xcc, 0x22, 0x46, 0x74, 0x37, 0xf8, 0x00, 0xee, 0x99, 0x1d,
	0x59, 0x66, 0x5a, 0x13, 0xdd, 0xb0, 0x12, 0xc6, 0xf7, 0xb0, 0x5b, 0xfe, 0xf4, 0x96, 0x3e, 0x13,
	0x77, 0x6d, 0x2e, 0xe6, 0xd9, 0x16, 0x33, 0xeb, 0x85, 0x38, 0x12, 0xfc, 0xd5, 0x04, 0x6f, 0xcd,
	0x4f, 0xcd, 0x16, 0xd6, 0xb6, 0x69, 0x5a, 0xb6, 0x11, 0x3c, 0x8a, 0x0b, 0x6a, 0xd9, 0xc2, 0xa5,
	0x31, 0x9a, 0xe5, 0x01, 0x80, 0x18, 0x28, 0xa7, 0x1f, 0x71, 0x97, 0x9f, 0xe9, 0x04, 0x34, 0x02,
	0x4f, 0x94, 0x6d, 0xab, 0x19, 0x15, 0x83, 0xca, 0x1d, 0xeb, 0xbe, 0x9c, 0x9a, 0xcc, 0xd3, 0x25,
	0x9d, 0xca, 0x87, 0x40, 0x1b, 0xa5, 0x8b, 0x88, 0xa8, 0xef, 0xa8, 0x14, 0x40, 0xbd, 0x20, 0xe6,
	0x6d, 0x56, 0x3d, 0xeb, 0xad, 0xf0, 0x4a, 0x6f, 0x85, 0xd8, 0xf6, 0xab, 0x74, 0x61, 0x5e, 0x1f,
	0x6c, 0x5b, 0x22, 0xc2, 0x75, 0x11, 0xc5, 0x36, 0x12, 0xc6, 0x4d, 0xb6, 0x31, 0x5d, 0xb9, 0xa9,
	0x5c, 0x3d, 0xc9, 0x53, 0x1a, 0x6b, 0x5b, 0x74, 0x35, 0x72, 0x1c, 0xcb, 0xeb, 0x63, 0x86, 0xa5,
	0xef, 0xb4, 0x37, 0x7a, 0x1a, 0x93, 0xb4, 0x6e, 0x37, 0xc8, 0xd1, 0x1f, 0x6d, 0xe8, 0xae, 0xaf,
	0x2a, 0xa1, 0xe0, 0xaa, 0x3a, 0x96, 0xdc, 0x95, 0x2a, 0x95, 0x6a, 0xda, 0xd1, 0xae, 0x91, 0xf7,
	0xbb, 0x74, 0x46, 0x8d, 0x09, 0x82, 0xc7, 0x3f, 0xfd, 0xfe, 0xe7, 0xeb, 0xe6, 0x87, 0xa3, 0x47,
	0xa2, 0x66, 0xce, 0x78, 0x22, 0x2e, 0x10, 0x16, 0xcf, 0x34, 0x9e, 0xac, 0x3e, 0x1e, 0x3f, 0x9e,
	0x5c, 0x6a, 0x19, 0xae, 0x26, 0x97, 0x72, 0xf2, 0xd5, 0x67, 0x8d, 0x43, 0x72, 0x06, 0xae, 0x2a,
	0xf7, 0x54, 0x94, 0x52, 0xe9, 0xb7, 0x25, 0xca, 0x27, 0x18, 0x65, 0x72, 0xf8, 0xd1, 0xcd, 0xa2,
	0x4c, 0x2e, 0xa5, 0x2d, 0xae, 0xc8, 0x39, 0xb8, 0xfa, 0xea, 0x60, 0xa4, 0x52, 0x41, 0xb8, 0x25,
	0xd2, 0xa7, 0x18, 0xe9, 0x28, 0xd8, 0x12, 0x49, 0xdd, 0xcd, 0xda, 0x63, 0xbd, 0x84, 0xbe, 0x7d,
	0x4d, 0xc8, 0xbe, 0x6d, 0x74, 0xeb, 0x8e, 0x8d, 0xfc, 0xea, 0x80, 0x0e, 0x3e, 0xc6, 0xe0, 0x07,
	0x64, 0x0b, 0x99, 0x26, 0xad, 0x70, 0x73, 0xbe, 0x05, 0x74, 0x74, 0xb1, 0x46, 0x88, 0x5c, 0xb4,
	0x5c, 0xb9, 0x6d, 0x39, 0xe1, 0x53, 0x0c, 0xf2, 0x64, 0x34, 0xae, 0x0f, 0xa2, 0x7d, 0x53, 0x7b,
	0x44, 0x26, 0x32, 0xb9, 0xae, 0x1c, 0xc8, 0x3d, 0xa5, 0x5d, 0xa9, 0x12, 0x91, 0x11, 0x6d, 0xf0,
	0x66, 0xc7, 0xb2, 0x22, 0xa9, 0x63, 0x3d, 0x87, 0x16, 0x32, 0x78, 0xaf, 0xbc, 0x7f, 0x15, 0x62,
	0x28, 0x43, 0x94, 0x58, 0x7b, 0x80, 0xcb, 0xef, 0x93, 0xb7, 0x6a, 0x97, 0x8f, 0x5d, 0xfc, 0x91,
	0xf6, 0xe4, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1, 0xa0, 0x07, 0x7b, 0xea, 0x0d, 0x00, 0x00,
}
