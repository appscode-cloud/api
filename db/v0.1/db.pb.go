// Code generated by protoc-gen-go.
// source: db.proto
// DO NOT EDIT!

/*
Package db is a generated protocol buffer package.

It is generated from these files:
	db.proto
	slaves.proto

It has these top-level messages:
	CreateRequest
	DeleteRequest
	BackupRequest
	RestoreRequest
	DescribeRequest
	DescribeResponse
	KubeInfo
	ListRequest
	ListResponse
	Database
	SnapshotListRequest
	SnapshotListResponse
	Snapshot
	SlaveAddRequest
*/
package db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CreateRequest struct {
	Type        string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Sku         string `protobuf:"bytes,2,opt,name=sku" json:"sku,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Cluster     string `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
	Pv          string `protobuf:"bytes,5,opt,name=pv" json:"pv,omitempty"`
	PvSize      int64  `protobuf:"varint,6,opt,name=pv_size,json=pvSize" json:"pv_size,omitempty"`
	Node        int32  `protobuf:"varint,7,opt,name=node" json:"node,omitempty"`
	Region      string `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	BucketName  string `protobuf:"bytes,9,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	Credential  string `protobuf:"bytes,10,opt,name=credential" json:"credential,omitempty"`
	Version     string `protobuf:"bytes,11,opt,name=version" json:"version,omitempty"`
	GfsEndpoint string `protobuf:"bytes,12,opt,name=gfs_endpoint,json=gfsEndpoint" json:"gfs_endpoint,omitempty"`
	GfsDisk     string `protobuf:"bytes,13,opt,name=gfs_disk,json=gfsDisk" json:"gfs_disk,omitempty"`
	SetPassword bool   `protobuf:"varint,14,opt,name=set_password,json=setPassword" json:"set_password,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DeleteRequest struct {
	Type    string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cluster string `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type BackupRequest struct {
	Cluster        string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type           string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	BucketName     string `protobuf:"bytes,4,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	SecretName     string `protobuf:"bytes,5,opt,name=secret_name,json=secretName" json:"secret_name,omitempty"`
	SnapshotName   string `protobuf:"bytes,6,opt,name=snapshot_name,json=snapshotName" json:"snapshot_name,omitempty"`
	Credential     string `protobuf:"bytes,7,opt,name=credential" json:"credential,omitempty"`
	Region         string `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	AuthSecretName string `protobuf:"bytes,9,opt,name=auth_secret_name,json=authSecretName" json:"auth_secret_name,omitempty"`
	Force          bool   `protobuf:"varint,10,opt,name=force" json:"force,omitempty"`
}

func (m *BackupRequest) Reset()                    { *m = BackupRequest{} }
func (m *BackupRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()               {}
func (*BackupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RestoreRequest struct {
	Cluster      string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Pv           string `protobuf:"bytes,4,opt,name=pv" json:"pv,omitempty"`
	PvSize       int64  `protobuf:"varint,5,opt,name=pv_size,json=pvSize" json:"pv_size,omitempty"`
	Sku          string `protobuf:"bytes,6,opt,name=sku" json:"sku,omitempty"`
	Node         int32  `protobuf:"varint,7,opt,name=node" json:"node,omitempty"`
	SnapshotPhid string `protobuf:"bytes,8,opt,name=snapshot_phid,json=snapshotPhid" json:"snapshot_phid,omitempty"`
	BucketName   string `protobuf:"bytes,9,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	Credential   string `protobuf:"bytes,10,opt,name=credential" json:"credential,omitempty"`
	Region       string `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	SecretName   string `protobuf:"bytes,12,opt,name=secret_name,json=secretName" json:"secret_name,omitempty"`
	Version      string `protobuf:"bytes,13,opt,name=version" json:"version,omitempty"`
	Force        bool   `protobuf:"varint,14,opt,name=force" json:"force,omitempty"`
}

func (m *RestoreRequest) Reset()                    { *m = RestoreRequest{} }
func (m *RestoreRequest) String() string            { return proto.CompactTextString(m) }
func (*RestoreRequest) ProtoMessage()               {}
func (*RestoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DescribeRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *DescribeRequest) Reset()                    { *m = DescribeRequest{} }
func (m *DescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeRequest) ProtoMessage()               {}
func (*DescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DescribeResponse struct {
	Status       *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Phid         string         `protobuf:"bytes,3,opt,name=phid" json:"phid,omitempty"`
	Cluster      string         `protobuf:"bytes,4,opt,name=cluster" json:"cluster,omitempty"`
	Type         string         `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Sku          string         `protobuf:"bytes,6,opt,name=sku" json:"sku,omitempty"`
	Version      string         `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	AutoSnapshot int32          `protobuf:"varint,8,opt,name=auto_snapshot,json=autoSnapshot" json:"auto_snapshot,omitempty"`
	LastBackup   string         `protobuf:"bytes,9,opt,name=last_backup,json=lastBackup" json:"last_backup,omitempty"`
	Kube         *KubeInfo      `protobuf:"bytes,10,opt,name=kube" json:"kube,omitempty"`
	DbStatus     string         `protobuf:"bytes,11,opt,name=db_status,json=dbStatus" json:"db_status,omitempty"`
	Created      string         `protobuf:"bytes,12,opt,name=created" json:"created,omitempty"`
}

func (m *DescribeResponse) Reset()                    { *m = DescribeResponse{} }
func (m *DescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeResponse) ProtoMessage()               {}
func (*DescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DescribeResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeResponse) GetKube() *KubeInfo {
	if m != nil {
		return m.Kube
	}
	return nil
}

type KubeInfo struct {
	Svc  int64 `protobuf:"varint,1,opt,name=svc" json:"svc,omitempty"`
	Pods int64 `protobuf:"varint,2,opt,name=pods" json:"pods,omitempty"`
	Rc   int64 `protobuf:"varint,3,opt,name=rc" json:"rc,omitempty"`
}

func (m *KubeInfo) Reset()                    { *m = KubeInfo{} }
func (m *KubeInfo) String() string            { return proto.CompactTextString(m) }
func (*KubeInfo) ProtoMessage()               {}
func (*KubeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ListResponse struct {
	Status    *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Databases []*Database    `protobuf:"bytes,2,rep,name=databases" json:"databases,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListResponse) GetDatabases() []*Database {
	if m != nil {
		return m.Databases
	}
	return nil
}

type Database struct {
	Phid                string `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
	ClusterName         string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName" json:"cluster_name,omitempty"`
	KubernetesService   string `protobuf:"bytes,3,opt,name=kubernetes_service,json=kubernetesService" json:"kubernetes_service,omitempty"`
	Namespace           string `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	Type                string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Sku                 string `protobuf:"bytes,6,opt,name=sku" json:"sku,omitempty"`
	Version             string `protobuf:"bytes,7,opt,name=version" json:"version,omitempty"`
	ArchiveBucket       string `protobuf:"bytes,8,opt,name=archive_bucket,json=archiveBucket" json:"archive_bucket,omitempty"`
	ArchiveBucketRegion string `protobuf:"bytes,9,opt,name=archive_bucket_region,json=archiveBucketRegion" json:"archive_bucket_region,omitempty"`
	AutoSnapshot        int32  `protobuf:"varint,10,opt,name=auto_snapshot,json=autoSnapshot" json:"auto_snapshot,omitempty"`
	PvSize              int64  `protobuf:"varint,11,opt,name=pv_size,json=pvSize" json:"pv_size,omitempty"`
	Created             string `protobuf:"bytes,12,opt,name=created" json:"created,omitempty"`
	LastBackup          string `protobuf:"bytes,13,opt,name=last_backup,json=lastBackup" json:"last_backup,omitempty"`
}

func (m *Database) Reset()                    { *m = Database{} }
func (m *Database) String() string            { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()               {}
func (*Database) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type SnapshotListRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *SnapshotListRequest) Reset()                    { *m = SnapshotListRequest{} }
func (m *SnapshotListRequest) String() string            { return proto.CompactTextString(m) }
func (*SnapshotListRequest) ProtoMessage()               {}
func (*SnapshotListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type SnapshotListResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	List   []*Snapshot    `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *SnapshotListResponse) Reset()                    { *m = SnapshotListResponse{} }
func (m *SnapshotListResponse) String() string            { return proto.CompactTextString(m) }
func (*SnapshotListResponse) ProtoMessage()               {}
func (*SnapshotListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SnapshotListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SnapshotListResponse) GetList() []*Snapshot {
	if m != nil {
		return m.List
	}
	return nil
}

type Snapshot struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Phid        string `protobuf:"bytes,2,opt,name=phid" json:"phid,omitempty"`
	DbName      string `protobuf:"bytes,3,opt,name=db_name,json=dbName" json:"db_name,omitempty"`
	DbCluster   string `protobuf:"bytes,4,opt,name=db_cluster,json=dbCluster" json:"db_cluster,omitempty"`
	Provider    string `protobuf:"bytes,5,opt,name=provider" json:"provider,omitempty"`
	CloudCred   string `protobuf:"bytes,6,opt,name=cloud_cred,json=cloudCred" json:"cloud_cred,omitempty"`
	Bucket      string `protobuf:"bytes,7,opt,name=bucket" json:"bucket,omitempty"`
	Region      string `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	Zone        string `protobuf:"bytes,9,opt,name=zone" json:"zone,omitempty"`
	Status      string `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	Process     string `protobuf:"bytes,11,opt,name=process" json:"process,omitempty"`
	RestoreDb   string `protobuf:"bytes,12,opt,name=restore_db,json=restoreDb" json:"restore_db,omitempty"`
	RestoreSnap string `protobuf:"bytes,13,opt,name=restore_snap,json=restoreSnap" json:"restore_snap,omitempty"`
	Created     string `protobuf:"bytes,14,opt,name=created" json:"created,omitempty"`
}

func (m *Snapshot) Reset()                    { *m = Snapshot{} }
func (m *Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()               {}
func (*Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func init() {
	proto.RegisterType((*CreateRequest)(nil), "db.CreateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "db.DeleteRequest")
	proto.RegisterType((*BackupRequest)(nil), "db.BackupRequest")
	proto.RegisterType((*RestoreRequest)(nil), "db.RestoreRequest")
	proto.RegisterType((*DescribeRequest)(nil), "db.DescribeRequest")
	proto.RegisterType((*DescribeResponse)(nil), "db.DescribeResponse")
	proto.RegisterType((*KubeInfo)(nil), "db.kubeInfo")
	proto.RegisterType((*ListRequest)(nil), "db.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "db.ListResponse")
	proto.RegisterType((*Database)(nil), "db.Database")
	proto.RegisterType((*SnapshotListRequest)(nil), "db.SnapshotListRequest")
	proto.RegisterType((*SnapshotListResponse)(nil), "db.SnapshotListResponse")
	proto.RegisterType((*Snapshot)(nil), "db.Snapshot")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for Databases service

type DatabasesClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	SnapshotList(ctx context.Context, in *SnapshotListRequest, opts ...grpc.CallOption) (*SnapshotListResponse, error)
	Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error)
	List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type databasesClient struct {
	cc *grpc.ClientConn
}

func NewDatabasesClient(cc *grpc.ClientConn) DatabasesClient {
	return &databasesClient{cc}
}

func (c *databasesClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Backup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) SnapshotList(ctx context.Context, in *SnapshotListRequest, opts ...grpc.CallOption) (*SnapshotListResponse, error) {
	out := new(SnapshotListResponse)
	err := grpc.Invoke(ctx, "/db.Databases/SnapshotList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Restore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Describe(ctx context.Context, in *DescribeRequest, opts ...grpc.CallOption) (*DescribeResponse, error) {
	out := new(DescribeResponse)
	err := grpc.Invoke(ctx, "/db.Databases/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/db.Databases/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Databases service

type DatabasesServer interface {
	Create(context.Context, *CreateRequest) (*dtypes.VoidResponse, error)
	Delete(context.Context, *DeleteRequest) (*dtypes.VoidResponse, error)
	Backup(context.Context, *BackupRequest) (*dtypes.VoidResponse, error)
	SnapshotList(context.Context, *SnapshotListRequest) (*SnapshotListResponse, error)
	Restore(context.Context, *RestoreRequest) (*dtypes.VoidResponse, error)
	Describe(context.Context, *DescribeRequest) (*DescribeResponse, error)
	List(context.Context, *dtypes.VoidRequest) (*ListResponse, error)
}

func RegisterDatabasesServer(s *grpc.Server, srv DatabasesServer) {
	s.RegisterService(&_Databases_serviceDesc, srv)
}

func _Databases_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Backup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Backup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Backup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_SnapshotList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).SnapshotList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/SnapshotList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).SnapshotList(ctx, req.(*SnapshotListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Restore(ctx, req.(*RestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Describe(ctx, req.(*DescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/db.Databases/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).List(ctx, req.(*dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Databases_serviceDesc = grpc.ServiceDesc{
	ServiceName: "db.Databases",
	HandlerType: (*DatabasesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Databases_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Databases_Delete_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Databases_Backup_Handler,
		},
		{
			MethodName: "SnapshotList",
			Handler:    _Databases_SnapshotList_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _Databases_Restore_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _Databases_Describe_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Databases_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 1213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x57, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x96, 0xff, 0xc6, 0x76, 0x8d, 0x6d, 0xb2, 0x9d, 0xb0, 0x3b, 0x98, 0x5d, 0x76, 0x19, 0xc8,
	0x2a, 0x1b, 0x41, 0xbc, 0x84, 0x1b, 0x17, 0xd0, 0x26, 0x1c, 0x90, 0x10, 0x5a, 0x26, 0x12, 0x17,
	0x90, 0x86, 0xf9, 0xe9, 0x24, 0xa3, 0x98, 0x99, 0x61, 0x7a, 0x6c, 0xc4, 0x46, 0xb9, 0xf0, 0x0a,
	0x3c, 0x01, 0x3c, 0x01, 0xef, 0xc2, 0x91, 0x2b, 0x0f, 0xc0, 0x01, 0x89, 0x2b, 0xdd, 0xd5, 0xdd,
	0x76, 0xb7, 0x7f, 0x22, 0x2d, 0xcb, 0x25, 0xea, 0xfe, 0xaa, 0x5c, 0x5d, 0xfd, 0xd5, 0x57, 0x35,
	0x1d, 0xe8, 0xa5, 0xf1, 0x51, 0x59, 0x15, 0x75, 0x41, 0x9a, 0x69, 0x3c, 0xbe, 0x7f, 0x51, 0x14,
	0x17, 0x53, 0x3a, 0x89, 0xca, 0x6c, 0x12, 0xe5, 0x79, 0x51, 0x47, 0x75, 0x56, 0xe4, 0x4c, 0x7a,
	0x8c, 0xef, 0x0a, 0x38, 0xad, 0x7f, 0x2c, 0x29, 0x9b, 0xe0, 0x5f, 0x89, 0xfb, 0x7f, 0x37, 0x61,
	0x78, 0x52, 0xd1, 0xa8, 0xa6, 0x01, 0xfd, 0x7e, 0x46, 0x59, 0x4d, 0x08, 0xb4, 0x85, 0x83, 0xd7,
	0x78, 0xd4, 0x38, 0xe8, 0x07, 0xb8, 0x26, 0x3b, 0xd0, 0x62, 0x57, 0x33, 0xaf, 0x89, 0x90, 0x58,
	0x0a, 0xaf, 0x3c, 0xfa, 0x8e, 0x7a, 0x2d, 0xe9, 0x25, 0xd6, 0xc4, 0x83, 0x6e, 0x32, 0x9d, 0xb1,
	0x9a, 0x56, 0x5e, 0x1b, 0x61, 0xbd, 0x25, 0x23, 0x68, 0x96, 0x73, 0xaf, 0x83, 0x20, 0x5f, 0x91,
	0x7b, 0xd0, 0x2d, 0xe7, 0x21, 0xcb, 0x5e, 0x50, 0xcf, 0xe1, 0x60, 0x2b, 0x70, 0xca, 0xf9, 0x19,
	0xdf, 0x61, 0xd8, 0x22, 0xa5, 0x5e, 0x97, 0xa3, 0x9d, 0x00, 0xd7, 0xe4, 0x2e, 0x38, 0x15, 0xbd,
	0xe0, 0x77, 0xf1, 0x7a, 0x18, 0x40, 0xed, 0xc8, 0x43, 0x70, 0xe3, 0x59, 0x72, 0x45, 0xeb, 0x10,
	0x33, 0xe9, 0xa3, 0x11, 0x24, 0xf4, 0x85, 0xc8, 0xe7, 0x2d, 0x80, 0xa4, 0xa2, 0x29, 0xcd, 0xeb,
	0x2c, 0x9a, 0x7a, 0x20, 0xed, 0x4b, 0x44, 0xe4, 0x3b, 0xa7, 0x15, 0x13, 0x91, 0x5d, 0x99, 0xaf,
	0xda, 0x92, 0xb7, 0x61, 0x70, 0x71, 0xce, 0x42, 0x9a, 0xa7, 0x65, 0x91, 0xe5, 0xb5, 0x37, 0x40,
	0xb3, 0xcb, 0xb1, 0x4f, 0x15, 0x44, 0xde, 0x80, 0x9e, 0x70, 0x49, 0x33, 0x76, 0xe5, 0x0d, 0xe5,
	0xaf, 0xf9, 0xfe, 0x94, 0x6f, 0xc5, 0xaf, 0x19, 0xcf, 0xaa, 0x8c, 0x18, 0xfb, 0xa1, 0xa8, 0x52,
	0x6f, 0xc4, 0xcd, 0xbd, 0xc0, 0xe5, 0xd8, 0x73, 0x05, 0xf9, 0x5f, 0xc2, 0xf0, 0x94, 0x4e, 0xe9,
	0xed, 0xac, 0x6b, 0x8e, 0x9b, 0x9b, 0x39, 0x6e, 0x59, 0x1c, 0xfb, 0xbf, 0xf1, 0x4a, 0x3e, 0x8b,
	0x92, 0xab, 0x59, 0xa9, 0x63, 0x1a, 0xbe, 0x0d, 0xbb, 0x1e, 0x9b, 0x22, 0xeb, 0x0c, 0x5a, 0x46,
	0x06, 0x2b, 0x14, 0xb7, 0xd7, 0x28, 0xe6, 0x0e, 0x8c, 0x72, 0x4a, 0x95, 0x83, 0xac, 0x30, 0x48,
	0x08, 0x1d, 0xde, 0x81, 0x21, 0xcb, 0xa3, 0x92, 0x5d, 0x16, 0xca, 0xc5, 0x41, 0x97, 0x81, 0x06,
	0x37, 0x14, 0xaa, 0xbb, 0x56, 0xa8, 0x6d, 0x0a, 0x38, 0x80, 0x9d, 0x68, 0x56, 0x5f, 0x86, 0x66,
	0x0a, 0x52, 0x06, 0x23, 0x81, 0x9f, 0x2d, 0xd3, 0xd8, 0x83, 0xce, 0x79, 0x51, 0x25, 0x14, 0x55,
	0xd0, 0x0b, 0xe4, 0xc6, 0xff, 0xab, 0x09, 0xa3, 0x80, 0x33, 0x55, 0x54, 0xf4, 0xff, 0xe3, 0x4c,
	0x6a, 0xbd, 0xbd, 0x49, 0xeb, 0x1d, 0x4b, 0xeb, 0xaa, 0xa9, 0x1c, 0xbb, 0xa9, 0x56, 0xd5, 0x6f,
	0x12, 0x58, 0x5e, 0x66, 0xa9, 0xa2, 0x60, 0x41, 0xe0, 0x73, 0x8e, 0xbd, 0x7a, 0x2b, 0x2c, 0x19,
	0x76, 0x57, 0x7b, 0xcc, 0x24, 0x77, 0xb0, 0x56, 0x5f, 0xa3, 0x87, 0x86, 0x76, 0x0f, 0x2d, 0x28,
	0x1f, 0x99, 0x94, 0x7f, 0x0c, 0xaf, 0x9d, 0x52, 0x96, 0x54, 0x59, 0xfc, 0xdf, 0x28, 0xf7, 0xff,
	0x68, 0xc2, 0xce, 0x32, 0x02, 0x2b, 0xf9, 0x88, 0xa3, 0xe4, 0x31, 0x38, 0x8c, 0xcf, 0xbb, 0x19,
	0xc3, 0x08, 0xee, 0xf1, 0xe8, 0x48, 0x8e, 0xba, 0xa3, 0x33, 0x44, 0x03, 0x65, 0xdd, 0x56, 0x43,
	0xe4, 0x55, 0xd5, 0x50, 0xac, 0x6f, 0x99, 0x64, 0xba, 0xe2, 0x9d, 0xf5, 0xe9, 0x68, 0x14, 0xd2,
	0x60, 0xa5, 0x6b, 0xb3, 0xc2, 0xcb, 0xc9, 0xa5, 0x59, 0x84, 0xba, 0x7c, 0x58, 0xce, 0x4e, 0x30,
	0x10, 0xe0, 0x99, 0xc2, 0x04, 0xeb, 0xd3, 0x88, 0xd5, 0x61, 0x8c, 0xed, 0xac, 0xcb, 0x29, 0x20,
	0xd9, 0xe0, 0xe4, 0x11, 0xb4, 0xaf, 0x66, 0xb1, 0x54, 0xb3, 0x7b, 0x3c, 0x38, 0xe2, 0x1f, 0x02,
	0xb1, 0xff, 0x2c, 0x3f, 0x2f, 0x02, 0xb4, 0x90, 0x37, 0xa1, 0x9f, 0xc6, 0xa1, 0x22, 0x45, 0xd6,
	0x94, 0x7f, 0x2e, 0x24, 0x1d, 0x78, 0x3d, 0x9c, 0xf9, 0xa9, 0xaa, 0xa8, 0xde, 0xfa, 0x9f, 0x40,
	0x4f, 0x07, 0xc2, 0x6b, 0xcd, 0x13, 0x64, 0xb4, 0x15, 0x88, 0x25, 0x52, 0x55, 0xa4, 0x0c, 0xe9,
	0x6b, 0x05, 0xb8, 0x16, 0x72, 0xaf, 0x12, 0x24, 0xaf, 0x15, 0xf0, 0x95, 0x3f, 0x04, 0xf7, 0xf3,
	0x8c, 0xd5, 0xaa, 0xb8, 0x7e, 0x0c, 0x03, 0xb9, 0x7d, 0xc9, 0x4a, 0x1d, 0xf2, 0xfc, 0xa3, 0x3a,
	0x8a, 0x23, 0x46, 0xc5, 0x79, 0x2d, 0x7d, 0xcd, 0x53, 0x05, 0x06, 0x4b, 0xb3, 0xff, 0x6b, 0x0b,
	0x7a, 0x1a, 0x5f, 0x94, 0xb3, 0x61, 0x94, 0x93, 0x0f, 0x64, 0x55, 0xbf, 0xd0, 0x28, 0xbf, 0xab,
	0x30, 0xd4, 0xf1, 0xfb, 0x40, 0xc4, 0xc5, 0xab, 0x9c, 0xcf, 0x64, 0xc6, 0x07, 0x4a, 0x35, 0xcf,
	0x12, 0xdd, 0xd7, 0x77, 0x96, 0x96, 0x33, 0x69, 0x20, 0xf7, 0xa1, 0x2f, 0x22, 0xb1, 0x32, 0x4a,
	0xf4, 0x58, 0x5c, 0x02, 0xaf, 0x2c, 0x92, 0x7d, 0x18, 0x45, 0x55, 0x72, 0x99, 0xcd, 0x69, 0x28,
	0x7b, 0x58, 0x35, 0xfd, 0x50, 0xa1, 0xcf, 0x10, 0x24, 0xc7, 0xf0, 0xba, 0xed, 0x16, 0xaa, 0x1e,
	0x96, 0x82, 0xd9, 0xb5, 0xbc, 0x03, 0xd9, 0xd0, 0x6b, 0xfa, 0x83, 0x0d, 0xfa, 0x33, 0x46, 0x96,
	0x6b, 0x8d, 0xac, 0xad, 0xc2, 0x59, 0x95, 0xec, 0x70, 0x55, 0xb2, 0xfe, 0x13, 0xd8, 0xd5, 0xf1,
	0x0d, 0x7d, 0x2c, 0x3a, 0xb2, 0x61, 0xb4, 0xf8, 0xb7, 0xb0, 0x67, 0xbb, 0xbe, 0xa4, 0x76, 0x78,
	0x77, 0x4c, 0xf9, 0xef, 0x4c, 0xd9, 0xe8, 0x78, 0x01, 0x5a, 0xfc, 0x7f, 0x9a, 0xd0, 0x5b, 0xdc,
	0x76, 0x43, 0x0a, 0x0b, 0x15, 0x35, 0x0d, 0x15, 0x71, 0x56, 0x78, 0x4b, 0x19, 0xaf, 0x1e, 0x27,
	0x8d, 0x51, 0x3b, 0x0f, 0x00, 0xb8, 0xc1, 0x1e, 0x18, 0xbc, 0xfb, 0x4e, 0xd4, 0xc8, 0x18, 0x43,
	0x8f, 0xbf, 0xb5, 0xe6, 0x59, 0xca, 0x8d, 0x52, 0x11, 0x8b, 0xbd, 0xf8, 0x69, 0x32, 0x2d, 0x66,
	0x69, 0x28, 0x66, 0xb1, 0x12, 0x47, 0x1f, 0x11, 0xfe, 0x28, 0x4b, 0xc5, 0x58, 0x56, 0x02, 0x90,
	0x0a, 0x51, 0xbb, 0xad, 0x1f, 0x44, 0x9e, 0xf6, 0x8b, 0x22, 0xd7, 0x1f, 0x00, 0x5c, 0x0b, 0x5f,
	0xc5, 0x9a, 0x1c, 0xfb, 0x9a, 0x25, 0x5e, 0x4b, 0x9e, 0x46, 0x42, 0x99, 0x9e, 0x0f, 0x7a, 0x2b,
	0x92, 0xaa, 0xe4, 0x57, 0x31, 0x4c, 0x63, 0x55, 0xe8, 0xbe, 0x42, 0x4e, 0x63, 0xd1, 0x4d, 0xda,
	0x2c, 0x54, 0xa4, 0x6a, 0xed, 0x2a, 0x4c, 0xd0, 0x6a, 0xea, 0x64, 0x64, 0xe9, 0xe4, 0xf8, 0x97,
	0x0e, 0xf4, 0x75, 0xaf, 0x32, 0xf2, 0x35, 0x38, 0xf2, 0xf1, 0x49, 0xee, 0x88, 0x2a, 0x59, 0x0f,
	0xd1, 0xf1, 0x9e, 0x2e, 0xef, 0x57, 0x45, 0x96, 0x6a, 0x11, 0xf8, 0x07, 0x3f, 0xfd, 0xfe, 0xe7,
	0xcf, 0x4d, 0x7f, 0xfc, 0x00, 0x1f, 0xba, 0x69, 0x3c, 0x99, 0x3f, 0x3d, 0xfa, 0x60, 0x72, 0xad,
	0xd8, 0xbf, 0x99, 0x5c, 0x8b, 0xdf, 0xdc, 0x7c, 0xd4, 0x38, 0x24, 0x21, 0x38, 0xf2, 0x8d, 0x25,
	0x83, 0x5b, 0xef, 0xad, 0x2d, 0xc1, 0xdf, 0xc3, 0xe0, 0x8f, 0x0f, 0xdf, 0xbd, 0x35, 0xf8, 0xe4,
	0x5a, 0x88, 0xe0, 0x86, 0xc4, 0xe0, 0xa8, 0x79, 0x8c, 0x07, 0x58, 0x8f, 0xaf, 0x2d, 0x07, 0x4c,
	0xf0, 0x80, 0x27, 0xbe, 0x7d, 0x80, 0x6c, 0x9a, 0x8d, 0x97, 0xb8, 0x84, 0x81, 0xd9, 0x0b, 0xe4,
	0x9e, 0xa9, 0x66, 0xa3, 0x91, 0xc6, 0xde, 0xba, 0x41, 0x9d, 0xb9, 0x8f, 0x67, 0x3e, 0x24, 0x36,
	0x63, 0x7a, 0x00, 0x30, 0x7d, 0x1b, 0x0a, 0x5d, 0xf5, 0x16, 0x22, 0x44, 0xc4, 0xb2, 0x1f, 0x46,
	0x5b, 0xee, 0xf3, 0x14, 0x63, 0x1f, 0x8e, 0xf7, 0xad, 0xd8, 0x4a, 0x0a, 0x1b, 0x2f, 0xf4, 0x0d,
	0x9f, 0xd5, 0xea, 0xf3, 0x4d, 0x76, 0x65, 0x5d, 0xac, 0xe7, 0x80, 0x38, 0xc8, 0x04, 0x6f, 0xbd,
	0x84, 0x71, 0x80, 0xbc, 0xc4, 0x09, 0xb4, 0x91, 0xa6, 0x5d, 0x3b, 0x5b, 0x19, 0x79, 0x47, 0x44,
	0xb6, 0xa8, 0xd9, 0xc3, 0xa8, 0x23, 0x32, 0x30, 0xa3, 0xc6, 0x0e, 0xfe, 0x6b, 0xf4, 0xe1, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x16, 0xcf, 0x63, 0xf6, 0x60, 0x0d, 0x00, 0x00,
}
