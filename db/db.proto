syntax = "proto3";

package db;

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

service Databases {
  rpc Create(CreateRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put : "/api/db/v0/{cluster}/{type}"
      body : "*"
    };
  }

  rpc Delete(DeleteRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/api/db/v0/{cluster}/{type}/{name}"
    };
  }

  rpc Backup(BackupRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      post: "/api/db/v0/backup/{cluster}/{type}"
      body: "*"
    };
  }

  rpc Restore(RestoreRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put: "/api/db/v0/restore/{cluster}/{type}"
      body: "*"
    };
  }

  rpc Describe(DescribeRequest) returns (DescribeResponse) {
    option (google.api.http) = {
      get: "/api/db/v0/{cluster}/{type}/{name}"
    };
  }

  rpc List(dtypes.VoidRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/api/db/v0"
    };
  }
}


message CreateRequest {
  string type = 1;
  string sku = 2;
  string config = 3;
  string cluster = 4;
  string pv = 5;
  int64 pv_size = 6;
  int32 node = 7;
  string name = 8;
  string bucket_name = 9;
  string credential = 10;
  string region = 11;
}

message DeleteRequest {
  string type = 1;
  string name = 2;
  string cluster = 3;
}

message BackupRequest {
  string cluster = 1;
  string name = 2;
  string type = 3;
  string bucket_name = 4;
  string secret_name = 5;
  string credential = 6;
  string region = 7;
}

message RestoreRequest {
  string cluster = 1;
  string name = 2;
  string type = 3;
  string pv = 4;
  int64 pv_size = 5;
  string config = 6;
  int32 node = 7;
  string snap_time = 8;
  string bucket_name = 9;
  string credential = 10;
  string region = 11;
  string secret_name = 12;
}

message DescribeRequest {
  string cluster = 1;
  string type = 2;
  string name = 3;
}

message DescribeResponse {
  dtypes.Status status = 1;
  repeated DbPodSpecs pods = 2;
  string service_name = 3;
  string service_ip = 4;
}

message DbPodSpecs {
  string name = 1;
  string phase = 2;
  string condition = 3;
  string status = 4;
  string type = 5;
}

message ListResponse {
  dtypes.Status status = 1;
  repeated Database databases = 2;
}

message Database {
  string phid = 1;
  string kubernetes_phid = 2;
  string kubernetes_service = 3;
  string type = 4;
  string sku = 5;
  string archive_bucket = 6;
  string archive_bucket_region = 7;
  int32 auto_snapshot = 8;
  int64 pv_size = 9;
  string created = 10;
}
