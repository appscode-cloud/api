// Code generated by protoc-gen-go.
// source: mailinglist.proto
// DO NOT EDIT!

/*
Package mailinglist is a generated protocol buffer package.

It is generated from these files:
	mailinglist.proto

It has these top-level messages:
	SendEmailRequest
	SubscribeRequest
	UnsubscribeRequest
*/
package mailinglist

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type SendEmailRequest struct {
	SenderName  string `protobuf:"bytes,1,opt,name=sender_name" json:"sender_name,omitempty"`
	SenderEmail string `protobuf:"bytes,2,opt,name=sender_email" json:"sender_email,omitempty"`
	Subject     string `protobuf:"bytes,3,opt,name=subject" json:"subject,omitempty"`
	Body        string `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
}

func (m *SendEmailRequest) Reset()                    { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string            { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()               {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SubscribeRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *SubscribeRequest) Reset()                    { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()               {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type UnsubscribeRequest struct {
	MagicCode string `protobuf:"bytes,1,opt,name=magic_code" json:"magic_code,omitempty"`
}

func (m *UnsubscribeRequest) Reset()                    { *m = UnsubscribeRequest{} }
func (m *UnsubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*UnsubscribeRequest) ProtoMessage()               {}
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*SendEmailRequest)(nil), "mailinglist.SendEmailRequest")
	proto.RegisterType((*SubscribeRequest)(nil), "mailinglist.SubscribeRequest")
	proto.RegisterType((*UnsubscribeRequest)(nil), "mailinglist.UnsubscribeRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for MailingList service

type MailingListClient interface {
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
}

type mailingListClient struct {
	cc *grpc.ClientConn
}

func NewMailingListClient(cc *grpc.ClientConn) MailingListClient {
	return &mailingListClient{cc}
}

func (c *mailingListClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/mailinglist.MailingList/SendEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailingListClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/mailinglist.MailingList/Subscribe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mailingListClient) Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/mailinglist.MailingList/Unsubscribe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MailingList service

type MailingListServer interface {
	SendEmail(context.Context, *SendEmailRequest) (*dtypes.VoidResponse, error)
	Subscribe(context.Context, *SubscribeRequest) (*dtypes.VoidResponse, error)
	Unsubscribe(context.Context, *UnsubscribeRequest) (*dtypes.VoidResponse, error)
}

func RegisterMailingListServer(s *grpc.Server, srv MailingListServer) {
	s.RegisterService(&_MailingList_serviceDesc, srv)
}

func _MailingList_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailingListServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailinglist.MailingList/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailingListServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailingList_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailingListServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailinglist.MailingList/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailingListServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MailingList_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailingListServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mailinglist.MailingList/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailingListServer).Unsubscribe(ctx, req.(*UnsubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MailingList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mailinglist.MailingList",
	HandlerType: (*MailingListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEmail",
			Handler:    _MailingList_SendEmail_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _MailingList_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _MailingList_Unsubscribe_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0xcb, 0x4a, 0xc3, 0x40,
	0x14, 0x86, 0x69, 0xad, 0x4a, 0x4f, 0x2a, 0xd5, 0xb1, 0x4a, 0x08, 0x8a, 0x1a, 0x37, 0xa5, 0x48,
	0x46, 0xeb, 0xce, 0xbd, 0x3b, 0xdd, 0x54, 0xd4, 0x8d, 0x50, 0x72, 0x39, 0x84, 0x91, 0x76, 0x26,
	0x66, 0x26, 0x62, 0x91, 0x6e, 0x7c, 0x05, 0xdf, 0x4c, 0x5f, 0xc1, 0x07, 0x31, 0x33, 0x69, 0x6b,
	0x4c, 0xe9, 0x26, 0x90, 0x9f, 0x93, 0xef, 0xbf, 0x10, 0xd8, 0x19, 0xfb, 0x6c, 0xc4, 0x78, 0x3c,
	0x62, 0x52, 0x79, 0x49, 0x2a, 0x94, 0x20, 0x56, 0x49, 0x72, 0x0e, 0x62, 0x21, 0xe2, 0x11, 0x52,
	0x3f, 0x61, 0xd4, 0xe7, 0x5c, 0x28, 0x5f, 0x31, 0xc1, 0x65, 0x71, 0xea, 0xec, 0x6b, 0x39, 0x52,
	0x93, 0x04, 0x25, 0x35, 0xcf, 0x42, 0x77, 0x9f, 0x60, 0xfb, 0x0e, 0x79, 0x74, 0xad, 0x49, 0x03,
	0x7c, 0xc9, 0x50, 0x2a, 0xb2, 0x0b, 0x96, 0xcc, 0x35, 0x4c, 0x87, 0xdc, 0x1f, 0xa3, 0x5d, 0x3b,
	0xae, 0x75, 0x9b, 0xa4, 0x03, 0xad, 0x99, 0x88, 0xfa, 0xd6, 0xae, 0x1b, 0xb5, 0x0d, 0x9b, 0x32,
	0x0b, 0x9e, 0x31, 0x54, 0xf6, 0x9a, 0x11, 0x5a, 0xd0, 0x08, 0x44, 0x34, 0xb1, 0x1b, 0xfa, 0xcd,
	0x3d, 0xc9, 0xe9, 0x59, 0x20, 0xc3, 0x94, 0x05, 0x38, 0xa7, 0x6f, 0xc1, 0x7a, 0x41, 0x30, 0x5c,
	0xb7, 0x0b, 0xe4, 0x9e, 0xcb, 0xea, 0x11, 0x01, 0x18, 0xfb, 0x31, 0x0b, 0x87, 0xa1, 0x88, 0x66,
	0x09, 0xfa, 0x5f, 0x75, 0xb0, 0x6e, 0x8b, 0xc2, 0x37, 0x79, 0x61, 0xf2, 0x08, 0xcd, 0x45, 0x74,
	0x72, 0xe8, 0x95, 0xe7, 0xa9, 0x56, 0x72, 0x3a, 0x5e, 0xd1, 0xdd, 0x7b, 0x10, 0x2c, 0x1a, 0xa0,
	0x4c, 0xf2, 0x65, 0xd0, 0xdd, 0xfb, 0xf8, 0xfe, 0xf9, 0xac, 0xb7, 0x5d, 0xa0, 0xfa, 0x96, 0xbe,
	0x9e, 0x7b, 0x17, 0x57, 0xb5, 0x1e, 0x49, 0x72, 0xf0, 0x3c, 0x50, 0x15, 0x5c, 0x09, 0xba, 0x02,
	0xec, 0x19, 0x70, 0xd7, 0x39, 0xa5, 0xa5, 0x8f, 0x0d, 0x9f, 0x2e, 0xaa, 0xd2, 0x77, 0x33, 0xc3,
	0x54, 0x3b, 0xbe, 0x81, 0x55, 0x1a, 0x81, 0x1c, 0xfd, 0xf3, 0x5c, 0x9e, 0x67, 0x85, 0x6b, 0xdf,
	0xb8, 0x9e, 0x91, 0xde, 0xb2, 0x6b, 0xc6, 0x4b, 0xbe, 0x7f, 0xcb, 0x4e, 0x83, 0x0d, 0xf3, 0x1b,
	0x5c, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xce, 0xe2, 0xce, 0xec, 0x5e, 0x02, 0x00, 0x00,
}
