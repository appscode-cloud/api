// Code generated by protoc-gen-go.
// source: kube_client.proto
// DO NOT EDIT!

/*
Package kube_client is a generated protocol buffer package.

It is generated from these files:
	kube_client.proto

It has these top-level messages:
	KubeRequest
	KubeClusterDetailsResponse
	KubeNodeListResponse
	KubeNode
	KubeNamespaceListResponse
	KubeNamespace
	KubeSecretListResponse
	KubeSecret
	KubeJobListResponse
	KubeJob
	KubePodListResponse
	KubePod
	KubeContainer
	KubeServiceListResponse
	KubeService
	KubeAppDetailsRequest
	KubeAppDetailsResponse
	KubeAppListResponse
	KubeApp
	KubeReplicationControllerListResponse
	KubeReplicationController
*/
package kube_client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"
import kubernetes "github.com/appscode/api/kubernetes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type KubeRequest struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name" json:"cluster_name,omitempty"`
}

func (m *KubeRequest) Reset()                    { *m = KubeRequest{} }
func (m *KubeRequest) String() string            { return proto.CompactTextString(m) }
func (*KubeRequest) ProtoMessage()               {}
func (*KubeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type KubeClusterDetailsResponse struct {
	Status  *dtypes.Status                    `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Cluster *kubernetes.ClusterDetails        `protobuf:"bytes,2,opt,name=cluster" json:"cluster,omitempty"`
	Specs   *KubeClusterDetailsResponse_Specs `protobuf:"bytes,3,opt,name=specs" json:"specs,omitempty"`
}

func (m *KubeClusterDetailsResponse) Reset()                    { *m = KubeClusterDetailsResponse{} }
func (m *KubeClusterDetailsResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeClusterDetailsResponse) ProtoMessage()               {}
func (*KubeClusterDetailsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *KubeClusterDetailsResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeClusterDetailsResponse) GetCluster() *kubernetes.ClusterDetails {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *KubeClusterDetailsResponse) GetSpecs() *KubeClusterDetailsResponse_Specs {
	if m != nil {
		return m.Specs
	}
	return nil
}

type KubeClusterDetailsResponse_Specs struct {
	Containers  int32 `protobuf:"varint,1,opt,name=containers" json:"containers,omitempty"`
	Pods        int32 `protobuf:"varint,2,opt,name=pods" json:"pods,omitempty"`
	Services    int32 `protobuf:"varint,3,opt,name=services" json:"services,omitempty"`
	Rcs         int32 `protobuf:"varint,4,opt,name=rcs" json:"rcs,omitempty"`
	CpuCore     int64 `protobuf:"varint,5,opt,name=cpu_core" json:"cpu_core,omitempty"`
	TotalMemory int64 `protobuf:"varint,6,opt,name=total_memory" json:"total_memory,omitempty"`
}

func (m *KubeClusterDetailsResponse_Specs) Reset()         { *m = KubeClusterDetailsResponse_Specs{} }
func (m *KubeClusterDetailsResponse_Specs) String() string { return proto.CompactTextString(m) }
func (*KubeClusterDetailsResponse_Specs) ProtoMessage()    {}
func (*KubeClusterDetailsResponse_Specs) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type KubeNodeListResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Nodes  []*KubeNode    `protobuf:"bytes,2,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *KubeNodeListResponse) Reset()                    { *m = KubeNodeListResponse{} }
func (m *KubeNodeListResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeNodeListResponse) ProtoMessage()               {}
func (*KubeNodeListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *KubeNodeListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeNodeListResponse) GetNodes() []*KubeNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type KubeNode struct {
	Name             string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ProviderId       string                 `protobuf:"bytes,2,opt,name=provider_id" json:"provider_id,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,3,opt,name=created_at" json:"created_at,omitempty"`
	Capacity         *KubeNode_NodeCapacity `protobuf:"bytes,4,opt,name=capacity" json:"capacity,omitempty"`
	OsImage          string                 `protobuf:"bytes,5,opt,name=os_image" json:"os_image,omitempty"`
	KernelVersion    string                 `protobuf:"bytes,6,opt,name=kernel_version" json:"kernel_version,omitempty"`
	ContainerRuntime string                 `protobuf:"bytes,7,opt,name=container_runtime" json:"container_runtime,omitempty"`
	KubeletVersion   string                 `protobuf:"bytes,8,opt,name=kubelet_version" json:"kubelet_version,omitempty"`
}

func (m *KubeNode) Reset()                    { *m = KubeNode{} }
func (m *KubeNode) String() string            { return proto.CompactTextString(m) }
func (*KubeNode) ProtoMessage()               {}
func (*KubeNode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *KubeNode) GetCapacity() *KubeNode_NodeCapacity {
	if m != nil {
		return m.Capacity
	}
	return nil
}

type KubeNode_NodeCapacity struct {
	Cpu    int64 `protobuf:"varint,1,opt,name=cpu" json:"cpu,omitempty"`
	Memory int64 `protobuf:"varint,2,opt,name=memory" json:"memory,omitempty"`
	Pods   int64 `protobuf:"varint,3,opt,name=pods" json:"pods,omitempty"`
}

func (m *KubeNode_NodeCapacity) Reset()                    { *m = KubeNode_NodeCapacity{} }
func (m *KubeNode_NodeCapacity) String() string            { return proto.CompactTextString(m) }
func (*KubeNode_NodeCapacity) ProtoMessage()               {}
func (*KubeNode_NodeCapacity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type KubeNamespaceListResponse struct {
	Status     *dtypes.Status   `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Namespaces []*KubeNamespace `protobuf:"bytes,2,rep,name=namespaces" json:"namespaces,omitempty"`
}

func (m *KubeNamespaceListResponse) Reset()                    { *m = KubeNamespaceListResponse{} }
func (m *KubeNamespaceListResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeNamespaceListResponse) ProtoMessage()               {}
func (*KubeNamespaceListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *KubeNamespaceListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeNamespaceListResponse) GetNamespaces() []*KubeNamespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

type KubeNamespace struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CreatedAt string `protobuf:"bytes,2,opt,name=created_at" json:"created_at,omitempty"`
	Phase     string `protobuf:"bytes,3,opt,name=phase" json:"phase,omitempty"`
}

func (m *KubeNamespace) Reset()                    { *m = KubeNamespace{} }
func (m *KubeNamespace) String() string            { return proto.CompactTextString(m) }
func (*KubeNamespace) ProtoMessage()               {}
func (*KubeNamespace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type KubeSecretListResponse struct {
	Status  *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Secrets []*KubeSecret  `protobuf:"bytes,2,rep,name=secrets" json:"secrets,omitempty"`
}

func (m *KubeSecretListResponse) Reset()                    { *m = KubeSecretListResponse{} }
func (m *KubeSecretListResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeSecretListResponse) ProtoMessage()               {}
func (*KubeSecretListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *KubeSecretListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeSecretListResponse) GetSecrets() []*KubeSecret {
	if m != nil {
		return m.Secrets
	}
	return nil
}

type KubeSecret struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace       string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	ResourceVersion string `protobuf:"bytes,3,opt,name=resource_version" json:"resource_version,omitempty"`
	SecretType      string `protobuf:"bytes,4,opt,name=secret_type" json:"secret_type,omitempty"`
	CreatedAt       string `protobuf:"bytes,5,opt,name=created_at" json:"created_at,omitempty"`
}

func (m *KubeSecret) Reset()                    { *m = KubeSecret{} }
func (m *KubeSecret) String() string            { return proto.CompactTextString(m) }
func (*KubeSecret) ProtoMessage()               {}
func (*KubeSecret) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type KubeJobListResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Jobs   []*KubeJob     `protobuf:"bytes,2,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *KubeJobListResponse) Reset()                    { *m = KubeJobListResponse{} }
func (m *KubeJobListResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeJobListResponse) ProtoMessage()               {}
func (*KubeJobListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *KubeJobListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeJobListResponse) GetJobs() []*KubeJob {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type KubeJob struct {
	Name           string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace      string           `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App            string           `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt      string           `protobuf:"bytes,4,opt,name=created_at" json:"created_at,omitempty"`
	Parallelism    int32            `protobuf:"varint,5,opt,name=parallelism" json:"parallelism,omitempty"`
	Completions    int32            `protobuf:"varint,6,opt,name=completions" json:"completions,omitempty"`
	Containers     []*KubeContainer `protobuf:"bytes,7,rep,name=containers" json:"containers,omitempty"`
	StartTime      string           `protobuf:"bytes,8,opt,name=start_time" json:"start_time,omitempty"`
	CompletionTime string           `protobuf:"bytes,9,opt,name=completion_time" json:"completion_time,omitempty"`
	Active         int32            `protobuf:"varint,10,opt,name=active" json:"active,omitempty"`
	Succeeded      int32            `protobuf:"varint,11,opt,name=succeeded" json:"succeeded,omitempty"`
	Failed         int32            `protobuf:"varint,12,opt,name=failed" json:"failed,omitempty"`
}

func (m *KubeJob) Reset()                    { *m = KubeJob{} }
func (m *KubeJob) String() string            { return proto.CompactTextString(m) }
func (*KubeJob) ProtoMessage()               {}
func (*KubeJob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *KubeJob) GetContainers() []*KubeContainer {
	if m != nil {
		return m.Containers
	}
	return nil
}

type KubePodListResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Pods   []*KubePod     `protobuf:"bytes,2,rep,name=pods" json:"pods,omitempty"`
}

func (m *KubePodListResponse) Reset()                    { *m = KubePodListResponse{} }
func (m *KubePodListResponse) String() string            { return proto.CompactTextString(m) }
func (*KubePodListResponse) ProtoMessage()               {}
func (*KubePodListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *KubePodListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubePodListResponse) GetPods() []*KubePod {
	if m != nil {
		return m.Pods
	}
	return nil
}

type KubePod struct {
	Name           string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace      string           `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App            string           `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt      string           `protobuf:"bytes,4,opt,name=created_at" json:"created_at,omitempty"`
	Containers     []*KubeContainer `protobuf:"bytes,5,rep,name=containers" json:"containers,omitempty"`
	ServiceAccount string           `protobuf:"bytes,6,opt,name=service_account" json:"service_account,omitempty"`
	NodeName       string           `protobuf:"bytes,7,opt,name=node_name" json:"node_name,omitempty"`
	Phase          string           `protobuf:"bytes,8,opt,name=phase" json:"phase,omitempty"`
	StartTime      string           `protobuf:"bytes,9,opt,name=start_time" json:"start_time,omitempty"`
	Message        string           `protobuf:"bytes,10,opt,name=message" json:"message,omitempty"`
}

func (m *KubePod) Reset()                    { *m = KubePod{} }
func (m *KubePod) String() string            { return proto.CompactTextString(m) }
func (*KubePod) ProtoMessage()               {}
func (*KubePod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *KubePod) GetContainers() []*KubeContainer {
	if m != nil {
		return m.Containers
	}
	return nil
}

type KubeContainer struct {
	Name     string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Image    string   `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Commands []string `protobuf:"bytes,3,rep,name=commands" json:"commands,omitempty"`
}

func (m *KubeContainer) Reset()                    { *m = KubeContainer{} }
func (m *KubeContainer) String() string            { return proto.CompactTextString(m) }
func (*KubeContainer) ProtoMessage()               {}
func (*KubeContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type KubeServiceListResponse struct {
	Status   *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Services []*KubeService `protobuf:"bytes,2,rep,name=services" json:"services,omitempty"`
}

func (m *KubeServiceListResponse) Reset()                    { *m = KubeServiceListResponse{} }
func (m *KubeServiceListResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeServiceListResponse) ProtoMessage()               {}
func (*KubeServiceListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *KubeServiceListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeServiceListResponse) GetServices() []*KubeService {
	if m != nil {
		return m.Services
	}
	return nil
}

type KubeService struct {
	Name                  string                             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace             string                             `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App                   string                             `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt             string                             `protobuf:"bytes,4,opt,name=created_at" json:"created_at,omitempty"`
	Type                  string                             `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	ClusterIp             string                             `protobuf:"bytes,6,opt,name=cluster_ip" json:"cluster_ip,omitempty"`
	Ports                 []*KubeService_Port                `protobuf:"bytes,7,rep,name=ports" json:"ports,omitempty"`
	ExternalIps           []string                           `protobuf:"bytes,8,rep,name=external_ips" json:"external_ips,omitempty"`
	LoadbalancerIngresses []*KubeService_LoadBalancerIngress `protobuf:"bytes,9,rep,name=loadbalancer_ingresses" json:"loadbalancer_ingresses,omitempty"`
}

func (m *KubeService) Reset()                    { *m = KubeService{} }
func (m *KubeService) String() string            { return proto.CompactTextString(m) }
func (*KubeService) ProtoMessage()               {}
func (*KubeService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *KubeService) GetPorts() []*KubeService_Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *KubeService) GetLoadbalancerIngresses() []*KubeService_LoadBalancerIngress {
	if m != nil {
		return m.LoadbalancerIngresses
	}
	return nil
}

type KubeService_Port struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Protocol   string `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	Port       int32  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	TargetPort string `protobuf:"bytes,4,opt,name=target_port" json:"target_port,omitempty"`
	NodePort   int32  `protobuf:"varint,5,opt,name=node_port" json:"node_port,omitempty"`
}

func (m *KubeService_Port) Reset()                    { *m = KubeService_Port{} }
func (m *KubeService_Port) String() string            { return proto.CompactTextString(m) }
func (*KubeService_Port) ProtoMessage()               {}
func (*KubeService_Port) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 0} }

type KubeService_LoadBalancerIngress struct {
	HostName string `protobuf:"bytes,1,opt,name=host_name" json:"host_name,omitempty"`
	Ip       string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
}

func (m *KubeService_LoadBalancerIngress) Reset()         { *m = KubeService_LoadBalancerIngress{} }
func (m *KubeService_LoadBalancerIngress) String() string { return proto.CompactTextString(m) }
func (*KubeService_LoadBalancerIngress) ProtoMessage()    {}
func (*KubeService_LoadBalancerIngress) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{14, 1}
}

type KubeAppDetailsRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name" json:"cluster_name,omitempty"`
	Namespace   string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
}

func (m *KubeAppDetailsRequest) Reset()                    { *m = KubeAppDetailsRequest{} }
func (m *KubeAppDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*KubeAppDetailsRequest) ProtoMessage()               {}
func (*KubeAppDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type KubeAppDetailsResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	App    *KubeService   `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
}

func (m *KubeAppDetailsResponse) Reset()                    { *m = KubeAppDetailsResponse{} }
func (m *KubeAppDetailsResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeAppDetailsResponse) ProtoMessage()               {}
func (*KubeAppDetailsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *KubeAppDetailsResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeAppDetailsResponse) GetApp() *KubeService {
	if m != nil {
		return m.App
	}
	return nil
}

type KubeAppListResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Apps   []*KubeApp     `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
}

func (m *KubeAppListResponse) Reset()                    { *m = KubeAppListResponse{} }
func (m *KubeAppListResponse) String() string            { return proto.CompactTextString(m) }
func (*KubeAppListResponse) ProtoMessage()               {}
func (*KubeAppListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *KubeAppListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeAppListResponse) GetApps() []*KubeApp {
	if m != nil {
		return m.Apps
	}
	return nil
}

type KubeApp struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at" json:"created_at,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	ClusterIp string `protobuf:"bytes,6,opt,name=cluster_ip" json:"cluster_ip,omitempty"`
}

func (m *KubeApp) Reset()                    { *m = KubeApp{} }
func (m *KubeApp) String() string            { return proto.CompactTextString(m) }
func (*KubeApp) ProtoMessage()               {}
func (*KubeApp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type KubeReplicationControllerListResponse struct {
	Status                 *dtypes.Status               `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ReplicationControllers []*KubeReplicationController `protobuf:"bytes,2,rep,name=replication_controllers" json:"replication_controllers,omitempty"`
}

func (m *KubeReplicationControllerListResponse) Reset()         { *m = KubeReplicationControllerListResponse{} }
func (m *KubeReplicationControllerListResponse) String() string { return proto.CompactTextString(m) }
func (*KubeReplicationControllerListResponse) ProtoMessage()    {}
func (*KubeReplicationControllerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19}
}

func (m *KubeReplicationControllerListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KubeReplicationControllerListResponse) GetReplicationControllers() []*KubeReplicationController {
	if m != nil {
		return m.ReplicationControllers
	}
	return nil
}

type KubeReplicationController struct {
	Name               string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace          string           `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	App                string           `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	CreatedAt          string           `protobuf:"bytes,4,opt,name=created_at" json:"created_at,omitempty"`
	Generation         int64            `protobuf:"varint,5,opt,name=generation" json:"generation,omitempty"`
	CurrentReplicas    int32            `protobuf:"varint,6,opt,name=current_replicas" json:"current_replicas,omitempty"`
	Replicas           int32            `protobuf:"varint,7,opt,name=replicas" json:"replicas,omitempty"`
	ObservedGeneration int64            `protobuf:"varint,8,opt,name=observed_generation" json:"observed_generation,omitempty"`
	Containers         []*KubeContainer `protobuf:"bytes,9,rep,name=containers" json:"containers,omitempty"`
}

func (m *KubeReplicationController) Reset()                    { *m = KubeReplicationController{} }
func (m *KubeReplicationController) String() string            { return proto.CompactTextString(m) }
func (*KubeReplicationController) ProtoMessage()               {}
func (*KubeReplicationController) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *KubeReplicationController) GetContainers() []*KubeContainer {
	if m != nil {
		return m.Containers
	}
	return nil
}

func init() {
	proto.RegisterType((*KubeRequest)(nil), "kube_client.KubeRequest")
	proto.RegisterType((*KubeClusterDetailsResponse)(nil), "kube_client.KubeClusterDetailsResponse")
	proto.RegisterType((*KubeClusterDetailsResponse_Specs)(nil), "kube_client.KubeClusterDetailsResponse.Specs")
	proto.RegisterType((*KubeNodeListResponse)(nil), "kube_client.KubeNodeListResponse")
	proto.RegisterType((*KubeNode)(nil), "kube_client.KubeNode")
	proto.RegisterType((*KubeNode_NodeCapacity)(nil), "kube_client.KubeNode.NodeCapacity")
	proto.RegisterType((*KubeNamespaceListResponse)(nil), "kube_client.KubeNamespaceListResponse")
	proto.RegisterType((*KubeNamespace)(nil), "kube_client.KubeNamespace")
	proto.RegisterType((*KubeSecretListResponse)(nil), "kube_client.KubeSecretListResponse")
	proto.RegisterType((*KubeSecret)(nil), "kube_client.KubeSecret")
	proto.RegisterType((*KubeJobListResponse)(nil), "kube_client.KubeJobListResponse")
	proto.RegisterType((*KubeJob)(nil), "kube_client.KubeJob")
	proto.RegisterType((*KubePodListResponse)(nil), "kube_client.KubePodListResponse")
	proto.RegisterType((*KubePod)(nil), "kube_client.KubePod")
	proto.RegisterType((*KubeContainer)(nil), "kube_client.KubeContainer")
	proto.RegisterType((*KubeServiceListResponse)(nil), "kube_client.KubeServiceListResponse")
	proto.RegisterType((*KubeService)(nil), "kube_client.KubeService")
	proto.RegisterType((*KubeService_Port)(nil), "kube_client.KubeService.Port")
	proto.RegisterType((*KubeService_LoadBalancerIngress)(nil), "kube_client.KubeService.LoadBalancerIngress")
	proto.RegisterType((*KubeAppDetailsRequest)(nil), "kube_client.KubeAppDetailsRequest")
	proto.RegisterType((*KubeAppDetailsResponse)(nil), "kube_client.KubeAppDetailsResponse")
	proto.RegisterType((*KubeAppListResponse)(nil), "kube_client.KubeAppListResponse")
	proto.RegisterType((*KubeApp)(nil), "kube_client.KubeApp")
	proto.RegisterType((*KubeReplicationControllerListResponse)(nil), "kube_client.KubeReplicationControllerListResponse")
	proto.RegisterType((*KubeReplicationController)(nil), "kube_client.KubeReplicationController")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for KubeClient service

type KubeClientClient interface {
	KubeClusterDetails(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeClusterDetailsResponse, error)
	KubeNodeList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeNodeListResponse, error)
	KubeSecretList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeSecretListResponse, error)
	KubeJobList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeJobListResponse, error)
	KubeNamespaceList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeNamespaceListResponse, error)
	KubePodList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubePodListResponse, error)
	KubeServiceList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeServiceListResponse, error)
	KubeReplicationControllerList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeReplicationControllerListResponse, error)
	KubeAppList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeAppListResponse, error)
	KubeAppDetails(ctx context.Context, in *KubeAppDetailsRequest, opts ...grpc.CallOption) (*KubeAppDetailsResponse, error)
	KubeAppPodList(ctx context.Context, in *KubeAppDetailsRequest, opts ...grpc.CallOption) (*KubePodListResponse, error)
}

type kubeClientClient struct {
	cc *grpc.ClientConn
}

func NewKubeClientClient(cc *grpc.ClientConn) KubeClientClient {
	return &kubeClientClient{cc}
}

func (c *kubeClientClient) KubeClusterDetails(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeClusterDetailsResponse, error) {
	out := new(KubeClusterDetailsResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeClusterDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeNodeList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeNodeListResponse, error) {
	out := new(KubeNodeListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeNodeList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeSecretList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeSecretListResponse, error) {
	out := new(KubeSecretListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeSecretList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeJobList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeJobListResponse, error) {
	out := new(KubeJobListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeJobList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeNamespaceList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeNamespaceListResponse, error) {
	out := new(KubeNamespaceListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeNamespaceList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubePodList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubePodListResponse, error) {
	out := new(KubePodListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubePodList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeServiceList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeServiceListResponse, error) {
	out := new(KubeServiceListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeServiceList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeReplicationControllerList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeReplicationControllerListResponse, error) {
	out := new(KubeReplicationControllerListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeReplicationControllerList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeAppList(ctx context.Context, in *KubeRequest, opts ...grpc.CallOption) (*KubeAppListResponse, error) {
	out := new(KubeAppListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeAppList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeAppDetails(ctx context.Context, in *KubeAppDetailsRequest, opts ...grpc.CallOption) (*KubeAppDetailsResponse, error) {
	out := new(KubeAppDetailsResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeAppDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kubeClientClient) KubeAppPodList(ctx context.Context, in *KubeAppDetailsRequest, opts ...grpc.CallOption) (*KubePodListResponse, error) {
	out := new(KubePodListResponse)
	err := grpc.Invoke(ctx, "/kube_client.KubeClient/KubeAppPodList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KubeClient service

type KubeClientServer interface {
	KubeClusterDetails(context.Context, *KubeRequest) (*KubeClusterDetailsResponse, error)
	KubeNodeList(context.Context, *KubeRequest) (*KubeNodeListResponse, error)
	KubeSecretList(context.Context, *KubeRequest) (*KubeSecretListResponse, error)
	KubeJobList(context.Context, *KubeRequest) (*KubeJobListResponse, error)
	KubeNamespaceList(context.Context, *KubeRequest) (*KubeNamespaceListResponse, error)
	KubePodList(context.Context, *KubeRequest) (*KubePodListResponse, error)
	KubeServiceList(context.Context, *KubeRequest) (*KubeServiceListResponse, error)
	KubeReplicationControllerList(context.Context, *KubeRequest) (*KubeReplicationControllerListResponse, error)
	KubeAppList(context.Context, *KubeRequest) (*KubeAppListResponse, error)
	KubeAppDetails(context.Context, *KubeAppDetailsRequest) (*KubeAppDetailsResponse, error)
	KubeAppPodList(context.Context, *KubeAppDetailsRequest) (*KubePodListResponse, error)
}

func RegisterKubeClientServer(s *grpc.Server, srv KubeClientServer) {
	s.RegisterService(&_KubeClient_serviceDesc, srv)
}

func _KubeClient_KubeClusterDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeClusterDetails(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeNodeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeNodeList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeSecretList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeSecretList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeJobList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeJobList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeNamespaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeNamespaceList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubePodList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubePodList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeServiceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeServiceList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeReplicationControllerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeReplicationControllerList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeAppList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeAppList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeAppDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeAppDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeAppDetails(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _KubeClient_KubeAppPodList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(KubeAppDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(KubeClientServer).KubeAppPodList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _KubeClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kube_client.KubeClient",
	HandlerType: (*KubeClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KubeClusterDetails",
			Handler:    _KubeClient_KubeClusterDetails_Handler,
		},
		{
			MethodName: "KubeNodeList",
			Handler:    _KubeClient_KubeNodeList_Handler,
		},
		{
			MethodName: "KubeSecretList",
			Handler:    _KubeClient_KubeSecretList_Handler,
		},
		{
			MethodName: "KubeJobList",
			Handler:    _KubeClient_KubeJobList_Handler,
		},
		{
			MethodName: "KubeNamespaceList",
			Handler:    _KubeClient_KubeNamespaceList_Handler,
		},
		{
			MethodName: "KubePodList",
			Handler:    _KubeClient_KubePodList_Handler,
		},
		{
			MethodName: "KubeServiceList",
			Handler:    _KubeClient_KubeServiceList_Handler,
		},
		{
			MethodName: "KubeReplicationControllerList",
			Handler:    _KubeClient_KubeReplicationControllerList_Handler,
		},
		{
			MethodName: "KubeAppList",
			Handler:    _KubeClient_KubeAppList_Handler,
		},
		{
			MethodName: "KubeAppDetails",
			Handler:    _KubeClient_KubeAppDetails_Handler,
		},
		{
			MethodName: "KubeAppPodList",
			Handler:    _KubeClient_KubeAppPodList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 1413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x57, 0x5b, 0x6f, 0x1b, 0x55,
	0x10, 0x96, 0x2f, 0x1b, 0xdb, 0xe3, 0x34, 0x6d, 0x4e, 0xda, 0xc4, 0x75, 0x29, 0x6d, 0x37, 0x6d,
	0x1a, 0x68, 0xb1, 0x51, 0x5a, 0x24, 0x6e, 0x42, 0x85, 0x20, 0x21, 0x20, 0xaa, 0xaa, 0xe6, 0x09,
	0xa9, 0xd2, 0xb2, 0x5e, 0x1f, 0xdc, 0x25, 0xeb, 0x3d, 0xcb, 0x9e, 0xb5, 0x45, 0x54, 0x22, 0x24,
	0xa4, 0xbe, 0x57, 0x42, 0xe2, 0xf2, 0x43, 0xf8, 0x25, 0x3c, 0xf2, 0xca, 0x13, 0xbf, 0x82, 0x39,
	0x73, 0x76, 0xed, 0x5d, 0x5f, 0xd6, 0x76, 0x95, 0x97, 0xc8, 0x7b, 0x2e, 0xf3, 0x7d, 0xf3, 0xcd,
	0x9c, 0x99, 0x09, 0x6c, 0x9e, 0x0c, 0x3a, 0xdc, 0x72, 0x3c, 0x97, 0xfb, 0x51, 0x2b, 0x08, 0x45,
	0x24, 0x58, 0x3d, 0xb5, 0xd4, 0x7c, 0xa3, 0x27, 0x44, 0xcf, 0xe3, 0x6d, 0x3b, 0x70, 0xdb, 0xb6,
	0xef, 0x8b, 0xc8, 0x8e, 0x5c, 0xe1, 0x4b, 0x7d, 0xb4, 0xb9, 0xad, 0x96, 0xbb, 0xd1, 0x69, 0xc0,
	0x65, 0x9b, 0xfe, 0xc6, 0xeb, 0x37, 0xd4, 0xba, 0x32, 0x13, 0xfa, 0x3c, 0xc2, 0xbd, 0xf1, 0x4f,
	0x7d, 0xc0, 0xdc, 0x85, 0xfa, 0xd7, 0xb8, 0xf6, 0x94, 0xff, 0x30, 0xe0, 0x32, 0x62, 0x97, 0x61,
	0xdd, 0xf1, 0x06, 0x32, 0xe2, 0xa1, 0xe5, 0xdb, 0x7d, 0xde, 0x28, 0xdc, 0x2c, 0xec, 0xd7, 0xcc,
	0x3f, 0x8b, 0xd0, 0x54, 0xa7, 0x0e, 0xf5, 0xd6, 0xe7, 0x3c, 0xb2, 0x5d, 0x4f, 0x3e, 0xe5, 0x32,
	0x40, 0x06, 0x9c, 0xbd, 0x09, 0x6b, 0x12, 0xe9, 0x0c, 0x24, 0x1d, 0xaf, 0x1f, 0x6c, 0xb4, 0x34,
	0x93, 0xd6, 0x31, 0xad, 0xb2, 0x7b, 0x50, 0x89, 0x8d, 0x36, 0x8a, 0x74, 0xa0, 0xd9, 0x4a, 0xf1,
	0xc8, 0x1a, 0x65, 0x1f, 0x83, 0x21, 0x03, 0xee, 0xc8, 0x46, 0x89, 0x8e, 0xbe, 0xd3, 0x4a, 0xeb,
	0x32, 0x9f, 0x44, 0xeb, 0x58, 0x5d, 0x6a, 0x06, 0x60, 0xd0, 0x0f, 0xc6, 0x00, 0x1c, 0xe1, 0xe3,
	0x11, 0x9f, 0x87, 0x9a, 0x97, 0xc1, 0xd6, 0xa1, 0x1c, 0x88, 0xae, 0x24, 0x12, 0x06, 0xbb, 0x04,
	0x55, 0xc9, 0xc3, 0xa1, 0xeb, 0x70, 0x8d, 0x65, 0xb0, 0x3a, 0x94, 0x42, 0x04, 0x2e, 0x27, 0xdb,
	0x4e, 0x30, 0xb0, 0x1c, 0x11, 0xf2, 0x86, 0x81, 0x2b, 0x25, 0xa5, 0x4d, 0x84, 0xb2, 0x7b, 0x56,
	0x9f, 0xf7, 0x45, 0x78, 0xda, 0x58, 0x53, 0xab, 0xe6, 0x33, 0xb8, 0xac, 0x58, 0x3d, 0x16, 0x5d,
	0x7e, 0xe4, 0xca, 0x68, 0x69, 0x51, 0x6e, 0x83, 0xe1, 0xe3, 0x1d, 0xc5, 0xa6, 0x84, 0xdb, 0x57,
	0xa6, 0xfc, 0x54, 0x16, 0xcd, 0x57, 0x45, 0xa8, 0x26, 0x1f, 0x8a, 0xff, 0x38, 0x28, 0x6c, 0x0b,
	0xea, 0x18, 0xc2, 0xa1, 0xdb, 0xc5, 0x58, 0xb9, 0x5d, 0x72, 0xaa, 0x46, 0x6e, 0x87, 0xdc, 0x8e,
	0x78, 0xd7, 0xb2, 0x23, 0x72, 0xab, 0xc6, 0x1e, 0xa2, 0x27, 0x76, 0x60, 0x3b, 0x6e, 0x74, 0x4a,
	0xbe, 0xd5, 0x0f, 0xcc, 0x99, 0x60, 0x2d, 0xf5, 0xe7, 0x30, 0x3e, 0xa9, 0xfc, 0x17, 0xd2, 0x72,
	0xfb, 0x76, 0x4f, 0xfb, 0x5f, 0x63, 0xdb, 0xb0, 0x71, 0xa2, 0x82, 0xe6, 0x59, 0x43, 0xd4, 0x14,
	0x93, 0x8f, 0x14, 0xa8, 0xb1, 0xab, 0xb0, 0x39, 0x92, 0xda, 0x0a, 0x07, 0x7e, 0xe4, 0x22, 0xc7,
	0x0a, 0x6d, 0xed, 0xc0, 0x45, 0x85, 0xe4, 0xf1, 0x68, 0x74, 0xa7, 0xaa, 0x36, 0x9a, 0x1f, 0xc0,
	0x7a, 0x06, 0x0d, 0xa5, 0x47, 0xb5, 0xc9, 0xb3, 0x12, 0xdb, 0x80, 0xb5, 0x58, 0xe2, 0x22, 0x7d,
	0x27, 0x71, 0x2b, 0x91, 0xe0, 0x27, 0x70, 0x95, 0x18, 0xa3, 0x12, 0x12, 0x6f, 0xaf, 0xa6, 0x7a,
	0x0b, 0xc0, 0x4f, 0x2e, 0x26, 0xd2, 0x37, 0xa7, 0xd5, 0x48, 0x8e, 0x98, 0x8f, 0xe0, 0x42, 0x66,
	0x61, 0x22, 0x06, 0x59, 0xb9, 0x75, 0x08, 0x2e, 0x80, 0x11, 0x3c, 0xb7, 0x25, 0xd7, 0xea, 0x9b,
	0x1d, 0xd8, 0x56, 0x16, 0x8e, 0x39, 0x1e, 0x8c, 0x56, 0xe2, 0xba, 0x0f, 0x15, 0x49, 0xb7, 0x12,
	0xa2, 0x3b, 0x53, 0x44, 0xb5, 0x55, 0x33, 0x00, 0x18, 0x7f, 0x4d, 0x50, 0xdc, 0x84, 0xda, 0xc8,
	0xe3, 0x98, 0x61, 0x03, 0x2e, 0x85, 0x5c, 0x8a, 0x41, 0xe8, 0xf0, 0x51, 0x58, 0x4a, 0x49, 0x4e,
	0x69, 0x48, 0x4b, 0x31, 0xa1, 0x6c, 0x99, 0x74, 0x92, 0x72, 0xc1, 0xfc, 0x06, 0xb6, 0x14, 0xe2,
	0x57, 0xa2, 0xb3, 0x92, 0x4b, 0x26, 0x94, 0xbf, 0x17, 0x9d, 0xc4, 0x9f, 0xcb, 0x53, 0xfe, 0xa0,
	0x3d, 0xf3, 0x65, 0x11, 0x2a, 0xf1, 0xef, 0xc5, 0xae, 0x60, 0xde, 0xd8, 0x41, 0x10, 0xb3, 0xcf,
	0x12, 0x2d, 0x8f, 0x5e, 0x89, 0x1d, 0xda, 0x9e, 0xc7, 0x3d, 0x57, 0xf6, 0x89, 0xbd, 0xa1, 0x16,
	0x1d, 0xd1, 0x0f, 0x30, 0x2d, 0x55, 0x09, 0xa5, 0x34, 0x36, 0x54, 0x6a, 0xa4, 0x2a, 0x46, 0x65,
	0x4e, 0x6a, 0x1c, 0x26, 0x47, 0x14, 0x1a, 0xfa, 0x1a, 0xa2, 0x54, 0x2a, 0xdf, 0xab, 0x49, 0xbe,
	0x8f, 0x0d, 0xeb, 0x8d, 0x1a, 0x6d, 0x60, 0x4a, 0xdb, 0x4e, 0xe4, 0x0e, 0x79, 0x03, 0x08, 0x0c,
	0x5d, 0x91, 0x03, 0xc7, 0xe1, 0xbc, 0xcb, 0xbb, 0x8d, 0x3a, 0x2d, 0xe1, 0x91, 0xef, 0xb0, 0xa2,
	0xe1, 0xf7, 0xba, 0xfa, 0x4e, 0x24, 0x7e, 0x22, 0xba, 0xab, 0x4a, 0x1c, 0x17, 0xb9, 0xd9, 0x12,
	0xa3, 0x3d, 0xf3, 0x9f, 0x82, 0x96, 0x18, 0x7f, 0x9f, 0x83, 0xc4, 0x59, 0xe1, 0x8c, 0x85, 0xc2,
	0xa1, 0x48, 0x71, 0xe1, 0xb5, 0x6c, 0xc7, 0x11, 0x58, 0x30, 0xe2, 0x42, 0xa2, 0xc0, 0xb1, 0x28,
	0xe8, 0xce, 0x53, 0xc9, 0x3e, 0xa6, 0x6a, 0x02, 0x9f, 0xd2, 0x5c, 0x4b, 0x7b, 0x11, 0x2a, 0x48,
	0x58, 0xaa, 0x3a, 0x05, 0x94, 0x9b, 0x9f, 0xe8, 0x37, 0x3b, 0x06, 0xcc, 0xba, 0x88, 0x26, 0x75,
	0x55, 0xd3, 0xee, 0xa9, 0x3a, 0x2f, 0xfa, 0x7d, 0xdb, 0xa7, 0x02, 0x53, 0xc2, 0xfb, 0x1c, 0x76,
	0xf4, 0x6b, 0x22, 0x8e, 0x2b, 0x89, 0xff, 0x76, 0xaa, 0xa7, 0xe8, 0x00, 0x34, 0x66, 0xbc, 0x59,
	0x3a, 0x60, 0xfe, 0x5e, 0xd2, 0xad, 0x37, 0xfe, 0x3e, 0x87, 0x40, 0xa0, 0x05, 0x7a, 0xb6, 0xc6,
	0xe8, 0x44, 0xdc, 0xca, 0xdd, 0x20, 0x56, 0xf8, 0x3e, 0xca, 0x29, 0xc2, 0x28, 0x49, 0xef, 0xeb,
	0xf3, 0xc8, 0xb5, 0x9e, 0xe0, 0x29, 0xd5, 0xf0, 0xf8, 0x8f, 0x78, 0xdf, 0xc7, 0x9e, 0xe7, 0x06,
	0x12, 0x63, 0x80, 0xf2, 0xb0, 0x23, 0xd8, 0xf6, 0x84, 0xdd, 0xed, 0xd8, 0x9e, 0xed, 0x3b, 0xca,
	0xb8, 0xdf, 0xc3, 0x6a, 0x22, 0xd1, 0xe3, 0x1a, 0x19, 0xbd, 0x3f, 0xd7, 0xe8, 0x11, 0x5e, 0xfb,
	0x2c, 0xbe, 0xf6, 0xa5, 0xbe, 0xd5, 0x7c, 0x06, 0x65, 0xc2, 0xca, 0x7a, 0x8f, 0x41, 0xa1, 0xf1,
	0xc4, 0x11, 0x5e, 0xec, 0x3c, 0xf5, 0x80, 0x30, 0x8a, 0x3b, 0x35, 0x3e, 0x60, 0x4c, 0x83, 0x1e,
	0xd6, 0x29, 0x5a, 0x2c, 0x67, 0xd2, 0x87, 0x96, 0xe8, 0xa1, 0x37, 0x1f, 0xc2, 0xd6, 0x0c, 0x50,
	0x75, 0xf2, 0xb9, 0x90, 0x51, 0x6a, 0xc4, 0x41, 0xb1, 0x8a, 0xa8, 0x12, 0x61, 0x99, 0x8f, 0xe1,
	0x8a, 0xa2, 0xfd, 0x69, 0x10, 0x8c, 0x86, 0x0c, 0x3d, 0x1d, 0x65, 0x49, 0x4e, 0xce, 0x4a, 0xc5,
	0xe9, 0xc0, 0xe9, 0x16, 0x60, 0xe9, 0x16, 0x90, 0xb6, 0xb7, 0x64, 0x3e, 0xdd, 0xd1, 0x21, 0xd7,
	0x53, 0xd3, 0xfc, 0x54, 0x8a, 0x4b, 0x05, 0x02, 0xac, 0x5a, 0x2a, 0xd0, 0xfa, 0xfc, 0x52, 0x81,
	0xf6, 0xcc, 0x6f, 0x75, 0xa5, 0xc0, 0x9f, 0x8b, 0x13, 0xf4, 0xb5, 0x72, 0xd2, 0x7c, 0x55, 0x80,
	0x3b, 0x7a, 0x04, 0x0d, 0x3c, 0xd7, 0xa1, 0xa9, 0x56, 0x3d, 0xdd, 0x50, 0x60, 0xcd, 0x0e, 0x57,
	0xf2, 0xe7, 0x0b, 0xd8, 0x09, 0xc7, 0x46, 0x2c, 0x67, 0x64, 0x25, 0x71, 0x71, 0x6f, 0xca, 0xc5,
	0x99, 0xa0, 0xe6, 0x7f, 0x05, 0x3d, 0x63, 0xcc, 0xdc, 0x3d, 0x87, 0x87, 0x8a, 0x6b, 0x3d, 0x8e,
	0x95, 0x89, 0x2c, 0xc7, 0xd3, 0x25, 0x36, 0x65, 0x67, 0x10, 0x86, 0x48, 0xcc, 0x8a, 0x9d, 0x48,
	0x1a, 0x13, 0x3e, 0x86, 0xd1, 0x4a, 0x85, 0x56, 0xae, 0xc1, 0x16, 0x76, 0x51, 0x0c, 0x3e, 0x1a,
	0x4d, 0x19, 0xaa, 0x92, 0xa1, 0x6c, 0x39, 0xae, 0x2d, 0x2a, 0xc7, 0x07, 0x7f, 0xd5, 0xf5, 0xf4,
	0x70, 0x48, 0x9b, 0xec, 0x27, 0x60, 0xd3, 0x53, 0x36, 0x6b, 0xcc, 0x50, 0x8e, 0xde, 0x44, 0xf3,
	0xee, 0x92, 0x03, 0xba, 0xb9, 0xfb, 0xcb, 0xdf, 0xff, 0xfe, 0x5a, 0xbc, 0xce, 0xae, 0xb5, 0x93,
	0xff, 0x49, 0xda, 0xc3, 0x77, 0xdb, 0x2f, 0xd2, 0x4f, 0xe8, 0x8c, 0x0d, 0x61, 0x3d, 0x3d, 0x4d,
	0xe7, 0xe0, 0xde, 0x9a, 0x39, 0xc3, 0xa6, 0xf3, 0xc5, 0x7c, 0x8b, 0x10, 0x77, 0xd9, 0xad, 0x1c,
	0xc4, 0x36, 0x0d, 0xe1, 0xe8, 0xf5, 0x46, 0x76, 0x4a, 0xcb, 0x41, 0xde, 0x9d, 0x33, 0x86, 0x65,
	0xb0, 0xef, 0x11, 0xf6, 0x1d, 0xb6, 0x9b, 0x87, 0x1d, 0x8f, 0x77, 0x4c, 0xea, 0x4e, 0x10, 0x4f,
	0x53, 0x39, 0xd0, 0x37, 0x67, 0x4d, 0x4c, 0x19, 0xdc, 0x7d, 0xc2, 0x35, 0xd9, 0xcd, 0x3c, 0x5c,
	0x35, 0x83, 0xb1, 0x97, 0x05, 0xd8, 0x9c, 0x1a, 0xa4, 0x73, 0xb0, 0xf7, 0xe6, 0x8f, 0xc9, 0x19,
	0x06, 0x2d, 0x62, 0xb0, 0xcf, 0xf6, 0x72, 0x55, 0x1f, 0x0d, 0xe1, 0x89, 0xf3, 0xf1, 0x9c, 0xb3,
	0x92, 0xf3, 0x13, 0xb3, 0xd1, 0x72, 0xce, 0xab, 0xe9, 0x88, 0xfd, 0x0c, 0x17, 0x27, 0x7a, 0x7c,
	0x0e, 0xf0, 0xed, 0x79, 0x85, 0x37, 0x03, 0x7e, 0x9f, 0xc0, 0xf7, 0xd8, 0xed, 0xfc, 0x88, 0xeb,
	0xe9, 0x80, 0xfd, 0x56, 0x80, 0xeb, 0xb9, 0x55, 0x2f, 0x87, 0xcf, 0xc1, 0x72, 0x65, 0x2c, 0xc3,
	0xee, 0x2e, 0xb1, 0xbb, 0xc5, 0x6e, 0xe4, 0xb1, 0xc3, 0xff, 0x7e, 0x93, 0x70, 0xc4, 0xbd, 0x64,
	0xa5, 0x70, 0x4c, 0xf4, 0x9f, 0xe5, 0xc2, 0xa1, 0x3a, 0x90, 0x52, 0x63, 0x23, 0xdb, 0x22, 0x99,
	0x39, 0xcb, 0x7c, 0xb6, 0x1f, 0xcf, 0x78, 0x89, 0xd3, 0x3d, 0xd6, 0xfc, 0x88, 0x58, 0xbc, 0xc7,
	0x1e, 0x2c, 0x62, 0xd1, 0x7e, 0x31, 0xca, 0xca, 0x33, 0xfd, 0xfb, 0x8c, 0xfd, 0x31, 0x26, 0x96,
	0x24, 0xe8, 0x32, 0xc4, 0x16, 0xa7, 0xea, 0x23, 0x62, 0xf5, 0x21, 0x7b, 0xff, 0x35, 0x58, 0x51,
	0x0a, 0x77, 0xd6, 0x68, 0x42, 0x7a, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x52, 0x12, 0x8b,
	0x97, 0x39, 0x12, 0x00, 0x00,
}
