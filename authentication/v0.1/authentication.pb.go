// Code generated by protoc-gen-go.
// source: authentication.proto
// DO NOT EDIT!

/*
Package authentication is a generated protocol buffer package.

It is generated from these files:
	authentication.proto

It has these top-level messages:
	ValidateRequest
	ValidateResponse
*/
package authentication

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Next Id 4
type ValidateRequest struct {
	Namespace string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Secret    string `protobuf:"bytes,3,opt,name=secret" json:"secret,omitempty"`
}

func (m *ValidateRequest) Reset()                    { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string            { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()               {}
func (*ValidateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ValidateResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ValidateResponse) Reset()                    { *m = ValidateResponse{} }
func (m *ValidateResponse) String() string            { return proto.CompactTextString(m) }
func (*ValidateResponse) ProtoMessage()               {}
func (*ValidateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ValidateResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*ValidateRequest)(nil), "authentication.ValidateRequest")
	proto.RegisterType((*ValidateResponse)(nil), "authentication.ValidateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Authentication service

type AuthenticationClient interface {
	// This rpc is used to check a valid user from other applications.
	User(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error)
	// appctl used this to validates the user token with phabricator.
	Token(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error)
}

type authenticationClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationClient(cc *grpc.ClientConn) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) User(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error) {
	out := new(ValidateResponse)
	err := grpc.Invoke(ctx, "/authentication.Authentication/User", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) Token(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error) {
	out := new(ValidateResponse)
	err := grpc.Invoke(ctx, "/authentication.Authentication/Token", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Authentication service

type AuthenticationServer interface {
	// This rpc is used to check a valid user from other applications.
	User(context.Context, *ValidateRequest) (*ValidateResponse, error)
	// appctl used this to validates the user token with phabricator.
	Token(context.Context, *ValidateRequest) (*ValidateResponse, error)
}

func RegisterAuthenticationServer(s *grpc.Server, srv AuthenticationServer) {
	s.RegisterService(&_Authentication_serviceDesc, srv)
}

func _Authentication_User_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(AuthenticationServer).User(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Authentication_Token_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(AuthenticationServer).Token(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Authentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authentication.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "User",
			Handler:    _Authentication_User_Handler,
		},
		{
			MethodName: "Token",
			Handler:    _Authentication_Token_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x91, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0xe9, 0xd4, 0xe1, 0x22, 0x54, 0x39, 0xca, 0x2c, 0x65, 0xea, 0xc8, 0x85, 0x88, 0x17,
	0x8d, 0xcc, 0xbb, 0xdd, 0xf9, 0x0a, 0xf5, 0xcf, 0x7d, 0xec, 0x0e, 0x5b, 0x75, 0x26, 0xb1, 0x39,
	0x15, 0xbc, 0xf5, 0x15, 0x7c, 0x34, 0x5f, 0x41, 0x7c, 0x0e, 0xd3, 0x64, 0x38, 0x5a, 0xf0, 0x6e,
	0x37, 0x85, 0xfc, 0xce, 0x47, 0x7f, 0xdf, 0x49, 0xd8, 0x91, 0xac, 0x69, 0x81, 0x8a, 0xca, 0x42,
	0x52, 0xa9, 0x55, 0x66, 0x2a, 0x4d, 0x1a, 0xe2, 0x36, 0x4d, 0x47, 0x73, 0xad, 0xe7, 0x4b, 0x14,
	0xd2, 0x94, 0x42, 0x2a, 0xa5, 0xc9, 0x63, 0x1b, 0xd2, 0xe9, 0xb0, 0xc1, 0x33, 0x7a, 0x37, 0x68,
	0x85, 0xff, 0x06, 0xce, 0x0b, 0xb6, 0xff, 0x20, 0x97, 0xe5, 0x4c, 0x12, 0xe6, 0xf8, 0x5a, 0xa3,
	0x25, 0x18, 0xb1, 0x81, 0x92, 0x2f, 0x68, 0x8d, 0x2c, 0x30, 0x89, 0xc6, 0xd1, 0xc5, 0x20, 0x5f,
	0x03, 0x48, 0xd9, 0x6e, 0x6d, 0xb1, 0x6a, 0x40, 0xd2, 0xf3, 0xc3, 0xbf, 0x33, 0x0c, 0x59, 0xdf,
	0x62, 0x51, 0x21, 0x25, 0x5b, 0x7e, 0xb2, 0x3a, 0xf1, 0x29, 0x3b, 0x58, 0x4b, 0xac, 0x71, 0xad,
	0x10, 0xce, 0x5d, 0xd6, 0x55, 0xac, 0xad, 0x57, 0xec, 0x4d, 0xe2, 0x2c, 0xb4, 0xcb, 0x6e, 0x3d,
	0xcd, 0x57, 0xd3, 0xc9, 0x4f, 0xc4, 0xe2, 0x9b, 0xd6, 0xa6, 0xb0, 0x60, 0xdb, 0xf7, 0x4e, 0x09,
	0x67, 0x59, 0xe7, 0x62, 0x3a, 0x9b, 0xa4, 0xe3, 0xff, 0x03, 0xa1, 0x05, 0x3f, 0xf9, 0xf8, 0xfa,
	0xfe, 0xec, 0x1d, 0x73, 0x08, 0xd7, 0xe6, 0xd2, 0x4a, 0xbc, 0x5d, 0x89, 0x66, 0xa3, 0x69, 0x74,
	0x09, 0x4f, 0x6c, 0xe7, 0x4e, 0x3f, 0xa3, 0xda, 0x84, 0xea, 0xd4, 0xab, 0x12, 0x7e, 0xd8, 0x56,
	0x51, 0xf3, 0x7f, 0xe7, 0x7a, 0xec, 0xfb, 0x07, 0xb9, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x93,
	0x32, 0xdf, 0x73, 0xee, 0x01, 0x00, 0x00,
}
