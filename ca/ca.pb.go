// Code generated by protoc-gen-go.
// source: ca.proto
// DO NOT EDIT!

/*
Package ca is a generated protocol buffer package.

It is generated from these files:
	ca.proto

It has these top-level messages:
	CARequest
	CAResponse
*/
package ca

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import comune1 "github.com/appscode/api/comune"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Use specific requests for protos
type CARequest struct {
	CaName string `protobuf:"bytes,1,opt,name=ca_name" json:"ca_name,omitempty"`
	Csr    string `protobuf:"bytes,2,opt,name=csr" json:"csr,omitempty"`
}

func (m *CARequest) Reset()                    { *m = CARequest{} }
func (m *CARequest) String() string            { return proto.CompactTextString(m) }
func (*CARequest) ProtoMessage()               {}
func (*CARequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CAResponse struct {
	Status *comune1.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Phid   string          `protobuf:"bytes,2,opt,name=phid" json:"phid,omitempty"`
	Cert   []byte          `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
	Key    []byte          `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Root   []byte          `protobuf:"bytes,5,opt,name=root,proto3" json:"root,omitempty"`
}

func (m *CAResponse) Reset()                    { *m = CAResponse{} }
func (m *CAResponse) String() string            { return proto.CompactTextString(m) }
func (*CAResponse) ProtoMessage()               {}
func (*CAResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CAResponse) GetStatus() *comune1.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*CARequest)(nil), "ca.CARequest")
	proto.RegisterType((*CAResponse)(nil), "ca.CAResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for CA service

type CAClient interface {
	CACreateAuthority(ctx context.Context, in *CARequest, opts ...grpc.CallOption) (*CAResponse, error)
	CACreateClientCert(ctx context.Context, in *CARequest, opts ...grpc.CallOption) (*CAResponse, error)
}

type cAClient struct {
	cc *grpc.ClientConn
}

func NewCAClient(cc *grpc.ClientConn) CAClient {
	return &cAClient{cc}
}

func (c *cAClient) CACreateAuthority(ctx context.Context, in *CARequest, opts ...grpc.CallOption) (*CAResponse, error) {
	out := new(CAResponse)
	err := grpc.Invoke(ctx, "/ca.CA/CACreateAuthority", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cAClient) CACreateClientCert(ctx context.Context, in *CARequest, opts ...grpc.CallOption) (*CAResponse, error) {
	out := new(CAResponse)
	err := grpc.Invoke(ctx, "/ca.CA/CACreateClientCert", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CA service

type CAServer interface {
	CACreateAuthority(context.Context, *CARequest) (*CAResponse, error)
	CACreateClientCert(context.Context, *CARequest) (*CAResponse, error)
}

func RegisterCAServer(s *grpc.Server, srv CAServer) {
	s.RegisterService(&_CA_serviceDesc, srv)
}

func _CA_CACreateAuthority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CAServer).CACreateAuthority(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _CA_CACreateClientCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(CAServer).CACreateClientCert(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _CA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ca.CA",
	HandlerType: (*CAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CACreateAuthority",
			Handler:    _CA_CACreateAuthority_Handler,
		},
		{
			MethodName: "CACreateClientCert",
			Handler:    _CA_CACreateClientCert_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x90, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0xb4, 0x14, 0x3a, 0x2d, 0x45, 0xb5, 0x10, 0x84, 0xa8, 0x02, 0x94, 0x15, 0xb0,
	0x48, 0x50, 0xd9, 0xb1, 0x8b, 0x7c, 0x02, 0xe8, 0x01, 0x90, 0x31, 0xa3, 0x36, 0xa2, 0xb5, 0x83,
	0x33, 0x41, 0xea, 0x96, 0x2b, 0x70, 0x0d, 0x6e, 0xc3, 0x15, 0x38, 0x08, 0xfe, 0x21, 0x88, 0x1d,
	0xcb, 0xcf, 0x33, 0xef, 0xd3, 0xf3, 0xc0, 0x9e, 0x14, 0x79, 0x6d, 0x34, 0x69, 0x16, 0x4b, 0x91,
	0xce, 0x96, 0x5a, 0x2f, 0xd7, 0x58, 0x88, 0xba, 0x2a, 0x84, 0x52, 0x9a, 0x04, 0x55, 0x5a, 0x35,
	0x61, 0x23, 0x3d, 0x76, 0xcf, 0x52, 0x6f, 0x5a, 0x85, 0x45, 0x63, 0x47, 0xed, 0xcf, 0x20, 0xbb,
	0x84, 0x21, 0x2f, 0xef, 0xf1, 0xa5, 0xc5, 0x86, 0xd8, 0x01, 0xec, 0x4a, 0xf1, 0xa0, 0xc4, 0x06,
	0x93, 0xe8, 0x3c, 0xba, 0x18, 0xb2, 0x11, 0xf4, 0x64, 0x63, 0x92, 0xd8, 0x41, 0x26, 0x01, 0xdc,
	0x6a, 0x53, 0x5b, 0x2d, 0xb2, 0x53, 0x18, 0x04, 0x91, 0x5f, 0x1d, 0xcd, 0x27, 0x79, 0xd0, 0xe7,
	0x0b, 0xff, 0xca, 0xc6, 0xd0, 0xaf, 0x57, 0xd5, 0x53, 0xc8, 0x3a, 0x92, 0x68, 0x28, 0xe9, 0x59,
	0x1a, 0x3b, 0xed, 0x33, 0x6e, 0x93, 0xbe, 0x07, 0x3b, 0x32, 0x5a, 0x53, 0xb2, 0xe3, 0x68, 0xfe,
	0x11, 0x41, 0xcc, 0x4b, 0xb6, 0x80, 0x29, 0x2f, 0xb9, 0x41, 0x41, 0x58, 0xb6, 0xb4, 0xd2, 0xa6,
	0xa2, 0x2d, 0xdb, 0xcf, 0xed, 0x8f, 0x7f, 0xdb, 0xa6, 0x93, 0x0e, 0x43, 0xa3, 0xec, 0xec, 0xed,
	0xf3, 0xeb, 0x3d, 0x3e, 0x49, 0x0f, 0xfd, 0x0d, 0xa4, 0x28, 0x5e, 0xaf, 0x0b, 0xd1, 0x85, 0x6f,
	0xa3, 0x2b, 0x76, 0x07, 0xac, 0x93, 0xf2, 0x75, 0x85, 0x8a, 0xb8, 0xad, 0xf4, 0x9f, 0x75, 0xe6,
	0xad, 0x47, 0xe9, 0xf4, 0x8f, 0x55, 0xfa, 0xb4, 0x55, 0x3e, 0x0e, 0xfc, 0x15, 0x6f, 0xbe, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xf1, 0x6c, 0xdf, 0x1c, 0x8c, 0x01, 0x00, 0x00,
}
