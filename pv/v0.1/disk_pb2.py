# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: disk.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from api.dtypes import types_pb2 as api_dot_dtypes_dot_types__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='disk.proto',
  package='pv',
  syntax='proto3',
  serialized_pb=_b('\n\ndisk.proto\x12\x02pv\x1a\x1cgoogle/api/annotations.proto\x1a\x16\x61pi/dtypes/types.proto\"a\n\x11\x44iskCreateRequest\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04zone\x18\x03 \x01(\t\x12\x11\n\tdisk_type\x18\x04 \x01(\t\x12\x0c\n\x04size\x18\x05 \x01(\x03\"8\n\x11\x44iskDeleteRequest\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\x12\n\nidentifier\x18\x02 \x01(\t\"\"\n\x0f\x44iskListRequest\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\"\\\n\x10\x44iskListResponse\x12\x1e\n\x06status\x18\x01 \x01(\x0b\x32\x0e.dtypes.Status\x12\x0c\n\x04kube\x18\x02 \x01(\t\x12\x1a\n\x06result\x18\x03 \x03(\x0b\x32\n.pv.Result\"J\n\x06Result\x12\x16\n\x04\x64isk\x18\x01 \x01(\x0b\x32\x08.pv.Disk\x12\x12\n\x02pv\x18\x02 \x01(\x0b\x32\x06.pv.PV\x12\x14\n\x03pvc\x18\x03 \x01(\x0b\x32\x07.pv.PVC\"\xa7\x01\n\x04\x44isk\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x0e\n\x06plugin\x18\x03 \x01(\t\x12\x0c\n\x04size\x18\x04 \x01(\x03\x12\x0c\n\x04type\x18\x05 \x01(\t\x12\x0c\n\x04zone\x18\x06 \x01(\t\x12\x0e\n\x06status\x18\x07 \x01(\t\x12\r\n\x05users\x18\x08 \x03(\t\x12\x0c\n\x04kind\x18\t \x01(\t\x12\x10\n\x08\x65ndpoint\x18\n \x01(\t\x12\x0c\n\x04iops\x18\x0b \x01(\x03\"m\n\x02PV\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\x03\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05\x63laim\x18\x04 \x01(\t\x12\x0e\n\x06volume\x18\x05 \x01(\t\x12\x0e\n\x06plugin\x18\x06 \x01(\t\x12\x0c\n\x04type\x18\x07 \x01(\t\"T\n\x03PVC\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\x03\x12\x11\n\tnamespace\x18\x03 \x01(\t\x12\x0e\n\x06status\x18\x04 \x01(\t\x12\x0e\n\x06volume\x18\x05 \x01(\t\"D\n\x13\x44iskDescribeRequest\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06plugin\x18\x03 \x01(\t\"N\n\x14\x44iskDescribeResponse\x12\x1e\n\x06status\x18\x01 \x01(\x0b\x32\x0e.dtypes.Status\x12\x16\n\x04\x64isk\x18\x02 \x01(\x0b\x32\x08.pv.Disk2\xa6\x03\n\x05\x44isks\x12W\n\x04List\x12\x13.pv.DiskListRequest\x1a\x14.pv.DiskListResponse\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/pv/v0.1/disks/{cluster}\x12s\n\x08\x44\x65scribe\x12\x17.pv.DiskDescribeRequest\x1a\x18.pv.DiskDescribeResponse\"4\x82\xd3\xe4\x93\x02.\x12,/api/pv/v0.1/disks/{cluster}/{name}/{plugin}\x12\x65\n\x06\x43reate\x12\x15.pv.DiskCreateRequest\x1a\x14.dtypes.VoidResponse\".\x82\xd3\xe4\x93\x02(\x1a#/api/pv/v0.1/disks/{cluster}/{name}:\x01*\x12h\n\x06\x44\x65lete\x12\x15.pv.DiskDeleteRequest\x1a\x14.dtypes.VoidResponse\"1\x82\xd3\xe4\x93\x02+*)/api/pv/v0.1/disks/{cluster}/{identifier}b\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,api_dot_dtypes_dot_types__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_DISKCREATEREQUEST = _descriptor.Descriptor(
  name='DiskCreateRequest',
  full_name='pv.DiskCreateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cluster', full_name='pv.DiskCreateRequest.cluster', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='pv.DiskCreateRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='pv.DiskCreateRequest.zone', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disk_type', full_name='pv.DiskCreateRequest.disk_type', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='pv.DiskCreateRequest.size', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=169,
)


_DISKDELETEREQUEST = _descriptor.Descriptor(
  name='DiskDeleteRequest',
  full_name='pv.DiskDeleteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cluster', full_name='pv.DiskDeleteRequest.cluster', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='identifier', full_name='pv.DiskDeleteRequest.identifier', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=171,
  serialized_end=227,
)


_DISKLISTREQUEST = _descriptor.Descriptor(
  name='DiskListRequest',
  full_name='pv.DiskListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cluster', full_name='pv.DiskListRequest.cluster', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=229,
  serialized_end=263,
)


_DISKLISTRESPONSE = _descriptor.Descriptor(
  name='DiskListResponse',
  full_name='pv.DiskListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='pv.DiskListResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kube', full_name='pv.DiskListResponse.kube', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='pv.DiskListResponse.result', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=265,
  serialized_end=357,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='pv.Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disk', full_name='pv.Result.disk', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pv', full_name='pv.Result.pv', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pvc', full_name='pv.Result.pvc', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=359,
  serialized_end=433,
)


_DISK = _descriptor.Descriptor(
  name='Disk',
  full_name='pv.Disk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='pv.Disk.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='pv.Disk.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='plugin', full_name='pv.Disk.plugin', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='pv.Disk.size', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='pv.Disk.type', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='pv.Disk.zone', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='pv.Disk.status', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='users', full_name='pv.Disk.users', index=7,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kind', full_name='pv.Disk.kind', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='endpoint', full_name='pv.Disk.endpoint', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='iops', full_name='pv.Disk.iops', index=10,
      number=11, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=436,
  serialized_end=603,
)


_PV = _descriptor.Descriptor(
  name='PV',
  full_name='pv.PV',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='pv.PV.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='pv.PV.size', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='pv.PV.status', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='claim', full_name='pv.PV.claim', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume', full_name='pv.PV.volume', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='plugin', full_name='pv.PV.plugin', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='pv.PV.type', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=605,
  serialized_end=714,
)


_PVC = _descriptor.Descriptor(
  name='PVC',
  full_name='pv.PVC',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='pv.PVC.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='pv.PVC.size', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='pv.PVC.namespace', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='pv.PVC.status', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume', full_name='pv.PVC.volume', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=716,
  serialized_end=800,
)


_DISKDESCRIBEREQUEST = _descriptor.Descriptor(
  name='DiskDescribeRequest',
  full_name='pv.DiskDescribeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cluster', full_name='pv.DiskDescribeRequest.cluster', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='pv.DiskDescribeRequest.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='plugin', full_name='pv.DiskDescribeRequest.plugin', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=802,
  serialized_end=870,
)


_DISKDESCRIBERESPONSE = _descriptor.Descriptor(
  name='DiskDescribeResponse',
  full_name='pv.DiskDescribeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='pv.DiskDescribeResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disk', full_name='pv.DiskDescribeResponse.disk', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=872,
  serialized_end=950,
)

_DISKLISTRESPONSE.fields_by_name['status'].message_type = api_dot_dtypes_dot_types__pb2._STATUS
_DISKLISTRESPONSE.fields_by_name['result'].message_type = _RESULT
_RESULT.fields_by_name['disk'].message_type = _DISK
_RESULT.fields_by_name['pv'].message_type = _PV
_RESULT.fields_by_name['pvc'].message_type = _PVC
_DISKDESCRIBERESPONSE.fields_by_name['status'].message_type = api_dot_dtypes_dot_types__pb2._STATUS
_DISKDESCRIBERESPONSE.fields_by_name['disk'].message_type = _DISK
DESCRIPTOR.message_types_by_name['DiskCreateRequest'] = _DISKCREATEREQUEST
DESCRIPTOR.message_types_by_name['DiskDeleteRequest'] = _DISKDELETEREQUEST
DESCRIPTOR.message_types_by_name['DiskListRequest'] = _DISKLISTREQUEST
DESCRIPTOR.message_types_by_name['DiskListResponse'] = _DISKLISTRESPONSE
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['Disk'] = _DISK
DESCRIPTOR.message_types_by_name['PV'] = _PV
DESCRIPTOR.message_types_by_name['PVC'] = _PVC
DESCRIPTOR.message_types_by_name['DiskDescribeRequest'] = _DISKDESCRIBEREQUEST
DESCRIPTOR.message_types_by_name['DiskDescribeResponse'] = _DISKDESCRIBERESPONSE

DiskCreateRequest = _reflection.GeneratedProtocolMessageType('DiskCreateRequest', (_message.Message,), dict(
  DESCRIPTOR = _DISKCREATEREQUEST,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.DiskCreateRequest)
  ))
_sym_db.RegisterMessage(DiskCreateRequest)

DiskDeleteRequest = _reflection.GeneratedProtocolMessageType('DiskDeleteRequest', (_message.Message,), dict(
  DESCRIPTOR = _DISKDELETEREQUEST,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.DiskDeleteRequest)
  ))
_sym_db.RegisterMessage(DiskDeleteRequest)

DiskListRequest = _reflection.GeneratedProtocolMessageType('DiskListRequest', (_message.Message,), dict(
  DESCRIPTOR = _DISKLISTREQUEST,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.DiskListRequest)
  ))
_sym_db.RegisterMessage(DiskListRequest)

DiskListResponse = _reflection.GeneratedProtocolMessageType('DiskListResponse', (_message.Message,), dict(
  DESCRIPTOR = _DISKLISTRESPONSE,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.DiskListResponse)
  ))
_sym_db.RegisterMessage(DiskListResponse)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.Result)
  ))
_sym_db.RegisterMessage(Result)

Disk = _reflection.GeneratedProtocolMessageType('Disk', (_message.Message,), dict(
  DESCRIPTOR = _DISK,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.Disk)
  ))
_sym_db.RegisterMessage(Disk)

PV = _reflection.GeneratedProtocolMessageType('PV', (_message.Message,), dict(
  DESCRIPTOR = _PV,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.PV)
  ))
_sym_db.RegisterMessage(PV)

PVC = _reflection.GeneratedProtocolMessageType('PVC', (_message.Message,), dict(
  DESCRIPTOR = _PVC,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.PVC)
  ))
_sym_db.RegisterMessage(PVC)

DiskDescribeRequest = _reflection.GeneratedProtocolMessageType('DiskDescribeRequest', (_message.Message,), dict(
  DESCRIPTOR = _DISKDESCRIBEREQUEST,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.DiskDescribeRequest)
  ))
_sym_db.RegisterMessage(DiskDescribeRequest)

DiskDescribeResponse = _reflection.GeneratedProtocolMessageType('DiskDescribeResponse', (_message.Message,), dict(
  DESCRIPTOR = _DISKDESCRIBERESPONSE,
  __module__ = 'disk_pb2'
  # @@protoc_insertion_point(class_scope:pv.DiskDescribeResponse)
  ))
_sym_db.RegisterMessage(DiskDescribeResponse)


# @@protoc_insertion_point(module_scope)
