syntax = "proto3";

package pv;

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

service Disks {
  rpc List(DiskListRequest) returns (DiskListResponse) {
    option (google.api.http) = {
      get: "/api/pv/v0.1/disks/{cluster}"
    };
  }

  rpc Describe(DiskDescribeRequest) returns (DiskDescribeResponse) {
    option (google.api.http) = {
      get: "/api/pv/v0.1/disks/{cluster}/{name}"
    };
  }

  rpc Create(DiskCreateRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put: "/api/pv/v0.1/disks/{cluster}/{name}"
      body: "*"
    };
  }

  rpc Delete(DiskDeleteRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/api/pv/v0.1/disks/{cluster}/{identifier}"
    };
  }
}

message DiskCreateRequest {
  string cluster = 1;
  string name = 2;
  string zone = 3;
  string disk_type = 4;
  int64 size = 5;
}

message DiskDeleteRequest {
  string cluster = 1;
  string identifier = 2;
}

message DiskListRequest {
  string cluster=1;
}

message DiskListResponse {
  dtypes.Status status = 1;
  string  kube = 2;
  repeated Result result = 3;
}

message Result{
  Disk disk = 1;
  PV pv = 2;
  PVC pvc = 3;
  int64 position = 4;
}

message Disk{
  string name = 1;
  string id = 2;
  string plugin = 3;
  int64 size = 4;
  string type = 5;
  string zone = 6;
  string status = 7;
  repeated string users = 8;
  string kind = 9;
  string endpoint = 10;
}

message PV {
  string name = 1;
  int64 size = 2;
  string status = 3;
  string claim = 4;
  repeated string users = 5;
}

message PVC{
  string name = 1;
  int64 size = 2;
  string namespace = 3;
  string status = 4;
  repeated string users = 5;
}

message DiskDescribeRequest {
  string cluster = 1;
  string name = 2;
}
message DiskDescribeResponse {
  dtypes.Status status = 1;
  Result result = 2;
}
