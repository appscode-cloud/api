#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

RETVAL=0
ROOT=$PWD

ALIAS="Mgoogle/api/annotations.proto=github.com/gengo/grpc-gateway/third_party/googleapis/google/api,"
ALIAS+="Mapi/dtypes/types.proto=github.com/appscode/api/dtypes,"
ALIAS+="Mapi/ci/ci.proto=github.com/appscode/api/ci,"
ALIAS+="Mapi/kubernetes/kubernetes.proto=github.com/appscode/api/kubernetes"


clean() {
	rm -rf ./*/*.pb.go ./*/*.pb.gw.go
}

gen_server_protos() {
	echo "Generating server protobuf files"
    for d in */ ; do
        pushd ${d}
        rm -rf *.pb.go
        protoc -I /usr/local/include -I . \
           -I ${GOPATH}/src/github.com/appscode \
           -I ${GOPATH}/src/github.com/gengo/grpc-gateway/third_party/googleapis \
           -I ${GOPATH}/src/github.com/google/googleapis/google \
           --go_out=plugins=grpc,${ALIAS}:. *.proto
        popd
    done
}

gen_proxy_protos() {
    echo "Generating gateway protobuf files"
    for d in */ ; do
        pushd ${d}
        rm -rf *.pb.gw.go
        protoc -I /usr/local/include -I . \
           -I ${GOPATH}/src/github.com/appscode \
           -I ${GOPATH}/src/github.com/gengo/grpc-gateway/third_party/googleapis \
           -I ${GOPATH}/src/github.com/google/googleapis/google \
           --grpc-gateway_out=logtostderr=true:. *.proto
        popd
    done
}

gen_protos() {
    clean
    gen_server_protos
    gen_proxy_protos
}

if [ $# -eq 0 ]; then
	gen_protos
	exit $RETVAL
fi

case "$1" in
	server)
		gen_server_protos
		;;
	proxy)
		gen_proxy_protos
		;;
	all)
		gen_protos
		;;
	clean)
	    clean
	    ;;
	*)  echo $"Usage: $0 {server|proxy|all|clean}"
		RETVAL=1
		;;
esac
exit $RETVAL