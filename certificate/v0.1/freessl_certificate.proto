syntax = "proto3";

package certificate;

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

service FreeSSLCertificates {
  rpc Register(FreeSSLCertificateRegisterRequest) returns (FreeSSLCertificateRegisterResponse) {
    option (google.api.http) = {
      get: "/api/freessl/v0.1/tls"
    };
  }

  rpc Create(FreeSSLCertificateCreateRequest) returns (FreeSSLCertificateCreateResponse) {
    option (google.api.http) = {
      put: "/api/freessl/v0.1/tls"
      body: "*"
    };
  }

  rpc Revoke(FreeSSLCertificateRevokeRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/api/freessl/v0.1/tls/{cert_phid}"
    };
  }

  rpc Renew(FreeSSLCertificateRenewRequest) returns (FreeSSLCertificateRenewResponse) {
    option (google.api.http) = {
      delete: "/api/freessl/v0.1/tls/{cert_phid}"
    };
  }
}

message FreeSSLCertificateRegisterRequest {
  string email = 1;
}

message FreeSSLCertificateRegisterResponse {
  dtypes.Status status = 1;
  string phid = 2;
}

message FreeSSLCertificate {
  string phid = 1;
  string name = 2;
  string common_name = 3;
  string issued_by = 4;
  string valid_from = 5;
  string expire_date = 6;

  // those feilds will not included into list response.
  // only describe response will include the underlying
  // feilds.
  repeated string sans = 7;
  string cert = 8;
  string key = 9;
  int32 version = 10;
  string serial_number = 11;
}

message FreeSSLCertificateCreateRequest {
  string account_phid = 1;
  string name = 2;
  string common_name = 3;
  repeated string san = 4;
  bool bundle = 5;
  string key_data = 6;
}

message FreeSSLCertificateCreateResponse {
  dtypes.Status status = 1;
  FreeSSLCertificate certificate = 2;
}

message FreeSSLCertificateRevokeRequest {
  string account_phid = 1;
  string cert_phid = 2;
}

message FreeSSLCertificateRenewRequest {
  string account_phid = 1;
  string name = 2;
  string cert_phid = 3;
}

message FreeSSLCertificateRenewResponse {
  dtypes.Status status = 1;
  string cert = 2;
}

message FreeSSLCertificateDescribeRequest {
  string cert = 1;
}

message DNSCheckRequest {
  string domain =1;
  string key_auth = 2;
}