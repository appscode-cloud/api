// Code generated by protoc-gen-go.
// source: charge.proto
// DO NOT EDIT!

/*
Package billing is a generated protocol buffer package.

It is generated from these files:
	charge.proto
	subscription.proto

It has these top-level messages:
	ChargeCreateRequest
	ChargeCreateResponse
	SubscriptionDescribeRequest
	SubscriptionDescribeResponse
	Subscription
	SubscriptionOpenRequest
	SubscriptionCloseRequest
*/
package billing

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ChargeCreateRequest struct {
	ChargeType string `protobuf:"bytes,1,opt,name=charge_type" json:"charge_type,omitempty"`
}

func (m *ChargeCreateRequest) Reset()                    { *m = ChargeCreateRequest{} }
func (m *ChargeCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*ChargeCreateRequest) ProtoMessage()               {}
func (*ChargeCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ChargeCreateResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Cost   float64        `protobuf:"fixed64,2,opt,name=cost" json:"cost,omitempty"`
}

func (m *ChargeCreateResponse) Reset()                    { *m = ChargeCreateResponse{} }
func (m *ChargeCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*ChargeCreateResponse) ProtoMessage()               {}
func (*ChargeCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChargeCreateResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*ChargeCreateRequest)(nil), "billing.ChargeCreateRequest")
	proto.RegisterType((*ChargeCreateResponse)(nil), "billing.ChargeCreateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Charge service

type ChargeClient interface {
	Create(ctx context.Context, in *ChargeCreateRequest, opts ...grpc.CallOption) (*ChargeCreateResponse, error)
}

type chargeClient struct {
	cc *grpc.ClientConn
}

func NewChargeClient(cc *grpc.ClientConn) ChargeClient {
	return &chargeClient{cc}
}

func (c *chargeClient) Create(ctx context.Context, in *ChargeCreateRequest, opts ...grpc.CallOption) (*ChargeCreateResponse, error) {
	out := new(ChargeCreateResponse)
	err := grpc.Invoke(ctx, "/billing.Charge/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Charge service

type ChargeServer interface {
	Create(context.Context, *ChargeCreateRequest) (*ChargeCreateResponse, error)
}

func RegisterChargeServer(s *grpc.Server, srv ChargeServer) {
	s.RegisterService(&_Charge_serviceDesc, srv)
}

func _Charge_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ChargeCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ChargeServer).Create(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Charge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "billing.Charge",
	HandlerType: (*ChargeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Charge_Create_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0x48, 0x2c,
	0x4a, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xca, 0xcc, 0xc9, 0xc9, 0xcc,
	0x4b, 0x97, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc,
	0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x93, 0x12, 0x03, 0x09, 0xa7,
	0x94, 0x54, 0x16, 0xa4, 0x16, 0xeb, 0x83, 0x49, 0x88, 0xb8, 0x92, 0x16, 0x97, 0xb0, 0x33, 0xd8,
	0x38, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0xd4, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x61,
	0x2e, 0x6e, 0x88, 0x2d, 0xf1, 0x20, 0xc5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x4a, 0x2e, 0x5c,
	0x22, 0xa8, 0x6a, 0x8b, 0x0b, 0x80, 0x16, 0xa4, 0x0a, 0xc9, 0x71, 0xb1, 0x15, 0x03, 0x6d, 0x2b,
	0x2d, 0x06, 0xab, 0xe3, 0x36, 0xe2, 0xd3, 0x83, 0x58, 0xa4, 0x17, 0x0c, 0x16, 0x15, 0xe2, 0xe1,
	0x62, 0x49, 0xce, 0x2f, 0x2e, 0x91, 0x60, 0x02, 0xca, 0x32, 0x1a, 0x35, 0x30, 0x72, 0xb1, 0x41,
	0x8c, 0x11, 0x2a, 0x03, 0xb2, 0xc0, 0x46, 0x09, 0xc9, 0xe8, 0x41, 0xbd, 0xa1, 0x87, 0xc5, 0x35,
	0x52, 0xb2, 0x38, 0x64, 0x21, 0xf6, 0x2b, 0xe9, 0x37, 0x5d, 0x7e, 0x32, 0x99, 0x49, 0x53, 0x4a,
	0x05, 0xec, 0x77, 0xa8, 0x52, 0xfd, 0x32, 0x03, 0x7d, 0x88, 0x17, 0xf4, 0xab, 0x91, 0xbc, 0x52,
	0x6b, 0xc5, 0xa8, 0x95, 0xc4, 0x06, 0xf6, 0xbb, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xb4,
	0xdb, 0xdd, 0x4a, 0x01, 0x00, 0x00,
}
