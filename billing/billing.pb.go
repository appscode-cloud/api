// Code generated by protoc-gen-go.
// source: billing.proto
// DO NOT EDIT!

/*
Package billing is a generated protocol buffer package.

It is generated from these files:
	billing.proto

It has these top-level messages:
	BillingSubscriptionGetRequest
	BillingSubscriptionGetResponse
	BillingSubscription
	BillingPurchaseOpenRequest
	BillingPurchaseCloseRequest
	BillingChargeRequest
	BillingChargeResponse
	BillingVoidResponse
*/
package billing

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import comune1 "github.com/appscode/api/comune"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type BillingSubscriptionGetRequest struct {
	CurrentTime string `protobuf:"bytes,1,opt,name=current_time" json:"current_time,omitempty"`
}

func (m *BillingSubscriptionGetRequest) Reset()                    { *m = BillingSubscriptionGetRequest{} }
func (m *BillingSubscriptionGetRequest) String() string            { return proto.CompactTextString(m) }
func (*BillingSubscriptionGetRequest) ProtoMessage()               {}
func (*BillingSubscriptionGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BillingSubscriptionGetResponse struct {
	Status       *comune1.Status        `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Subscription []*BillingSubscription `protobuf:"bytes,2,rep,name=subscription" json:"subscription,omitempty"`
}

func (m *BillingSubscriptionGetResponse) Reset()                    { *m = BillingSubscriptionGetResponse{} }
func (m *BillingSubscriptionGetResponse) String() string            { return proto.CompactTextString(m) }
func (*BillingSubscriptionGetResponse) ProtoMessage()               {}
func (*BillingSubscriptionGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BillingSubscriptionGetResponse) GetStatus() *comune1.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BillingSubscriptionGetResponse) GetSubscription() []*BillingSubscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type BillingSubscription struct {
	Author      string `protobuf:"bytes,1,opt,name=author" json:"author,omitempty"`
	ProductSku  string `protobuf:"bytes,2,opt,name=product_sku" json:"product_sku,omitempty"`
	Metadata    string `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	DateStarted string `protobuf:"bytes,4,opt,name=date_started" json:"date_started,omitempty"`
	DateEnded   string `protobuf:"bytes,5,opt,name=date_ended" json:"date_ended,omitempty"`
}

func (m *BillingSubscription) Reset()                    { *m = BillingSubscription{} }
func (m *BillingSubscription) String() string            { return proto.CompactTextString(m) }
func (*BillingSubscription) ProtoMessage()               {}
func (*BillingSubscription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type BillingPurchaseOpenRequest struct {
	ProductType      string `protobuf:"bytes,1,opt,name=product_type" json:"product_type,omitempty"`
	AuthorPhid       string `protobuf:"bytes,2,opt,name=author_phid" json:"author_phid,omitempty"`
	ObjectPhid       string `protobuf:"bytes,3,opt,name=object_phid" json:"object_phid,omitempty"`
	SubscriptionPhid string `protobuf:"bytes,4,opt,name=subscription_phid" json:"subscription_phid,omitempty"`
	Metadata         string `protobuf:"bytes,5,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *BillingPurchaseOpenRequest) Reset()                    { *m = BillingPurchaseOpenRequest{} }
func (m *BillingPurchaseOpenRequest) String() string            { return proto.CompactTextString(m) }
func (*BillingPurchaseOpenRequest) ProtoMessage()               {}
func (*BillingPurchaseOpenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type BillingPurchaseCloseRequest struct {
	ProductType string `protobuf:"bytes,1,opt,name=product_type" json:"product_type,omitempty"`
	ObjectPhid  string `protobuf:"bytes,2,opt,name=object_phid" json:"object_phid,omitempty"`
}

func (m *BillingPurchaseCloseRequest) Reset()                    { *m = BillingPurchaseCloseRequest{} }
func (m *BillingPurchaseCloseRequest) String() string            { return proto.CompactTextString(m) }
func (*BillingPurchaseCloseRequest) ProtoMessage()               {}
func (*BillingPurchaseCloseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type BillingChargeRequest struct {
	ChargeType string `protobuf:"bytes,1,opt,name=charge_type" json:"charge_type,omitempty"`
}

func (m *BillingChargeRequest) Reset()                    { *m = BillingChargeRequest{} }
func (m *BillingChargeRequest) String() string            { return proto.CompactTextString(m) }
func (*BillingChargeRequest) ProtoMessage()               {}
func (*BillingChargeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type BillingChargeResponse struct {
	Status *comune1.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Cost   float64         `protobuf:"fixed64,2,opt,name=cost" json:"cost,omitempty"`
}

func (m *BillingChargeResponse) Reset()                    { *m = BillingChargeResponse{} }
func (m *BillingChargeResponse) String() string            { return proto.CompactTextString(m) }
func (*BillingChargeResponse) ProtoMessage()               {}
func (*BillingChargeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BillingChargeResponse) GetStatus() *comune1.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type BillingVoidResponse struct {
	Status *comune1.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *BillingVoidResponse) Reset()                    { *m = BillingVoidResponse{} }
func (m *BillingVoidResponse) String() string            { return proto.CompactTextString(m) }
func (*BillingVoidResponse) ProtoMessage()               {}
func (*BillingVoidResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BillingVoidResponse) GetStatus() *comune1.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*BillingSubscriptionGetRequest)(nil), "billing.BillingSubscriptionGetRequest")
	proto.RegisterType((*BillingSubscriptionGetResponse)(nil), "billing.BillingSubscriptionGetResponse")
	proto.RegisterType((*BillingSubscription)(nil), "billing.BillingSubscription")
	proto.RegisterType((*BillingPurchaseOpenRequest)(nil), "billing.BillingPurchaseOpenRequest")
	proto.RegisterType((*BillingPurchaseCloseRequest)(nil), "billing.BillingPurchaseCloseRequest")
	proto.RegisterType((*BillingChargeRequest)(nil), "billing.BillingChargeRequest")
	proto.RegisterType((*BillingChargeResponse)(nil), "billing.BillingChargeResponse")
	proto.RegisterType((*BillingVoidResponse)(nil), "billing.BillingVoidResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Billing service

type BillingClient interface {
	BillingSubscriptionGet(ctx context.Context, in *BillingSubscriptionGetRequest, opts ...grpc.CallOption) (*BillingSubscriptionGetResponse, error)
	BillingPurchaseOpen(ctx context.Context, in *BillingPurchaseOpenRequest, opts ...grpc.CallOption) (*BillingVoidResponse, error)
	BillingPurchaseClose(ctx context.Context, in *BillingPurchaseCloseRequest, opts ...grpc.CallOption) (*BillingVoidResponse, error)
	BillingCharge(ctx context.Context, in *BillingChargeRequest, opts ...grpc.CallOption) (*BillingChargeResponse, error)
}

type billingClient struct {
	cc *grpc.ClientConn
}

func NewBillingClient(cc *grpc.ClientConn) BillingClient {
	return &billingClient{cc}
}

func (c *billingClient) BillingSubscriptionGet(ctx context.Context, in *BillingSubscriptionGetRequest, opts ...grpc.CallOption) (*BillingSubscriptionGetResponse, error) {
	out := new(BillingSubscriptionGetResponse)
	err := grpc.Invoke(ctx, "/billing.Billing/BillingSubscriptionGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) BillingPurchaseOpen(ctx context.Context, in *BillingPurchaseOpenRequest, opts ...grpc.CallOption) (*BillingVoidResponse, error) {
	out := new(BillingVoidResponse)
	err := grpc.Invoke(ctx, "/billing.Billing/BillingPurchaseOpen", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) BillingPurchaseClose(ctx context.Context, in *BillingPurchaseCloseRequest, opts ...grpc.CallOption) (*BillingVoidResponse, error) {
	out := new(BillingVoidResponse)
	err := grpc.Invoke(ctx, "/billing.Billing/BillingPurchaseClose", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingClient) BillingCharge(ctx context.Context, in *BillingChargeRequest, opts ...grpc.CallOption) (*BillingChargeResponse, error) {
	out := new(BillingChargeResponse)
	err := grpc.Invoke(ctx, "/billing.Billing/BillingCharge", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Billing service

type BillingServer interface {
	BillingSubscriptionGet(context.Context, *BillingSubscriptionGetRequest) (*BillingSubscriptionGetResponse, error)
	BillingPurchaseOpen(context.Context, *BillingPurchaseOpenRequest) (*BillingVoidResponse, error)
	BillingPurchaseClose(context.Context, *BillingPurchaseCloseRequest) (*BillingVoidResponse, error)
	BillingCharge(context.Context, *BillingChargeRequest) (*BillingChargeResponse, error)
}

func RegisterBillingServer(s *grpc.Server, srv BillingServer) {
	s.RegisterService(&_Billing_serviceDesc, srv)
}

func _Billing_BillingSubscriptionGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(BillingSubscriptionGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BillingServer).BillingSubscriptionGet(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Billing_BillingPurchaseOpen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(BillingPurchaseOpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BillingServer).BillingPurchaseOpen(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Billing_BillingPurchaseClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(BillingPurchaseCloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BillingServer).BillingPurchaseClose(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Billing_BillingCharge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(BillingChargeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BillingServer).BillingCharge(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Billing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "billing.Billing",
	HandlerType: (*BillingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BillingSubscriptionGet",
			Handler:    _Billing_BillingSubscriptionGet_Handler,
		},
		{
			MethodName: "BillingPurchaseOpen",
			Handler:    _Billing_BillingPurchaseOpen_Handler,
		},
		{
			MethodName: "BillingPurchaseClose",
			Handler:    _Billing_BillingPurchaseClose_Handler,
		},
		{
			MethodName: "BillingCharge",
			Handler:    _Billing_BillingCharge_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 543 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x94, 0xcf, 0x6b, 0x13, 0x41,
	0x14, 0xc7, 0xd9, 0x36, 0xa6, 0xfa, 0x9a, 0x16, 0x9d, 0x56, 0x8d, 0x6b, 0x1b, 0xca, 0x5a, 0xaa,
	0xb4, 0x9a, 0x95, 0x94, 0x22, 0x14, 0x04, 0xb1, 0x88, 0xde, 0x14, 0x0b, 0x5e, 0xc3, 0x64, 0xf7,
	0x91, 0xac, 0x26, 0x3b, 0xeb, 0xce, 0x4c, 0x41, 0x62, 0x2e, 0xde, 0x3c, 0x7b, 0xd2, 0x83, 0xff,
	0x94, 0x7f, 0x81, 0xe0, 0x1f, 0xe2, 0x64, 0x66, 0x92, 0x4c, 0xb6, 0x89, 0x09, 0x1e, 0xf7, 0x3b,
	0xef, 0xc7, 0xe7, 0xcd, 0xfb, 0xce, 0xc2, 0x46, 0x2b, 0xe9, 0x76, 0x93, 0xb4, 0x5d, 0xcf, 0x72,
	0x26, 0x18, 0x59, 0xb3, 0x9f, 0xfe, 0x4e, 0x9b, 0xb1, 0x76, 0x17, 0x43, 0x9a, 0x25, 0x21, 0x4d,
	0x53, 0x26, 0xa8, 0x48, 0x58, 0xca, 0x4d, 0x98, 0x7f, 0x7b, 0x28, 0x47, 0xac, 0x27, 0x53, 0x0c,
	0xb9, 0x3a, 0x92, 0xf6, 0x20, 0x38, 0x81, 0xdd, 0xe7, 0xa6, 0xc2, 0xb9, 0x6c, 0xf1, 0x28, 0x4f,
	0xb2, 0x61, 0xda, 0x4b, 0x14, 0x6f, 0xf1, 0xa3, 0x44, 0x2e, 0xc8, 0x36, 0x54, 0x22, 0x99, 0xe7,
	0x98, 0x8a, 0xa6, 0x48, 0x7a, 0x58, 0xf5, 0xf6, 0xbc, 0x07, 0xd7, 0x02, 0x01, 0xb5, 0x79, 0x69,
	0x3c, 0x53, 0x6d, 0x91, 0xd4, 0xa0, 0x6c, 0x1a, 0xe9, 0x8c, 0xf5, 0xc6, 0x66, 0xdd, 0xb4, 0xaf,
	0x9f, 0x6b, 0x95, 0x34, 0xa0, 0xc2, 0x9d, 0xd4, 0xea, 0xca, 0xde, 0xaa, 0x8a, 0xda, 0xa9, 0x8f,
	0xc6, 0x9b, 0x51, 0x3e, 0xb8, 0x80, 0xad, 0x19, 0x32, 0xd9, 0x84, 0x32, 0x95, 0xa2, 0xc3, 0x72,
	0x03, 0x47, 0xb6, 0x60, 0x5d, 0x0d, 0x17, 0xcb, 0x48, 0x34, 0xf9, 0x07, 0xa9, 0x2a, 0x0f, 0xc5,
	0xeb, 0x70, 0xb5, 0x87, 0x82, 0xc6, 0x54, 0xd0, 0xea, 0xaa, 0x56, 0xd4, 0x64, 0xea, 0x0b, 0x9b,
	0x0a, 0x33, 0x17, 0x18, 0x57, 0x4b, 0x5a, 0x25, 0x00, 0x5a, 0xc5, 0x34, 0x56, 0xda, 0x15, 0x3d,
	0xed, 0x57, 0x0f, 0x7c, 0xdb, 0xf8, 0x8d, 0xcc, 0xa3, 0x0e, 0xe5, 0xf8, 0x3a, 0xc3, 0xd4, 0xb9,
	0xa2, 0x51, 0x3f, 0xf1, 0x29, 0xc3, 0x09, 0x85, 0xa1, 0x6a, 0x66, 0x9d, 0x24, 0xb6, 0x14, 0x4a,
	0x64, 0xad, 0xf7, 0xa8, 0x22, 0xb5, 0x68, 0x40, 0xee, 0xc0, 0x0d, 0xf7, 0x2a, 0xcc, 0x51, 0xe9,
	0x12, 0xb5, 0x61, 0x79, 0x05, 0x77, 0x0b, 0x28, 0x67, 0x5d, 0xc6, 0x71, 0x21, 0x8b, 0xdb, 0x56,
	0xb3, 0x04, 0x47, 0xb0, 0x6d, 0x2b, 0x9d, 0x75, 0x68, 0xde, 0x1e, 0x97, 0x50, 0xc1, 0x91, 0x16,
	0x9c, 0x0a, 0xc1, 0x0b, 0xb8, 0x59, 0x08, 0x5e, 0x72, 0xcf, 0x15, 0x28, 0x45, 0x8c, 0x0b, 0xdd,
	0xd3, 0x53, 0x76, 0x1b, 0x6d, 0xf0, 0x1d, 0x4b, 0xe2, 0x65, 0x8b, 0x34, 0x7e, 0x97, 0x60, 0xcd,
	0xe6, 0x91, 0x9f, 0x1e, 0xdc, 0x9a, 0xed, 0x3d, 0x72, 0xf0, 0x2f, 0xf7, 0x4c, 0x3c, 0xed, 0xdf,
	0x5f, 0x18, 0x67, 0xb8, 0x82, 0xe3, 0x2f, 0xbf, 0xfe, 0x7c, 0x5b, 0x79, 0x44, 0x8e, 0xf4, 0xb3,
	0xb2, 0x49, 0xe1, 0xc5, 0xe3, 0xd0, 0xdd, 0x57, 0xd8, 0x77, 0x1f, 0xc8, 0x80, 0xfc, 0xf0, 0xc6,
	0x43, 0xba, 0x6e, 0x21, 0xf7, 0x8a, 0x5d, 0x67, 0x78, 0xc9, 0xbf, 0xf4, 0x00, 0xdc, 0x7b, 0x0a,
	0x9e, 0x69, 0x9e, 0x53, 0xff, 0xa4, 0xc8, 0x93, 0xd9, 0x52, 0x61, 0xdf, 0xdd, 0xfe, 0x20, 0xec,
	0x3b, 0x6b, 0x1f, 0x9c, 0x7a, 0x87, 0xe4, 0xbb, 0x37, 0xde, 0xfa, 0x94, 0x7f, 0xc8, 0xfe, 0x3c,
	0x3a, 0xd7, 0x5e, 0x0b, 0xf0, 0x9e, 0x6a, 0xbc, 0x27, 0x87, 0xff, 0x87, 0x47, 0x3e, 0xc3, 0xc6,
	0x94, 0xc7, 0xc8, 0x6e, 0xb1, 0xdb, 0x94, 0x51, 0xfd, 0xda, 0xbc, 0x63, 0x8b, 0xf3, 0x50, 0xe3,
	0x1c, 0x90, 0xfd, 0x22, 0x8e, 0xb1, 0xb7, 0xda, 0xdb, 0xc4, 0xe6, 0x83, 0x56, 0x59, 0xff, 0x10,
	0x8f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x21, 0x0c, 0xdb, 0xec, 0x61, 0x05, 0x00, 0x00,
}
