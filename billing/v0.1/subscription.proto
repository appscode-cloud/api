syntax = "proto3";

package billing;

import "google/api/annotations.proto";
import "api/dtypes/types.proto";

service Subscriptions {
  rpc Create(SubscriptionCreateRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put: "/billing/v0.1/subscription"
      body: "*"
    };
  }

  rpc Alter(SubscriptionAlterRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      post: "/billing/v0.1/subscription/alter"
      body: "*"
    };
  }

  rpc Describe(SubscriptionDescribeRequest) returns (SubscriptionDescribeResponse) {
    option (google.api.http) = {
      get: "/billing/v0.1/subscription"
    };
  }

  rpc Subscribe(SubscriptionOpenRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      put: "/billing/v0.1/subscription/{product_type}/{object_phid}"
      body: "*"
    };
  }

  rpc UnSubscribe(SubscriptionCloseRequest) returns (dtypes.VoidResponse) {
    option (google.api.http) = {
      delete: "/billing/v0.1/subscription/{product_type}/{object_phid}"
    };
  }

  rpc Quota(SubscriptionQoutaRequest) returns (SubscriptionQutaResponse) {
    option (google.api.http) = {
      post: "/billing/v0.1/subscription/quota"
      body: "*"
    };
  }
}

message SubscriptionDescribeRequest {
}

message SubscriptionDescribeResponse {
  dtypes.Status status = 1;
  repeated Subscription subscriptions = 2;
}

message Subscription {
  string author = 1;
  string type = 2;
  string product_sku = 3;
  string product_type = 4;
  Quota quota = 5;
  string date_started = 6;
  string date_ended = 7;
}

message SubscriptionOpenRequest {
  string product_type = 1;
  string author_phid = 2;
  string object_phid = 3;
  string subscription_phid = 4;
  string metadata = 5;
}

message SubscriptionCloseRequest {
  string product_type = 1;
  string object_phid = 2;
}

message SubscriptionCreateRequest {
  string phid = 1;
}

message Quota {
  int64 user = 1;
  PhabricatorQuota phabricator = 2;
  ArtifactoryQuota artifact = 3;
  ClusterQuota kube = 4;
  CIQuota ci = 5;
  DBQuota db = 6;
}

message PhabricatorQuota {
  int64 disk_size = 1;
  int64 repository = 2;
}

message CIQuota {
  int64 agent = 1;
  int64 executors = 2;
  int64 jobs = 3;
}

message ArtifactoryQuota {
  int64 disk_size = 1;
  int64 repository = 2;
}

message ClusterQuota {
  int64 cluster = 1;
  int64 nodes = 2;
}

message DBQuota {
  int64 postgres = 1;
  int64 elasticsearch = 2;
  int64 influxdb = 3;
}

enum Resource {
  USER = 0;
  CLUSTER = 1;
  NODE = 2;
  DB = 3;
  CI = 4;
}

message SubscriptionQoutaRequest {
  Resource resource = 1;
  string subresource = 2;
  string object_phid = 3;
  int64 count = 5;
}

message SubscriptionAlterRequest {
}


message SubscriptionQutaResponse {
  dtypes.Status status = 1;
  string subscription_phid = 3;
}
