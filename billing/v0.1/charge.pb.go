// Code generated by protoc-gen-go.
// source: charge.proto
// DO NOT EDIT!

/*
Package billing is a generated protocol buffer package.

It is generated from these files:
	charge.proto
	invoice.proto
	paymentmethod.proto
	purchase.proto
	subscription.proto

It has these top-level messages:
	ChargeEstimateResponse
	InvoiceCreateRequest
	InvoiceCreateResponse
	PurchaseBeginRequest
	PurchaseBeginResponse
	PurchaseCompleteRequest
	PurchaseCloseRequest
	SubscriptionSubscribeRequest
*/
package billing

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChargeEstimateResponse struct {
	Status  *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	CostUsd string         `protobuf:"bytes,2,opt,name=cost_usd" json:"cost_usd,omitempty"`
}

func (m *ChargeEstimateResponse) Reset()                    { *m = ChargeEstimateResponse{} }
func (m *ChargeEstimateResponse) String() string            { return proto.CompactTextString(m) }
func (*ChargeEstimateResponse) ProtoMessage()               {}
func (*ChargeEstimateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChargeEstimateResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*ChargeEstimateResponse)(nil), "billing.ChargeEstimateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for Charge service

type ChargeClient interface {
	Estimate(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ChargeEstimateResponse, error)
}

type chargeClient struct {
	cc *grpc.ClientConn
}

func NewChargeClient(cc *grpc.ClientConn) ChargeClient {
	return &chargeClient{cc}
}

func (c *chargeClient) Estimate(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*ChargeEstimateResponse, error) {
	out := new(ChargeEstimateResponse)
	err := grpc.Invoke(ctx, "/billing.Charge/Estimate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Charge service

type ChargeServer interface {
	Estimate(context.Context, *dtypes.VoidRequest) (*ChargeEstimateResponse, error)
}

func RegisterChargeServer(s *grpc.Server, srv ChargeServer) {
	s.RegisterService(&_Charge_serviceDesc, srv)
}

func _Charge_Estimate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChargeServer).Estimate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.Charge/Estimate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChargeServer).Estimate(ctx, req.(*dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Charge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "billing.Charge",
	HandlerType: (*ChargeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Estimate",
			Handler:    _Charge_Estimate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

func init() { proto.RegisterFile("charge.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0x48, 0x2c,
	0x4a, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xca, 0xcc, 0xc9, 0xc9, 0xcc,
	0x4b, 0x97, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc,
	0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x93, 0x12, 0x03, 0x09, 0xa7,
	0x94, 0x54, 0x16, 0xa4, 0x16, 0xeb, 0x83, 0x49, 0x88, 0xb8, 0x92, 0x17, 0x97, 0x98, 0x33, 0xd8,
	0x38, 0xd7, 0xe2, 0x92, 0xcc, 0xdc, 0xc4, 0x92, 0xd4, 0xa0, 0xd4, 0xe2, 0x02, 0xa0, 0xb6, 0x54,
	0x21, 0x39, 0x2e, 0xb6, 0x62, 0xa0, 0x19, 0xa5, 0xc5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46,
	0x7c, 0x7a, 0x10, 0xed, 0x7a, 0xc1, 0x60, 0x51, 0x21, 0x01, 0x2e, 0x8e, 0xe4, 0xfc, 0xe2, 0x92,
	0xf8, 0xd2, 0xe2, 0x14, 0x09, 0x26, 0xa0, 0x0a, 0x4e, 0xa3, 0x52, 0x2e, 0x36, 0x88, 0x59, 0x42,
	0xd9, 0x5c, 0x1c, 0x30, 0xf3, 0x84, 0x84, 0x61, 0xfa, 0xc2, 0xf2, 0x33, 0x53, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0xa4, 0xe4, 0xf5, 0xa0, 0xce, 0xd6, 0xc3, 0x6e, 0xbb, 0x92, 0x66, 0xd3,
	0xe5, 0x27, 0x93, 0x99, 0x94, 0x85, 0x14, 0x81, 0xfe, 0x29, 0x28, 0x4e, 0xce, 0x4f, 0x81, 0x78,
	0x0c, 0xaa, 0x4b, 0xbf, 0xcc, 0x40, 0xcf, 0x50, 0x1f, 0x12, 0x0e, 0x49, 0x6c, 0x60, 0x9f, 0x18,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0x24, 0x9f, 0xf8, 0x18, 0x01, 0x00, 0x00,
}
