syntax = "proto3";

package billing;

import "google/api/annotations.proto";
import "api/comune/status.proto";

service Billing {
  rpc BillingSubscriptionGet(BillingSubscriptionGetRequest) returns (BillingSubscriptionGetResponse) {
    option (google.api.http) = {
      get : "/api/billing/v0/subscription/{current_time}"
    };
  }

  rpc BillingPurchaseOpen(BillingPurchaseOpenRequest) returns (BillingVoidResponse) {
    option (google.api.http) = {
      put : "/api/billing/v0/purchase/{product_type}/{object_phid}"
      body : "*"
    };
  }

  rpc BillingPurchaseClose(BillingPurchaseCloseRequest) returns (BillingVoidResponse) {
    option (google.api.http) = {
      delete : "/api/billing/v0/purchase/{product_type}/{object_phid}"
    };
  }

  rpc BillingCharge(BillingChargeRequest) returns (BillingChargeResponse) {
    option (google.api.http) = {
      get : "/api/billing/v0/charge/{charge_type}"
    };
  }
}

message BillingSubscriptionGetRequest {
  string current_time = 1;
}

message BillingSubscriptionGetResponse {
 comune.Status status = 1;
  repeated BillingSubscription subscription = 2;
}

message BillingSubscription {
  string author = 1;
  string product_sku = 2;
  string metadata = 3;
  string date_started = 4;
  string date_ended = 5;
}

message BillingPurchaseOpenRequest {
  string product_type = 1;
  string author_phid = 2;
  string object_phid = 3;
  string subscription_phid = 4;
  string metadata = 5;
}

message BillingPurchaseCloseRequest {
  string product_type = 1;
  string object_phid = 2;
}

message BillingChargeRequest {
  string charge_type = 1;
}

message BillingChargeResponse {
 comune.Status status = 1;
  double cost = 2;
}

message BillingVoidResponse {
 comune.Status status = 1;
}
