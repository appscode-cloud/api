// Code generated by protoc-gen-go.
// source: cloud.proto
// DO NOT EDIT!

/*
Package credential is a generated protocol buffer package.

It is generated from these files:
	cloud.proto

It has these top-level messages:
	CloudCredentialCreateRequest
	CloudCredentialUpdateRequest
	CloudCredentialDeleteRequest
	CloudCredentialListResponse
	CloudCredential
*/
package credential

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CloudCredentialCreateRequest struct {
	Name     string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider string            `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Data     map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CloudCredentialCreateRequest) Reset()                    { *m = CloudCredentialCreateRequest{} }
func (m *CloudCredentialCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CloudCredentialCreateRequest) ProtoMessage()               {}
func (*CloudCredentialCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CloudCredentialCreateRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type CloudCredentialUpdateRequest struct {
	Name     string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider string            `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Data     map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CloudCredentialUpdateRequest) Reset()                    { *m = CloudCredentialUpdateRequest{} }
func (m *CloudCredentialUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*CloudCredentialUpdateRequest) ProtoMessage()               {}
func (*CloudCredentialUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CloudCredentialUpdateRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type CloudCredentialDeleteRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CloudCredentialDeleteRequest) Reset()                    { *m = CloudCredentialDeleteRequest{} }
func (m *CloudCredentialDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*CloudCredentialDeleteRequest) ProtoMessage()               {}
func (*CloudCredentialDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CloudCredentialListResponse struct {
	Status      *dtypes.Status     `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Credentials []*CloudCredential `protobuf:"bytes,2,rep,name=credentials" json:"credentials,omitempty"`
}

func (m *CloudCredentialListResponse) Reset()                    { *m = CloudCredentialListResponse{} }
func (m *CloudCredentialListResponse) String() string            { return proto.CompactTextString(m) }
func (*CloudCredentialListResponse) ProtoMessage()               {}
func (*CloudCredentialListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CloudCredentialListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CloudCredentialListResponse) GetCredentials() []*CloudCredential {
	if m != nil {
		return m.Credentials
	}
	return nil
}

type CloudCredential struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Provider    string `protobuf:"bytes,2,opt,name=provider" json:"provider,omitempty"`
	Information string `protobuf:"bytes,3,opt,name=information" json:"information,omitempty"`
}

func (m *CloudCredential) Reset()                    { *m = CloudCredential{} }
func (m *CloudCredential) String() string            { return proto.CompactTextString(m) }
func (*CloudCredential) ProtoMessage()               {}
func (*CloudCredential) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*CloudCredentialCreateRequest)(nil), "credential.CloudCredentialCreateRequest")
	proto.RegisterType((*CloudCredentialUpdateRequest)(nil), "credential.CloudCredentialUpdateRequest")
	proto.RegisterType((*CloudCredentialDeleteRequest)(nil), "credential.CloudCredentialDeleteRequest")
	proto.RegisterType((*CloudCredentialListResponse)(nil), "credential.CloudCredentialListResponse")
	proto.RegisterType((*CloudCredential)(nil), "credential.CloudCredential")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for Cloud service

type CloudClient interface {
	List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*CloudCredentialListResponse, error)
	Create(ctx context.Context, in *CloudCredentialCreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Update(ctx context.Context, in *CloudCredentialUpdateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Delete(ctx context.Context, in *CloudCredentialDeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
}

type cloudClient struct {
	cc *grpc.ClientConn
}

func NewCloudClient(cc *grpc.ClientConn) CloudClient {
	return &cloudClient{cc}
}

func (c *cloudClient) List(ctx context.Context, in *dtypes.VoidRequest, opts ...grpc.CallOption) (*CloudCredentialListResponse, error) {
	out := new(CloudCredentialListResponse)
	err := grpc.Invoke(ctx, "/credential.Cloud/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudClient) Create(ctx context.Context, in *CloudCredentialCreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/credential.Cloud/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudClient) Update(ctx context.Context, in *CloudCredentialUpdateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/credential.Cloud/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudClient) Delete(ctx context.Context, in *CloudCredentialDeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/credential.Cloud/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cloud service

type CloudServer interface {
	List(context.Context, *dtypes.VoidRequest) (*CloudCredentialListResponse, error)
	Create(context.Context, *CloudCredentialCreateRequest) (*dtypes.VoidResponse, error)
	Update(context.Context, *CloudCredentialUpdateRequest) (*dtypes.VoidResponse, error)
	Delete(context.Context, *CloudCredentialDeleteRequest) (*dtypes.VoidResponse, error)
}

func RegisterCloudServer(s *grpc.Server, srv CloudServer) {
	s.RegisterService(&_Cloud_serviceDesc, srv)
}

func _Cloud_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/credential.Cloud/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudServer).List(ctx, req.(*dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cloud_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudCredentialCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/credential.Cloud/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudServer).Create(ctx, req.(*CloudCredentialCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cloud_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudCredentialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/credential.Cloud/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudServer).Update(ctx, req.(*CloudCredentialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cloud_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloudCredentialDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/credential.Cloud/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudServer).Delete(ctx, req.(*CloudCredentialDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cloud_serviceDesc = grpc.ServiceDesc{
	ServiceName: "credential.Cloud",
	HandlerType: (*CloudServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Cloud_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Cloud_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Cloud_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Cloud_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x94, 0x4f, 0x6e, 0xda, 0x40,
	0x14, 0xc6, 0x65, 0x0c, 0x56, 0x79, 0xee, 0x3f, 0x0d, 0x55, 0x4b, 0x0d, 0xa2, 0xc8, 0x8b, 0x16,
	0xd1, 0xca, 0xa6, 0xee, 0xa6, 0x62, 0x55, 0x09, 0xda, 0x55, 0x57, 0x54, 0xed, 0x7e, 0x8a, 0x5f,
	0x91, 0x55, 0xe3, 0x71, 0x3c, 0x63, 0x24, 0x14, 0x65, 0x93, 0x2b, 0xe4, 0x1c, 0xb9, 0x41, 0x6e,
	0x91, 0x2b, 0xe4, 0x20, 0x19, 0x8f, 0x09, 0xc1, 0x24, 0x76, 0xa2, 0x48, 0xd9, 0x58, 0xf6, 0xa7,
	0x79, 0xef, 0xf7, 0xbd, 0x79, 0x9f, 0x0c, 0xe6, 0x3c, 0x64, 0xa9, 0xef, 0xc4, 0x09, 0x13, 0x8c,
	0xc0, 0x3c, 0x41, 0x1f, 0x23, 0x11, 0xd0, 0xd0, 0xea, 0x2e, 0x18, 0x5b, 0x84, 0xe8, 0xd2, 0x38,
	0x70, 0x69, 0x14, 0x31, 0x41, 0x45, 0xc0, 0x22, 0x9e, 0x9f, 0xb4, 0x5e, 0x67, 0xb2, 0x2f, 0xd6,
	0x31, 0x72, 0x57, 0x3d, 0x73, 0xdd, 0x3e, 0xd5, 0xa0, 0x3b, 0xc9, 0x3a, 0x4e, 0xb6, 0x9d, 0xe4,
	0x1b, 0x15, 0x38, 0xc3, 0x83, 0x14, 0xb9, 0x20, 0x4f, 0xa1, 0x1e, 0xd1, 0x25, 0xb6, 0xb5, 0xbe,
	0x36, 0x68, 0x92, 0x97, 0xf0, 0x44, 0xd6, 0xad, 0x02, 0x1f, 0x93, 0x76, 0x4d, 0x29, 0xdf, 0xa0,
	0xee, 0x53, 0x41, 0xdb, 0x7a, 0x5f, 0x1f, 0x98, 0x9e, 0xe7, 0x5c, 0x3b, 0x72, 0xaa, 0xfa, 0x3a,
	0x53, 0x59, 0xf4, 0x3d, 0x12, 0xc9, 0xda, 0xfa, 0x08, 0xcd, 0xed, 0x07, 0x31, 0x41, 0xff, 0x8f,
	0xeb, 0x0d, 0xed, 0x19, 0x34, 0x56, 0x34, 0x4c, 0x31, 0x47, 0x8d, 0x6b, 0x5f, 0xb5, 0xdb, 0xfc,
	0xfe, 0x8e, 0xfd, 0x47, 0xf1, 0x5b, 0xe8, 0xfb, 0x50, 0xbf, 0x9f, 0x6e, 0xd8, 0x9d, 0x62, 0x88,
	0x25, 0x76, 0x6d, 0x06, 0x9d, 0xbd, 0xd3, 0x3f, 0x03, 0x2e, 0x66, 0xc8, 0x63, 0xb9, 0x49, 0x24,
	0x3d, 0x30, 0xb8, 0x5c, 0x6b, 0xca, 0xd5, 0x71, 0xd3, 0x7b, 0xee, 0xe4, 0x1b, 0x75, 0x7e, 0x29,
	0x95, 0x8c, 0x64, 0x3a, 0xb6, 0x95, 0x5c, 0xba, 0xc8, 0x46, 0xec, 0x54, 0x8c, 0x68, 0xff, 0x80,
	0x17, 0x7b, 0xd2, 0x9d, 0x17, 0xd8, 0x02, 0x33, 0x88, 0xfe, 0xb1, 0x64, 0xa9, 0xf2, 0x25, 0xef,
	0x51, 0x8a, 0xde, 0x99, 0x0e, 0x0d, 0xd5, 0x88, 0x20, 0xd4, 0x33, 0xcf, 0xa4, 0x75, 0xe5, 0xed,
	0x0f, 0x0b, 0xfc, 0xcd, 0xb4, 0xd6, 0x87, 0x0a, 0x2f, 0xbb, 0x93, 0xda, 0xef, 0x8e, 0xcf, 0x2f,
	0x4e, 0x6a, 0x6f, 0xc9, 0x1b, 0x77, 0x67, 0x20, 0x77, 0x35, 0x72, 0x3e, 0xbb, 0x2a, 0xff, 0x24,
	0x04, 0x23, 0xcf, 0x13, 0x19, 0xdc, 0x37, 0x72, 0xd6, 0xab, 0xa2, 0xa5, 0x0d, 0xca, 0x56, 0xa8,
	0xae, 0x55, 0x86, 0x1a, 0x6b, 0xc3, 0x8c, 0x96, 0xa7, 0xa1, 0x92, 0x56, 0x08, 0x4c, 0x35, 0xcd,
	0xae, 0xa2, 0xc5, 0x60, 0xe4, 0x21, 0xa9, 0xa4, 0x15, 0x72, 0x54, 0x42, 0x7b, 0xaf, 0x68, 0xfd,
	0x61, 0xaf, 0x84, 0xe6, 0x1e, 0x66, 0xab, 0x3e, 0xfa, 0x6b, 0xa8, 0x9f, 0xc1, 0x97, 0xcb, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x6f, 0xf7, 0x56, 0x24, 0x5d, 0x04, 0x00, 0x00,
}
