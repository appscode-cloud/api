syntax = "proto3";

package glusterfs;

import "google/api/annotations.proto";
import "api/comune/status.proto";

service Glusterfs {
  // Glusterfs cluster list. Needs to work with two modes.
  // First is to list all the glusterfs cluster through the
  // space with out considering the kubernetes cluster. if the
  // cluster_name is provided then list all the glusterfs cluster
  // with respect to the provided kube cluster space.
  rpc GlusterfsClusterList(GlusterfsClusterListRequest) returns (GlusterfsClusterListResponse) {
    option (google.api.http) = {
      get: "/api/glusterfs/v0/{cluster_name}"
    };
  }

  rpc GlusterfsClusterDetails(GlusterfsClusterDetailsRequest) returns (GlusterfsClusterDetailsResponse) {
    option (google.api.http) = {
      get: "/api/glusterfs/v0/{cluster_name}/{name}"
    };
  }

  rpc GlusterfsClusterCreate(GlusterfsClusterCreateRequest) returns (GlusterfsCommonResponse) {
  	option (google.api.http) = {
  		put : "/api/glusterfs/v0/{cluster_name}"
        body: "*"
    };
  }

  rpc GlusterfsClusterDelete(GlusterfsClusterDeleteRequest) returns (GlusterfsCommonResponse) {
    option (google.api.http) = {
      delete : "/api/glusterfs/v0/{cluster_name}/{name}"
    };
  }

  // Gluster Volume apis.
  rpc GlusterfsVolumeList(GlusterfsVolumeListRequest) returns (GlusterfsVolumeListResponse) {
    option (google.api.http) = {
      get: "/api/glusterfs/v0/{cluster_name}/volumes/{name}"
    };
  }

  rpc GlusterfsVolumeCreate(GlusterfsVolumeCreateRequest) returns (GlusterfsCommonResponse) {
  	option (google.api.http) = {
  		put : "/api/glusterfs/v0/{cluster_name}/volumes"
        body: "*"
  	};
  }

  rpc GlusterfsVolumeDelete(GlusterfsVolumeDeleteRequest) returns (GlusterfsCommonResponse) {
  	option (google.api.http) = {
  		delete : "/api/glusterfs/v0/{cluster_name}/volumes/{name}"
  	};
  }
}

message GlusterfsCLuster {
  string phid =1;
  string name =2;
  string cluster_name =3;
  string mood = 4;
  string kube_namespace = 5;
  int64 replica = 6;
  string created = 7;
}

message GlusterfsClusterListRequest {
  string cluster_name = 1;
}

message GlusterfsClusterListResponse {
 comune.Status status = 1;
  repeated GlusterfsCLuster glusterfs = 2;
}

message GlusterfsClusterDetailsRequest {
  string cluster_name = 1;
  string name = 2;
}

message GlusterfsClusterDetailsResponse {
 comune.Status status = 1;
}

message GlusterfsCommonResponse {
 comune.Status status = 1;
}

message GlusterfsClusterCreateRequest {
  string name = 1;
  int64 node = 2;
  string mood = 3;
  repeated string disks = 4;
  string cluster_name = 5;
}

message GlusterfsClusterDeleteRequest {
  string cluster_name = 1;
  string name = 2;
}

message GlusterfsVolumeCreateRequest {
  string cluster_name = 1;
  string glusterfs_name = 2;
  string volume_name = 3;
}

message GlusterfsVolumeDeleteRequest {
  string cluster_name = 1;
  string name = 2;
}

message GlusterfsVolumeListRequest {
  string cluster_name = 1;
  string name = 2;
}

message GlusterfsVolumeListResponse {
 comune.Status status = 1;
  repeated GlusterfsVolume volume = 2;
}

message GlusterfsVolume {
  string path = 1;
  string bricks = 2;
  string endpoint = 3;
  int64 replica = 4;
}