// Code generated by protoc-gen-go.
// source: glusterfs.proto
// DO NOT EDIT!

/*
Package glusterfs is a generated protocol buffer package.

It is generated from these files:
	glusterfs.proto

It has these top-level messages:
	GlusterfsCLuster
	GlusterfsClusterListRequest
	GlusterfsClusterListResponse
	GlusterfsClusterDetailsRequest
	GlusterfsClusterDetailsResponse
	GlusterfsCommonResponse
	GlusterfsClusterCreateRequest
	GlusterfsClusterDeleteRequest
	GlusterfsVolumeCreateRequest
	GlusterfsVolumeDeleteRequest
	GlusterfsVolumeListRequest
	GlusterfsVolumeListResponse
	GlusterfsVolume
*/
package glusterfs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type GlusterfsCLuster struct {
	Phid          string `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ClusterName   string `protobuf:"bytes,3,opt,name=cluster_name" json:"cluster_name,omitempty"`
	Mood          string `protobuf:"bytes,4,opt,name=mood" json:"mood,omitempty"`
	KubeNamespace string `protobuf:"bytes,5,opt,name=kube_namespace" json:"kube_namespace,omitempty"`
	Replica       int64  `protobuf:"varint,6,opt,name=replica" json:"replica,omitempty"`
	Created       string `protobuf:"bytes,7,opt,name=created" json:"created,omitempty"`
}

func (m *GlusterfsCLuster) Reset()                    { *m = GlusterfsCLuster{} }
func (m *GlusterfsCLuster) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsCLuster) ProtoMessage()               {}
func (*GlusterfsCLuster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GlusterfsClusterListRequest struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name" json:"cluster_name,omitempty"`
}

func (m *GlusterfsClusterListRequest) Reset()                    { *m = GlusterfsClusterListRequest{} }
func (m *GlusterfsClusterListRequest) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsClusterListRequest) ProtoMessage()               {}
func (*GlusterfsClusterListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GlusterfsClusterListResponse struct {
	Status    *dtypes.Status      `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Glusterfs []*GlusterfsCLuster `protobuf:"bytes,2,rep,name=glusterfs" json:"glusterfs,omitempty"`
}

func (m *GlusterfsClusterListResponse) Reset()                    { *m = GlusterfsClusterListResponse{} }
func (m *GlusterfsClusterListResponse) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsClusterListResponse) ProtoMessage()               {}
func (*GlusterfsClusterListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GlusterfsClusterListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GlusterfsClusterListResponse) GetGlusterfs() []*GlusterfsCLuster {
	if m != nil {
		return m.Glusterfs
	}
	return nil
}

type GlusterfsClusterDetailsRequest struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name" json:"cluster_name,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GlusterfsClusterDetailsRequest) Reset()                    { *m = GlusterfsClusterDetailsRequest{} }
func (m *GlusterfsClusterDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsClusterDetailsRequest) ProtoMessage()               {}
func (*GlusterfsClusterDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GlusterfsClusterDetailsResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *GlusterfsClusterDetailsResponse) Reset()                    { *m = GlusterfsClusterDetailsResponse{} }
func (m *GlusterfsClusterDetailsResponse) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsClusterDetailsResponse) ProtoMessage()               {}
func (*GlusterfsClusterDetailsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GlusterfsClusterDetailsResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GlusterfsCommonResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *GlusterfsCommonResponse) Reset()                    { *m = GlusterfsCommonResponse{} }
func (m *GlusterfsCommonResponse) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsCommonResponse) ProtoMessage()               {}
func (*GlusterfsCommonResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GlusterfsCommonResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GlusterfsClusterCreateRequest struct {
	Name        string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Node        int64    `protobuf:"varint,2,opt,name=node" json:"node,omitempty"`
	Mood        string   `protobuf:"bytes,3,opt,name=mood" json:"mood,omitempty"`
	Disks       []string `protobuf:"bytes,4,rep,name=disks" json:"disks,omitempty"`
	ClusterName string   `protobuf:"bytes,5,opt,name=cluster_name" json:"cluster_name,omitempty"`
}

func (m *GlusterfsClusterCreateRequest) Reset()                    { *m = GlusterfsClusterCreateRequest{} }
func (m *GlusterfsClusterCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsClusterCreateRequest) ProtoMessage()               {}
func (*GlusterfsClusterCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GlusterfsClusterDeleteRequest struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name" json:"cluster_name,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GlusterfsClusterDeleteRequest) Reset()                    { *m = GlusterfsClusterDeleteRequest{} }
func (m *GlusterfsClusterDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsClusterDeleteRequest) ProtoMessage()               {}
func (*GlusterfsClusterDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type GlusterfsVolumeCreateRequest struct {
	ClusterName   string `protobuf:"bytes,1,opt,name=cluster_name" json:"cluster_name,omitempty"`
	GlusterfsName string `protobuf:"bytes,2,opt,name=glusterfs_name" json:"glusterfs_name,omitempty"`
	VolumeName    string `protobuf:"bytes,3,opt,name=volume_name" json:"volume_name,omitempty"`
}

func (m *GlusterfsVolumeCreateRequest) Reset()                    { *m = GlusterfsVolumeCreateRequest{} }
func (m *GlusterfsVolumeCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsVolumeCreateRequest) ProtoMessage()               {}
func (*GlusterfsVolumeCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GlusterfsVolumeDeleteRequest struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name" json:"cluster_name,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GlusterfsVolumeDeleteRequest) Reset()                    { *m = GlusterfsVolumeDeleteRequest{} }
func (m *GlusterfsVolumeDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsVolumeDeleteRequest) ProtoMessage()               {}
func (*GlusterfsVolumeDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GlusterfsVolumeListRequest struct {
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name" json:"cluster_name,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GlusterfsVolumeListRequest) Reset()                    { *m = GlusterfsVolumeListRequest{} }
func (m *GlusterfsVolumeListRequest) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsVolumeListRequest) ProtoMessage()               {}
func (*GlusterfsVolumeListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type GlusterfsVolumeListResponse struct {
	Status *dtypes.Status     `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Volume []*GlusterfsVolume `protobuf:"bytes,2,rep,name=volume" json:"volume,omitempty"`
}

func (m *GlusterfsVolumeListResponse) Reset()                    { *m = GlusterfsVolumeListResponse{} }
func (m *GlusterfsVolumeListResponse) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsVolumeListResponse) ProtoMessage()               {}
func (*GlusterfsVolumeListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GlusterfsVolumeListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GlusterfsVolumeListResponse) GetVolume() []*GlusterfsVolume {
	if m != nil {
		return m.Volume
	}
	return nil
}

type GlusterfsVolume struct {
	Path     string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Bricks   string `protobuf:"bytes,2,opt,name=bricks" json:"bricks,omitempty"`
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	Replica  int64  `protobuf:"varint,4,opt,name=replica" json:"replica,omitempty"`
}

func (m *GlusterfsVolume) Reset()                    { *m = GlusterfsVolume{} }
func (m *GlusterfsVolume) String() string            { return proto.CompactTextString(m) }
func (*GlusterfsVolume) ProtoMessage()               {}
func (*GlusterfsVolume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func init() {
	proto.RegisterType((*GlusterfsCLuster)(nil), "glusterfs.GlusterfsCLuster")
	proto.RegisterType((*GlusterfsClusterListRequest)(nil), "glusterfs.GlusterfsClusterListRequest")
	proto.RegisterType((*GlusterfsClusterListResponse)(nil), "glusterfs.GlusterfsClusterListResponse")
	proto.RegisterType((*GlusterfsClusterDetailsRequest)(nil), "glusterfs.GlusterfsClusterDetailsRequest")
	proto.RegisterType((*GlusterfsClusterDetailsResponse)(nil), "glusterfs.GlusterfsClusterDetailsResponse")
	proto.RegisterType((*GlusterfsCommonResponse)(nil), "glusterfs.GlusterfsCommonResponse")
	proto.RegisterType((*GlusterfsClusterCreateRequest)(nil), "glusterfs.GlusterfsClusterCreateRequest")
	proto.RegisterType((*GlusterfsClusterDeleteRequest)(nil), "glusterfs.GlusterfsClusterDeleteRequest")
	proto.RegisterType((*GlusterfsVolumeCreateRequest)(nil), "glusterfs.GlusterfsVolumeCreateRequest")
	proto.RegisterType((*GlusterfsVolumeDeleteRequest)(nil), "glusterfs.GlusterfsVolumeDeleteRequest")
	proto.RegisterType((*GlusterfsVolumeListRequest)(nil), "glusterfs.GlusterfsVolumeListRequest")
	proto.RegisterType((*GlusterfsVolumeListResponse)(nil), "glusterfs.GlusterfsVolumeListResponse")
	proto.RegisterType((*GlusterfsVolume)(nil), "glusterfs.GlusterfsVolume")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Glusterfs service

type GlusterfsClient interface {
	// Glusterfs cluster list. Needs to work with two modes.
	// First is to list all the glusterfs cluster through the
	// space with out considering the kubernetes cluster. if the
	// cluster_name is provided then list all the glusterfs cluster
	// with respect to the provided kube cluster space.
	GlusterfsClusterList(ctx context.Context, in *GlusterfsClusterListRequest, opts ...grpc.CallOption) (*GlusterfsClusterListResponse, error)
	GlusterfsClusterDetails(ctx context.Context, in *GlusterfsClusterDetailsRequest, opts ...grpc.CallOption) (*GlusterfsClusterDetailsResponse, error)
	GlusterfsClusterCreate(ctx context.Context, in *GlusterfsClusterCreateRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error)
	GlusterfsClusterDelete(ctx context.Context, in *GlusterfsClusterDeleteRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error)
	// Gluster Volume apis.
	GlusterfsVolumeList(ctx context.Context, in *GlusterfsVolumeListRequest, opts ...grpc.CallOption) (*GlusterfsVolumeListResponse, error)
	GlusterfsVolumeCreate(ctx context.Context, in *GlusterfsVolumeCreateRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error)
	GlusterfsVolumeDelete(ctx context.Context, in *GlusterfsVolumeDeleteRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error)
}

type glusterfsClient struct {
	cc *grpc.ClientConn
}

func NewGlusterfsClient(cc *grpc.ClientConn) GlusterfsClient {
	return &glusterfsClient{cc}
}

func (c *glusterfsClient) GlusterfsClusterList(ctx context.Context, in *GlusterfsClusterListRequest, opts ...grpc.CallOption) (*GlusterfsClusterListResponse, error) {
	out := new(GlusterfsClusterListResponse)
	err := grpc.Invoke(ctx, "/glusterfs.Glusterfs/GlusterfsClusterList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glusterfsClient) GlusterfsClusterDetails(ctx context.Context, in *GlusterfsClusterDetailsRequest, opts ...grpc.CallOption) (*GlusterfsClusterDetailsResponse, error) {
	out := new(GlusterfsClusterDetailsResponse)
	err := grpc.Invoke(ctx, "/glusterfs.Glusterfs/GlusterfsClusterDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glusterfsClient) GlusterfsClusterCreate(ctx context.Context, in *GlusterfsClusterCreateRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error) {
	out := new(GlusterfsCommonResponse)
	err := grpc.Invoke(ctx, "/glusterfs.Glusterfs/GlusterfsClusterCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glusterfsClient) GlusterfsClusterDelete(ctx context.Context, in *GlusterfsClusterDeleteRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error) {
	out := new(GlusterfsCommonResponse)
	err := grpc.Invoke(ctx, "/glusterfs.Glusterfs/GlusterfsClusterDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glusterfsClient) GlusterfsVolumeList(ctx context.Context, in *GlusterfsVolumeListRequest, opts ...grpc.CallOption) (*GlusterfsVolumeListResponse, error) {
	out := new(GlusterfsVolumeListResponse)
	err := grpc.Invoke(ctx, "/glusterfs.Glusterfs/GlusterfsVolumeList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glusterfsClient) GlusterfsVolumeCreate(ctx context.Context, in *GlusterfsVolumeCreateRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error) {
	out := new(GlusterfsCommonResponse)
	err := grpc.Invoke(ctx, "/glusterfs.Glusterfs/GlusterfsVolumeCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *glusterfsClient) GlusterfsVolumeDelete(ctx context.Context, in *GlusterfsVolumeDeleteRequest, opts ...grpc.CallOption) (*GlusterfsCommonResponse, error) {
	out := new(GlusterfsCommonResponse)
	err := grpc.Invoke(ctx, "/glusterfs.Glusterfs/GlusterfsVolumeDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Glusterfs service

type GlusterfsServer interface {
	// Glusterfs cluster list. Needs to work with two modes.
	// First is to list all the glusterfs cluster through the
	// space with out considering the kubernetes cluster. if the
	// cluster_name is provided then list all the glusterfs cluster
	// with respect to the provided kube cluster space.
	GlusterfsClusterList(context.Context, *GlusterfsClusterListRequest) (*GlusterfsClusterListResponse, error)
	GlusterfsClusterDetails(context.Context, *GlusterfsClusterDetailsRequest) (*GlusterfsClusterDetailsResponse, error)
	GlusterfsClusterCreate(context.Context, *GlusterfsClusterCreateRequest) (*GlusterfsCommonResponse, error)
	GlusterfsClusterDelete(context.Context, *GlusterfsClusterDeleteRequest) (*GlusterfsCommonResponse, error)
	// Gluster Volume apis.
	GlusterfsVolumeList(context.Context, *GlusterfsVolumeListRequest) (*GlusterfsVolumeListResponse, error)
	GlusterfsVolumeCreate(context.Context, *GlusterfsVolumeCreateRequest) (*GlusterfsCommonResponse, error)
	GlusterfsVolumeDelete(context.Context, *GlusterfsVolumeDeleteRequest) (*GlusterfsCommonResponse, error)
}

func RegisterGlusterfsServer(s *grpc.Server, srv GlusterfsServer) {
	s.RegisterService(&_Glusterfs_serviceDesc, srv)
}

func _Glusterfs_GlusterfsClusterList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GlusterfsClusterListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GlusterfsServer).GlusterfsClusterList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Glusterfs_GlusterfsClusterDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GlusterfsClusterDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GlusterfsServer).GlusterfsClusterDetails(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Glusterfs_GlusterfsClusterCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GlusterfsClusterCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GlusterfsServer).GlusterfsClusterCreate(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Glusterfs_GlusterfsClusterDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GlusterfsClusterDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GlusterfsServer).GlusterfsClusterDelete(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Glusterfs_GlusterfsVolumeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GlusterfsVolumeListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GlusterfsServer).GlusterfsVolumeList(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Glusterfs_GlusterfsVolumeCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GlusterfsVolumeCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GlusterfsServer).GlusterfsVolumeCreate(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Glusterfs_GlusterfsVolumeDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GlusterfsVolumeDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GlusterfsServer).GlusterfsVolumeDelete(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Glusterfs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "glusterfs.Glusterfs",
	HandlerType: (*GlusterfsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GlusterfsClusterList",
			Handler:    _Glusterfs_GlusterfsClusterList_Handler,
		},
		{
			MethodName: "GlusterfsClusterDetails",
			Handler:    _Glusterfs_GlusterfsClusterDetails_Handler,
		},
		{
			MethodName: "GlusterfsClusterCreate",
			Handler:    _Glusterfs_GlusterfsClusterCreate_Handler,
		},
		{
			MethodName: "GlusterfsClusterDelete",
			Handler:    _Glusterfs_GlusterfsClusterDelete_Handler,
		},
		{
			MethodName: "GlusterfsVolumeList",
			Handler:    _Glusterfs_GlusterfsVolumeList_Handler,
		},
		{
			MethodName: "GlusterfsVolumeCreate",
			Handler:    _Glusterfs_GlusterfsVolumeCreate_Handler,
		},
		{
			MethodName: "GlusterfsVolumeDelete",
			Handler:    _Glusterfs_GlusterfsVolumeDelete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 661 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x96, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0xba, 0x4d, 0x9b, 0x69, 0x49, 0xaa, 0x6d, 0x09, 0x96, 0x5b, 0x4a, 0xb5, 0x52,
	0x9b, 0x34, 0x88, 0x18, 0x9a, 0x03, 0x82, 0x13, 0x90, 0x48, 0x5c, 0x7a, 0x2a, 0x12, 0xd7, 0xca,
	0x89, 0x97, 0xd4, 0x8a, 0xe3, 0x35, 0x59, 0xa7, 0x12, 0xaa, 0xb8, 0x70, 0xe6, 0x82, 0x7a, 0x40,
	0x1c, 0x7a, 0xe0, 0x89, 0x38, 0xf0, 0x0a, 0x3c, 0x08, 0xf6, 0xae, 0x13, 0xff, 0xc9, 0x26, 0x76,
	0x2e, 0x91, 0x3d, 0x1a, 0xcf, 0xfc, 0xf6, 0x9b, 0xf9, 0x56, 0x81, 0xea, 0xc0, 0x99, 0x30, 0x9f,
	0x8c, 0x3f, 0xb1, 0x96, 0x37, 0xa6, 0x3e, 0x45, 0xe5, 0x59, 0x40, 0x3f, 0x1c, 0x50, 0x3a, 0x70,
	0x88, 0x61, 0x7a, 0xb6, 0x61, 0xba, 0x2e, 0xf5, 0x4d, 0xdf, 0xa6, 0x6e, 0x94, 0xa8, 0xd7, 0xc2,
	0xb0, 0xe5, 0x7f, 0xf1, 0x08, 0x33, 0xf8, 0xaf, 0x88, 0xe3, 0xef, 0x0a, 0xec, 0xbe, 0x9f, 0xd6,
	0xe8, 0x5c, 0xf0, 0x07, 0xb4, 0x03, 0xeb, 0xde, 0xb5, 0x6d, 0x69, 0xca, 0xb1, 0xd2, 0x28, 0x87,
	0x6f, 0xae, 0x39, 0x22, 0xda, 0x1a, 0x7f, 0xdb, 0x87, 0x9d, 0xbe, 0xc8, 0xbf, 0xe2, 0x51, 0x75,
	0x9a, 0x33, 0xa2, 0xd4, 0xd2, 0xd6, 0xf9, 0x5b, 0x0d, 0x2a, 0xc3, 0x49, 0x8f, 0xf0, 0x04, 0xe6,
	0x99, 0x7d, 0xa2, 0x6d, 0xf0, 0x78, 0x15, 0x36, 0xc7, 0xc4, 0x73, 0xec, 0xbe, 0xa9, 0x95, 0x82,
	0x80, 0x1a, 0x06, 0xfa, 0x63, 0x62, 0xfa, 0xc4, 0xd2, 0x36, 0xc3, 0x0c, 0xdc, 0x86, 0x83, 0x98,
	0x46, 0x3c, 0x5c, 0xd8, 0xcc, 0xbf, 0x24, 0x9f, 0x27, 0x84, 0xf9, 0x73, 0xcd, 0x39, 0x20, 0x76,
	0xe1, 0x50, 0xfe, 0x11, 0xf3, 0x02, 0x01, 0x08, 0x3a, 0x82, 0x12, 0x0b, 0xd4, 0x98, 0x30, 0x9e,
	0xbf, 0x7d, 0x5e, 0x69, 0x09, 0x21, 0x5a, 0x1f, 0x78, 0x14, 0xb5, 0x20, 0x96, 0x31, 0x38, 0xa5,
	0x1a, 0xa4, 0x1c, 0xb4, 0x62, 0xa5, 0xb3, 0xf2, 0xe0, 0x2e, 0x1c, 0x65, 0xfb, 0x75, 0x89, 0x6f,
	0xda, 0x0e, 0x5b, 0xca, 0x99, 0x16, 0x12, 0xbf, 0x85, 0x27, 0x0b, 0xab, 0x14, 0x03, 0xc7, 0xaf,
	0xe0, 0x51, 0x5c, 0x82, 0x8e, 0x46, 0xd4, 0x2d, 0xfc, 0xa9, 0x0b, 0x8f, 0xb3, 0xdd, 0x3b, 0x7c,
	0x12, 0xd3, 0x23, 0x4c, 0x61, 0x63, 0x74, 0x6a, 0x09, 0x74, 0x75, 0x36, 0x6d, 0x31, 0xfb, 0x07,
	0xb0, 0x61, 0xd9, 0x6c, 0xc8, 0x82, 0xe1, 0xab, 0x92, 0x05, 0xe1, 0xa3, 0xc7, 0x9d, 0xf9, 0x7e,
	0x5d, 0xe2, 0x90, 0xb8, 0x5f, 0x11, 0xc9, 0xcc, 0xc4, 0xa0, 0x3f, 0x52, 0x67, 0x32, 0x22, 0x69,
	0x66, 0x79, 0x8d, 0x60, 0x1b, 0x67, 0xc3, 0xbc, 0x4a, 0x6c, 0xf2, 0x1e, 0x6c, 0xdf, 0xf0, 0x22,
	0x89, 0x45, 0xc6, 0xef, 0xe6, 0x5a, 0xac, 0x8e, 0xf9, 0x06, 0xf4, 0x4c, 0x8d, 0xdc, 0x1d, 0xce,
	0x54, 0xb0, 0x13, 0x36, 0x48, 0x56, 0x28, 0xb8, 0xd0, 0x4d, 0x28, 0x89, 0x93, 0x45, 0xdb, 0xac,
	0xcb, 0xb6, 0x59, 0xd4, 0xc5, 0x97, 0x50, 0xcd, 0x84, 0xb8, 0xfd, 0x4d, 0xff, 0x3a, 0x22, 0xab,
	0x40, 0xa9, 0x37, 0xb6, 0xfb, 0x43, 0x16, 0xc9, 0xb6, 0x0b, 0x5b, 0xc4, 0xb5, 0x3c, 0x6a, 0xbb,
	0x7e, 0xb4, 0x00, 0x09, 0x5b, 0x87, 0xfe, 0x57, 0xcf, 0xff, 0x6c, 0x41, 0x79, 0x56, 0x14, 0xfd,
	0x50, 0x60, 0x5f, 0xe6, 0x4f, 0x74, 0x2a, 0x35, 0xd9, 0x9c, 0xeb, 0xf5, 0x7a, 0x6e, 0x9e, 0xd0,
	0x05, 0x37, 0xbe, 0xfd, 0xfd, 0x77, 0xb7, 0x86, 0xd1, 0x31, 0xbf, 0x04, 0x67, 0x1f, 0x19, 0x37,
	0xcf, 0x8d, 0xdb, 0xa4, 0xe6, 0x5f, 0xd1, 0x6f, 0x25, 0x69, 0x9d, 0x94, 0xfb, 0xd0, 0xd9, 0x92,
	0x76, 0x69, 0x9f, 0xeb, 0xcd, 0x22, 0xa9, 0x11, 0x9c, 0xc1, 0xe1, 0xce, 0x50, 0x3d, 0x0f, 0xce,
	0xb8, 0x15, 0x8c, 0x77, 0x0a, 0xd4, 0xe4, 0x1e, 0x45, 0x8d, 0x25, 0x7d, 0x53, 0x96, 0xd0, 0xb1,
	0x34, 0x33, 0x75, 0x57, 0xe0, 0xa7, 0x9c, 0xec, 0x44, 0xcf, 0x95, 0xed, 0xb5, 0xd2, 0x44, 0x3f,
	0x25, 0x54, 0xc2, 0x22, 0x4b, 0xa9, 0x52, 0x2e, 0x2a, 0x44, 0x15, 0xe9, 0xd5, 0x2c, 0xac, 0xd7,
	0xbd, 0x02, 0x7b, 0x12, 0xd7, 0xa0, 0x93, 0xc5, 0xdb, 0x9f, 0xdc, 0xb2, 0xd3, 0xbc, 0xb4, 0x88,
	0xeb, 0x25, 0xe7, 0x7a, 0x81, 0x8c, 0x5c, 0x2e, 0xe1, 0x41, 0x36, 0xe5, 0xfb, 0xa5, 0xc0, 0x43,
	0xe9, 0xf5, 0x85, 0xea, 0x8b, 0x5b, 0xaf, 0x3e, 0xcd, 0x36, 0xe7, 0x7b, 0xa6, 0x37, 0x8a, 0xf2,
	0x85, 0x53, 0xbd, 0x9f, 0x67, 0x8b, 0x86, 0xba, 0x84, 0x6d, 0xf5, 0x99, 0x46, 0xda, 0x35, 0x57,
	0xd5, 0xae, 0x57, 0xe2, 0xff, 0x56, 0xda, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x9e, 0xa7,
	0x5d, 0x01, 0x09, 0x00, 0x00,
}
