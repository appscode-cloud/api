{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "ClusterDescribeResponseSpecs": {
      "properties": {
        "containers": {
          "format": "int32",
          "type": "integer"
        },
        "cpu_core": {
          "format": "int64",
          "type": "integer"
        },
        "pods": {
          "format": "int32",
          "type": "integer"
        },
        "rcs": {
          "format": "int32",
          "type": "integer"
        },
        "services": {
          "format": "int32",
          "type": "integer"
        },
        "total_memory": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "dtypesHelp": {
      "properties": {
        "description": {
          "format": "string",
          "title": "Describe what link offers",
          "type": "string"
        },
        "url": {
          "description": "The URL of The link.",
          "format": "string",
          "type": "string"
        }
      },
      "title": "Provides links to documentation or for performing an out of band action.\nNext Id 3;",
      "type": "object"
    },
    "dtypesLongRunningResponse": {
      "properties": {
        "job_id": {
          "format": "string",
          "type": "string"
        },
        "job_type": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        },
        "type_id": {
          "format": "string",
          "type": "string"
        }
      },
      "title": "Available Next ID: 6",
      "type": "object"
    },
    "dtypesStatus": {
      "description": "Next Id 5.",
      "properties": {
        "code": {
          "format": "string",
          "title": "Response status code",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "type": "array"
        },
        "help": {
          "$ref": "#/definitions/dtypesHelp",
          "description": "Optional. Help link if there is an error."
        },
        "message": {
          "description": "User facing message.",
          "format": "string",
          "type": "string"
        },
        "status": {
          "description": "Response status code string.",
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "dtypesVoidRequest": {
      "description": "Void Requests and response to use with other types.",
      "type": "object"
    },
    "kubernetesCluster": {
      "properties": {
        "created_at": {
          "format": "string",
          "type": "string"
        },
        "links": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "nodes": {
          "format": "int32",
          "type": "integer"
        },
        "os": {
          "format": "string",
          "type": "string"
        },
        "phid": {
          "format": "string",
          "type": "string"
        },
        "provider": {
          "format": "string",
          "type": "string"
        },
        "region": {
          "format": "string",
          "type": "string"
        },
        "zone": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterClientConfigRequest": {
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterClientConfigResponse": {
      "properties": {
        "configuration": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesClusterCreateRequest": {
      "properties": {
        "cloud_credential": {
          "format": "string",
          "type": "string"
        },
        "cloud_credential_data": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "kube_starter_version": {
          "format": "string",
          "type": "string"
        },
        "kube_version": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "node_set": {
          "additionalProperties": {
            "format": "int64",
            "type": "integer"
          },
          "type": "object"
        },
        "provider": {
          "format": "string",
          "type": "string"
        },
        "saltbase_version": {
          "format": "string",
          "type": "string"
        },
        "zone": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterDeleteRequest": {
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        },
        "release_reserved_ip": {
          "format": "boolean",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "kubernetesClusterDescribeRequest": {
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterDescribeResponse": {
      "properties": {
        "cluster": {
          "$ref": "#/definitions/kubernetesCluster"
        },
        "specs": {
          "$ref": "#/definitions/ClusterDescribeResponseSpecs"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesClusterInstance": {
      "properties": {
        "external_id": {
          "format": "string",
          "type": "string"
        },
        "external_ip": {
          "format": "string",
          "type": "string"
        },
        "internal_ip": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "phid": {
          "format": "string",
          "type": "string"
        },
        "role": {
          "format": "string",
          "type": "string"
        },
        "sku": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterInstanceListRequest": {
      "properties": {
        "cluster_name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterInstanceListResponse": {
      "properties": {
        "instances": {
          "items": {
            "$ref": "#/definitions/kubernetesClusterInstance"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesClusterListResponse": {
      "properties": {
        "clusters": {
          "items": {
            "$ref": "#/definitions/kubernetesCluster"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesClusterScaleRequest": {
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        },
        "node_changes": {
          "additionalProperties": {
            "format": "int64",
            "type": "integer"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "kubernetesClusterStartupScriptRequest": {
      "properties": {
        "role": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "kubernetesClusterStartupScriptResponse": {
      "properties": {
        "configuration": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/dtypesStatus"
        }
      },
      "type": "object"
    },
    "kubernetesClusterUpdateRequest": {
      "properties": {
        "kube_starter_version": {
          "format": "string",
          "type": "string"
        },
        "kube_version": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "saltbase_version": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protobufAny": {
      "description": "`Any` contains an arbitrary serialized message along with a URL\nthat describes the type of the serialized message.\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "properties": {
        "type_url": {
          "description": "A URL/resource name whose content describes the type of the\nserialized message.\n\nFor URLs which use the schema `http`, `https`, or no schema, the\nfollowing restrictions and interpretations apply:\n\n* If no schema is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemas other than `http`, `https` (or the empty schema) might be\nused with implementation specific semantics.",
          "format": "string",
          "type": "string"
        },
        "value": {
          "description": "Must be valid serialized data of the above specified type.",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "api.appscode.com",
  "info": {
    "title": "clusters.proto",
    "version": "0.1"
  },
  "paths": {
    "/appscode/api/kubernetes/v0.1/cluster-startup-script/{role}": {
      "get": {
        "operationId": "StartupScript",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/kubernetesClusterStartupScriptResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/clusters": {
      "get": {
        "operationId": "List",
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/kubernetesClusterListResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      },
      "post": {
        "operationId": "Scale",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubernetesClusterScaleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      },
      "put": {
        "operationId": "Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/kubernetesClusterCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/clusters/{cluster_name}/instances": {
      "get": {
        "operationId": "Instances",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/kubernetesClusterInstanceListResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/clusters/{name}": {
      "delete": {
        "operationId": "Delete",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      },
      "get": {
        "operationId": "Describe",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/kubernetesClusterDescribeResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      },
      "post": {
        "operationId": "Update",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/appscode/api/kubernetes/v0.1/clusters/{name}/client-config": {
      "get": {
        "operationId": "ClientConfig",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Description",
            "schema": {
              "$ref": "#/definitions/kubernetesClusterClientConfigResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}