// Code generated by go-bindata.
// sources:
// data/files/ci.latest.json
// data/files/cloud_provider.json
// data/files/cluster.latest.json
// data/files/configs.yaml
// data/files/db.latest.json
// data/files/pkg.latest.json
// DO NOT EDIT!

package files

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataFilesCiLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x96\x51\x6b\xdb\x30\x10\xc7\xdf\xf3\x29\x8c\x9e\x97\x20\x39\x8e\x31\x79\xcb\x9a\x52\x02\x5d\x3b\x42\xfa\xb0\x8d\x21\x14\xfb\x96\x8a\x5a\x52\x2a\x4b\x23\xa5\xf4\xbb\xef\xe2\xa5\xa9\x5d\x75\xc3\x50\x48\xf3\x10\x30\x7e\xb8\xff\xff\xee\x74\xbe\x1f\x46\x8f\xbd\x28\x22\x4b\x2f\xcb\x82\x8b\x15\x68\x47\xc6\x3f\x30\x12\x45\x8f\xf5\x1b\xb5\xea\xce\x93\x31\x39\x9b\xf5\xcf\xd8\x9c\xf5\xa7\xd7\xe4\xd3\xb3\xe2\x1e\xd6\x50\x4b\x2f\xa1\xca\x2f\xf9\x2e\xfc\xf9\x66\x76\x39\xe5\x93\x8b\xf3\xab\xc5\x8b\x7e\xef\x8d\x13\xdc\xc2\xbd\x97\x16\x0a\x74\xe5\x72\xd0\x6c\xbe\x37\x16\xb2\x5a\x97\xe2\x81\x6b\xa1\xea\x62\x5b\x4f\x34\x69\x7b\xd6\x56\xe6\x52\xaf\xb8\x32\x05\x94\x68\xfa\x3a\xf9\x76\xd1\x38\x9d\x54\xc0\xbd\x96\x38\x11\xf9\x32\xbb\xba\x59\x9c\x87\x99\xbf\x8c\x55\xbe\x14\xe8\xa0\x03\x16\x36\xdf\xda\xb0\x46\x85\x07\x7d\xfe\x1c\xdb\x64\xb0\xfc\xd6\x78\x8b\x59\xc3\x7d\xce\x2e\xae\x8c\x76\xb7\x28\x8c\x46\x64\x27\x3c\xed\xab\x2a\x70\xa2\x10\x4e\xb4\x8b\x59\xf3\x5b\x16\xb0\x2d\x36\x95\x2b\xe9\x44\x79\x9d\x83\xd0\xcd\xba\xa6\x42\xf1\x52\x6a\xbf\x69\x46\xf3\x35\xae\x85\x35\x02\x56\xa8\x76\x00\xa7\xb8\x23\xe3\x21\x6d\x7a\x20\x37\x4a\x81\x2e\xa0\xe0\xb0\x81\xdc\x3b\x63\xab\x76\x16\x6c\x1c\x58\x2d\x4a\xfe\x77\xef\x6c\xb5\x6c\x76\xdd\xef\x2f\x5c\x5d\x30\x2f\xce\x0a\xbc\x72\xc2\xba\x7a\xd3\x31\x65\x69\x9f\x32\x7c\x16\x94\x8e\xeb\x67\x40\x29\xfd\x4e\xda\x09\xf5\xe1\x6a\xfb\x90\xbe\x69\xef\x35\xba\xbc\x01\x69\x3c\x8f\x4f\x90\x76\x83\x94\x51\x7a\x10\x4a\xe3\xd7\x94\xc6\x01\xa5\x49\x07\x4a\xe3\x7f\x53\x1a\x23\xa5\x47\xc3\x5f\x72\xe2\xaf\x23\x7f\xe9\x07\xf1\x97\x04\xfc\xa5\xef\xe3\x2f\x39\x1e\xfe\x92\x79\x76\xe2\xaf\x1b\x7f\xf1\xe8\x30\xfc\x25\xaf\xf9\xcb\x02\xfe\xb2\xf7\xf1\x97\x1d\x0f\x7f\xd9\x1c\xdb\x9c\x00\xec\x04\xe0\xf0\x40\x3f\xc0\x2c\xb8\x26\xa6\x01\x81\xac\xcb\x2f\x30\xf9\xcf\x45\x31\x3d\x38\x83\xf8\xfe\xd9\x7b\xea\xfd\x09\x00\x00\xff\xff\x20\x9b\xef\x18\xc2\x0c\x00\x00")

func dataFilesCiLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesCiLatestJson,
		"data/files/ci.latest.json",
	)
}

func dataFilesCiLatestJson() (*asset, error) {
	bytes, err := dataFilesCiLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/ci.latest.json", size: 3266, mode: os.FileMode(436), modTime: time.Unix(1465414007, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesCloud_providerJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x9a\xdb\x6e\xe3\x36\x13\xc7\xef\xf3\x14\x82\xae\x63\xc3\x3a\xac\x63\xe4\x6e\x63\xec\x97\x2f\xc0\xb6\x1b\xc0\x49\x8b\xa2\x58\x04\x8c\x44\xcb\x84\x25\xd2\xa0\xa4\x66\xbd\x8b\x3c\x4d\x1f\xa5\x2f\x56\x4a\xb2\x15\xcb\x24\x2d\x8e\xd6\x44\x73\xa7\x70\xc6\xcc\x6f\xc8\xff\x8c\x78\xd0\x8f\x0b\xc7\x71\xa3\x94\x95\xf1\xd3\x86\xb3\xbf\x48\x8c\xb9\x7b\x5d\x35\x8a\x66\xf4\x92\xef\x9f\xc5\x5f\x14\x65\xd8\xbd\xae\x1b\x2f\xf7\x6d\x9b\xf2\x39\x25\x91\x7b\xed\x14\xbc\xc4\x6d\x2b\xc7\x09\x61\x54\xfc\xf6\xcf\x5d\x8b\xe3\xfc\x68\x9f\x84\x3d\x65\x11\x2a\x84\x87\xe8\xed\x37\xc2\x13\x42\x09\x6a\xbb\x3c\xe8\x40\x98\xcb\x7c\x84\x51\x5e\x8c\xbc\xae\xfd\x3b\xa3\xb8\xd3\x7d\xdd\xda\x3a\x77\x7b\x3b\xb4\x3c\x6b\x2d\x91\xd6\x12\x6b\x2d\xd8\x3d\x30\x7c\x6d\x9f\x5f\x2f\x7b\xc3\x9e\xa3\x94\x2c\x19\x3f\x19\xf8\x0b\x06\x04\xde\x38\xab\x02\x6f\x2c\xaa\xc0\x1b\x4b\x34\x38\x88\x2f\x82\x56\x3c\x9c\x0e\xc0\x97\x03\xd0\xf2\xfb\x5a\x7e\x5f\xcb\xef\x0f\xe7\xbf\xe3\x38\x45\x34\xd6\x04\x80\x4b\xc0\x0c\xb4\xce\x52\x04\xad\x45\x8a\xa0\xb5\x0c\x8f\x60\x41\x68\x82\x36\x8c\x63\x4d\x0c\x68\x33\xca\x59\x59\xac\xcc\x73\xa8\xfb\x0b\x29\x9a\xae\xf9\x79\x30\xf8\x03\x5b\x6f\x99\x1e\x9a\x32\x0e\x84\x3e\xf8\x85\x0a\xfa\xc0\x2c\xcd\x43\xd7\x0c\x9c\x0c\xf5\x50\x1f\x89\xfe\x70\xc6\xb6\x31\xc5\x5b\xf0\x4c\xc8\x99\xd1\x35\x03\x67\xa2\xa5\xce\x91\xb2\xbe\x1e\x02\xff\xf3\x37\x73\xee\x51\x99\x32\x13\xe8\xb6\x3f\x89\xb7\xb5\xe8\x50\x77\x4f\x5f\xdb\xb7\x08\xa1\x79\x81\x68\x84\x9f\x8a\xed\x06\xeb\x5f\x26\x82\x54\x94\x21\xbe\x15\xac\xb7\x98\x62\x8e\x52\xe7\xbe\xe4\x1b\x96\x1f\x25\x45\xbe\x2e\x85\x4b\xe1\x8f\x33\x12\xf1\xa3\x60\xa2\x8d\xb0\x79\x9d\xa6\x0c\x67\x75\xa7\x5e\xef\x60\x82\x01\xf2\x0c\xa5\xa9\x31\x80\x7f\x7e\x80\x0c\xc7\xa4\xcc\x14\x04\xbe\x92\x20\x3c\x3f\x41\x8a\x78\x82\x8d\x01\x66\x67\x06\xc8\xc2\xff\x1e\xe0\x9b\x8e\x20\x54\xcb\x70\x7a\x7e\x04\x5f\xcb\x30\x53\x32\x04\xe7\x96\xa2\x60\x08\xb5\x0c\xde\x54\x09\x31\x3d\xb7\x1a\x05\x84\x37\xd1\xcf\xc6\x44\x33\x1d\x93\x73\x63\x04\xfa\xb4\x54\x17\x86\x60\x7c\xf5\xe1\xfc\x10\xb0\xc4\xb8\x1a\x5b\x40\x80\xa6\x86\x05\x04\x70\x6a\x80\xe4\x30\x67\xd9\xa6\x2c\xb0\xf3\x65\x53\x90\x8c\x7c\xc7\xb1\x8a\x22\x82\x16\x29\xa8\x1e\x4c\x29\x80\xd3\x01\x94\x84\x29\x05\x74\x46\x60\xaa\x30\xa5\x00\x97\x2b\x3b\xc2\x98\x69\x31\x02\x4d\xd5\xb4\x80\x01\xad\x15\x76\xf4\x09\x2e\x17\x56\xf4\x09\xaf\x18\x36\xf4\x19\xbc\x0f\x7d\x06\xa7\xf4\xa9\xd6\x06\xf0\x75\x7a\xff\xe8\xdc\xed\x76\x07\xb9\x0a\x21\xf1\x2d\xcf\x87\x09\x81\xe5\x41\xf8\xa5\xfe\x95\xc3\x4e\x4d\x05\x87\xe6\x28\x6c\x14\x0c\x11\x80\x09\x1a\x4c\x60\x19\x6a\x48\x01\x15\xc4\x14\xb4\xf3\x33\x84\x00\xe7\xa7\xe7\x83\x16\xdd\x86\x18\x60\x69\xfa\x21\x68\xd9\xbd\x28\x18\x47\x49\x4f\x9d\x20\xbe\x6d\x65\x98\x62\xd8\x95\x86\x29\x85\x6d\x6d\x98\x72\xbc\x0b\x71\xc4\xef\x43\x1c\xf1\xbb\x10\x47\xfc\x4e\xc4\x11\x9f\x14\x87\x9a\xa3\x23\x8e\xdd\x53\x73\xea\xb7\xa3\x72\x93\x08\xcb\xb7\x4c\x55\xe3\xbe\xbf\x81\xb7\x4c\xed\x21\xe7\x27\x94\x17\x98\x53\xe7\x71\xd1\xc5\xfe\xfc\x76\xca\x79\x83\xf9\x1a\xa7\x78\xeb\xcc\x59\x49\x8b\xed\xa5\xb3\xa8\xce\x56\x9d\x39\xe2\x2c\x25\x14\x01\x6e\x9f\xbc\x91\xee\x8e\xc9\x1b\xe9\xee\x98\xbc\x51\x3c\xf0\xfc\x76\x8e\x69\x51\xed\x66\x4f\x84\x56\x45\x14\x91\xd4\xb9\x49\xcb\xe5\x32\xbf\x74\xee\xd8\x8b\x69\x3c\x51\xd3\xbb\x37\x52\xdd\xcb\xb4\x46\x55\xbc\xad\x51\x15\x72\x6b\x5c\x0e\x8c\xfa\x77\xdc\x4c\xe8\xa7\x92\xb3\x0d\xd6\x46\xbe\x28\xc6\xce\xed\x8a\xe4\x29\x22\xf4\xd2\xb9\xc1\x69\x22\x1d\xaf\xe8\x6e\x73\xaa\x7e\xeb\xdb\x19\x45\x78\x1d\xab\x14\x5f\xc7\x3a\x74\x5a\x2b\xc5\x3a\x1f\xf3\xe3\xdb\xc1\xc3\x59\x5d\x21\x9a\xac\x4a\xd4\x0a\xf6\x01\x91\x17\x44\x8d\x2e\x16\x44\xbf\x3b\xd9\xc9\xb7\x0a\x6f\x36\xf9\x9e\xe4\xcd\xa6\xbb\x24\xd9\xe7\x77\x9b\xa3\xf0\x33\xfc\x85\x7c\x38\xbe\x5b\x51\x7b\x23\xd8\xc1\xb9\xeb\x8d\xaf\x26\xb7\x37\x2e\xac\x0c\x22\x1a\x23\xae\xac\x7e\x54\x00\xec\xcc\xc7\xf7\x25\xa7\x28\xaa\x6d\xaf\x25\x0a\xdf\x78\x5d\xef\x8a\x5d\xaf\x25\x88\xd0\xf8\x0d\xed\x7a\xb6\x18\x66\xc6\x6f\x67\x37\xb0\x26\x89\xa9\xf9\xcb\xd9\x9d\xda\xa2\x08\x7c\x15\x86\x66\xe1\xe6\x7a\x3e\x94\xe3\xff\x24\x59\x39\xcd\x2e\x43\x83\xb2\x12\x1e\xe2\x1f\x40\xc4\xe9\x05\xd6\x28\x00\xea\xf4\xa7\xd6\x28\x00\xfa\xfc\xe0\x5b\xa3\x00\x29\xd4\x9b\x84\xd6\x40\x60\x22\xf5\x27\xb3\x21\x24\xf3\xfb\xc7\x13\x18\xe2\x3f\x82\x14\x3a\x9e\x0d\xca\x94\x7e\x08\x80\x40\x83\x31\xb8\x6c\x18\x42\x00\xf4\x79\x35\x1e\x56\x33\xfa\x21\x60\xf2\x0c\xc7\xa1\x25\x0e\xa0\x3a\x67\xc7\xd2\xd8\x2f\x82\x2e\x0e\xb0\xdc\x98\x24\xa4\x40\x29\x8b\xb0\x58\xa4\x49\xbb\x9d\x8e\x55\xde\xf6\x2c\x51\x9a\x0f\xfa\xba\xee\x57\xfc\xe2\xfc\xc1\xf8\xda\x39\x5a\xaf\xb4\x0b\x4d\xba\x8d\x8c\xbe\xb0\xa9\xfd\x40\x6b\xd9\xc3\x4f\x48\x10\x75\xfe\xc7\xc5\x32\x90\xe4\x11\xd3\xa2\xe4\x4b\x66\x84\x52\xfb\x0d\x45\x69\x07\xc4\xd7\x0f\x88\xe2\x8b\x35\xe5\x80\xf8\x83\x29\x3e\x66\xd5\xfe\x25\x46\x99\x16\x03\x65\xb9\x11\x46\xed\x37\x78\x5e\xf6\x5f\x8f\xe9\xe7\x24\xd9\x98\xcd\x49\xe5\x37\x14\xe3\x33\xa3\x31\xa3\x5a\x86\x94\x51\x23\x86\xda\xef\xa7\x75\x11\xe8\x75\x11\x18\xea\x22\x18\x4c\x51\x25\xc9\x7a\x59\xf2\x42\x3b\x18\x4b\x8e\x8c\x06\xa3\xf6\x1b\x8a\xf1\xc0\x38\xa3\x85\x3e\x53\x0b\xc6\x8d\x20\x6a\xbf\xa1\x10\x37\x62\x7f\x2b\x2a\xe2\x09\x71\x3e\xa7\x66\x18\xb5\x9f\x1a\x63\x5f\xaa\x7f\x62\xbf\x6a\xf0\x3d\x41\xcc\xc6\x5e\xd2\xdd\x4e\xbb\xf8\x5b\x75\x82\x81\xd2\xa7\xc6\x45\xb2\x2b\x76\x94\x1c\x65\xc7\x4d\x31\xc9\xd7\xd0\x3b\x3c\x33\x60\xbf\x07\x58\xb2\x2b\x56\x4f\x35\xb0\xaf\x00\x0e\x2d\x00\x87\x3d\xc0\x92\x5d\x07\x1c\x2a\x80\xcf\xfe\xb5\x8f\x00\x9e\xf5\x00\x4b\x76\xc5\xd2\xb0\x06\x9e\x29\x80\x67\x16\x80\xbd\x69\x9f\x88\x25\x07\xc5\x42\xb2\x51\xf1\x54\xc1\x7c\xfe\x6f\xaa\x04\x74\xd0\x27\x64\xd9\xa1\x49\x3d\x85\x32\x02\x95\x96\x03\xdf\x86\x98\xfb\xc4\x21\x3b\xa8\x56\xcb\x8d\x9e\x55\xfa\x08\x6d\x08\x64\xda\x97\x83\xb2\x43\x93\x84\x13\x99\x7a\xaa\x4c\xc3\xc3\xc2\xb1\xaf\xdd\x17\xfb\xbf\x5e\x2f\x5e\x2f\xfe\x0d\x00\x00\xff\xff\xb4\xe1\xd9\xac\xce\x32\x00\x00")

func dataFilesCloud_providerJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesCloud_providerJson,
		"data/files/cloud_provider.json",
	)
}

func dataFilesCloud_providerJson() (*asset, error) {
	bytes, err := dataFilesCloud_providerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/cloud_provider.json", size: 13006, mode: os.FileMode(420), modTime: time.Unix(1467100482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesClusterLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xcf\x6a\xf2\x40\x14\xc5\xf7\x3e\xc5\x30\xcb\xef\xab\x61\xa2\xd8\x45\x76\x69\x09\x22\x6d\x6d\x69\xe3\xa2\x2d\x65\x18\x93\x5b\x1d\xcc\x4c\xe2\xfc\x59\x88\xe4\xdd\x7b\x33\x44\x63\xb1\x30\x5c\xc2\x3d\xbf\x73\x38\xb9\xc7\x11\x21\x74\xe7\xd7\xc0\xc5\x06\xb4\xa3\xc9\x27\x2e\x08\x39\x86\x89\x92\xdd\x79\x9a\xd0\x87\xd5\x5d\x36\x4e\xe7\xd9\x32\x1f\xa7\x8b\x67\x7a\x73\x52\xdd\xa1\x01\x94\xef\x1f\xdf\xf2\xd7\x61\x6b\xfd\x9a\xf7\x4a\x67\xe4\xc1\x38\xc8\x7b\x5f\x3b\xc1\x0d\xec\xbd\x34\x50\x22\x54\x54\xde\x3a\x30\xd1\x45\x8d\x33\x5c\x4a\xdb\x54\xe2\xc0\xb5\x50\x21\x0f\x11\xa3\xc1\x81\x1d\x90\xc6\xc8\x42\xea\x0d\x57\x75\x09\x15\x32\x2f\xe9\xfb\xfc\xa2\xa2\x54\xc0\xbd\x96\xf8\x6b\xf4\x69\xb1\x5c\xe5\xd9\xb5\xf3\xbb\x36\xca\x57\x02\x09\x16\xcd\xc8\x3f\x52\x34\x9e\xfc\x27\x2c\x8a\xf1\xdb\x08\x75\xdd\xa6\x33\x62\xaa\xc5\xf6\xa7\x4b\x75\x71\x60\xf8\xb6\xf6\x06\x73\xa6\x67\x4f\xbf\x57\xb5\x76\x5b\x14\x26\xd1\x8c\xf6\x4a\x3b\xc4\x0a\x07\xdc\x3a\x61\x5c\xb8\xc7\x84\xc5\xb7\x63\x16\xe3\xcb\x19\x4b\xc2\x8b\x18\x63\x1f\xf4\xb7\x01\x74\xd9\xe3\x53\xf6\x27\x1e\xe8\x16\xe7\xd7\xa8\x1d\xfd\x04\x00\x00\xff\xff\x94\x83\x36\x08\xe9\x01\x00\x00")

func dataFilesClusterLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesClusterLatestJson,
		"data/files/cluster.latest.json",
	)
}

func dataFilesClusterLatestJson() (*asset, error) {
	bytes, err := dataFilesClusterLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/cluster.latest.json", size: 489, mode: os.FileMode(420), modTime: time.Unix(1464354088, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesConfigsYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x6f\xe2\x30\x10\x85\xef\xf9\x15\xa3\x70\xde\x44\xbb\x47\x6e\x11\x8b\x76\x91\x68\x55\x89\xb6\x77\x63\x0f\x64\x54\x67\x26\xb2\xc7\xa9\xf8\xf7\x75\x40\x50\x10\x52\xe8\x29\x2f\x79\xdf\x1b\x3f\x65\x3c\x83\x85\xf0\x8e\xf6\x29\x18\x25\xe1\x08\x3b\x09\xd0\xbc\xac\x96\xec\x7a\x21\xd6\x58\x8d\x6f\x1b\x0c\x03\x06\xf8\x24\xef\x8b\x19\x18\xab\x20\x0c\xc4\x8e\x06\x72\xc9\x78\xe8\x50\x5b\x71\x11\x52\x9f\xbf\x6b\x8b\x60\x6f\x86\xe6\x4c\x1f\x24\xb3\xe8\xaa\xa2\xd0\x43\x8f\x73\x28\x57\xac\x18\x2c\xf6\x2a\xe1\x54\xa1\x2c\x4c\xca\x59\x56\xb2\xc7\xd8\x15\x30\x2f\x00\x24\x38\x0c\x73\xf8\x9d\x65\xe2\x2b\x12\xdd\xb9\xeb\x48\x01\xfc\x82\xb2\x6e\xd1\x78\x6d\xab\xff\xc7\x47\xbd\x51\xa3\x29\x96\x17\x77\x0c\x57\xcd\xcd\x59\xf5\x5a\xf6\xc4\x0f\x11\x49\x3a\xcd\xbc\xca\x07\x5e\x8d\xe9\x0c\x79\xe2\xbd\xa7\xa8\xd5\xd3\x49\xaf\xb3\xae\x37\xc8\x6e\x39\x9a\x3f\x40\xd3\x36\xda\x40\x5b\x7c\x8c\xbe\x71\xbc\x87\xd9\x74\x18\x7b\x63\xb1\x7a\x3e\xab\x7a\x11\x30\xff\xb7\x69\xe6\x1f\xea\x34\xb0\x8a\xcd\x90\x0f\x37\x5b\x7f\x9c\x14\x0f\x51\xb1\x6b\xa6\xf7\x62\x29\x17\xce\x5c\xb8\xab\xf0\xed\xfc\x45\x8f\xa3\x33\x18\x4f\x6e\xe2\x22\xfc\xc9\x92\xe5\xfd\x42\x3d\xd8\xfe\x57\x00\x00\x00\xff\xff\xf0\x0b\x0b\x49\xe9\x02\x00\x00")

func dataFilesConfigsYamlBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesConfigsYaml,
		"data/files/configs.yaml",
	)
}

func dataFilesConfigsYaml() (*asset, error) {
	bytes, err := dataFilesConfigsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/configs.yaml", size: 745, mode: os.FileMode(436), modTime: time.Unix(1465471963, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesDbLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\xdb\x6e\xda\x40\x10\x7d\xf7\x57\x44\x7e\x2e\xd6\x12\x94\x56\xe5\xcd\x18\x87\x20\xd1\x04\x61\x90\x7a\x51\x65\x2d\x78\x08\xab\xfa\x96\xbd\x54\x8d\xa2\xfc\x7b\x87\x65\x51\x8c\x65\x5a\x9b\x24\xe2\xc5\xc8\x12\x30\x67\x66\x76\x3c\xc7\x3e\xe7\xc9\xba\xb8\xb0\xf3\x4c\xc8\x7b\x0e\xc2\xee\x6f\xff\x62\x20\xa5\x09\xd8\xfd\x97\xf8\x87\x5d\xf8\x37\x70\xc1\xb2\x14\xf3\x7e\xe8\x00\x86\x3e\x3b\x57\xb6\xfe\xfd\xd3\xe4\x44\xcb\x17\xf4\xc9\x7c\x63\x58\xfc\x52\xd8\x70\x38\xe8\x4c\x47\x9d\x81\x1b\x8c\x3d\xd3\x53\x83\xf2\x31\x07\x8d\x16\x83\x42\x2d\x43\x03\x4c\xef\x82\xf9\x68\xe6\x07\x45\xf8\x41\x65\x92\x86\x1c\x1e\x14\xe3\x10\x61\x52\xb4\x74\xd6\x1c\xc0\x29\x0d\xbd\x1b\x8a\x89\x3c\xa6\x8f\xa1\xb9\xaf\x01\x15\x6c\x55\xc4\x73\xce\x56\x2c\xbd\x0f\x93\x2c\x82\x18\x13\xae\x67\xbe\x7f\x30\x20\x4b\x20\x54\x29\x93\x88\x7d\x19\xdf\x2e\xe6\x7e\x55\xf5\x3a\xe3\x89\x8a\x29\xe6\x10\xa7\x5b\x75\xfc\x36\x11\xfb\x88\x68\xbf\xe8\x7d\x03\xe0\xe1\x26\x53\x1c\x2b\x7b\x85\x3a\x83\x24\x59\x2a\x37\x08\x5d\x99\x4d\x6f\x3f\xcf\xc5\xee\x54\x42\x28\x24\xe5\x52\xef\xe1\x92\x74\x3f\x76\x48\x17\xaf\x39\x21\x7d\x7d\x39\x84\x90\xef\x76\xb9\x04\xd2\xc8\x14\xf4\x48\x65\x81\x55\x3a\xeb\x08\x9d\xc3\xc5\xcc\x1d\x4c\xfc\xf7\x20\x34\xa7\x2c\xaa\x43\xe8\x50\x71\xba\x8c\xe1\x5f\x94\x4e\xdd\x6f\xa3\x96\xd2\x9a\x94\xde\xb8\xe7\x64\xf3\xf0\xf4\x96\xc8\x57\x10\xe9\x4d\xee\x16\xc3\x73\x72\xe9\xc5\x99\x8a\x5a\x3a\xeb\xd2\xb9\xb3\x52\xcb\x9c\x6a\x43\x4c\x85\x64\x2b\x01\x94\xaf\x36\x65\x77\x3e\x04\x8f\x5b\x74\xd7\xf9\x84\x26\xbd\x1f\xc9\xbe\x74\x7a\xb8\xb2\x46\x9e\xed\x07\xcd\x3d\xdb\x9f\xb8\xc1\x7c\xec\x05\xbe\x3b\xf3\x6e\x6a\x19\x77\xd5\xfd\x54\x3d\x52\xad\x7b\xbf\x99\x42\x20\xb1\x27\xb8\x77\x23\x6a\xb5\x50\xd4\xa5\xb6\xf5\xf1\xd7\xe9\x05\x4b\xd7\xb1\xfa\x53\x16\x0a\x13\x3d\xae\x10\xb8\x13\xe2\xf4\x9a\x69\xc2\xf8\xf6\x7a\xb2\xf8\xda\x5c\x17\x76\x75\xb5\x04\xe1\x60\xee\xaa\xc7\xa5\x55\x82\x37\x53\x02\x43\xe7\x09\x6a\x50\x8f\x50\x2d\x03\xff\x25\xb4\x7d\xff\x4f\x7e\xff\xad\x67\xeb\x6f\x00\x00\x00\xff\xff\x4f\xcc\xb8\xbc\xcc\x0f\x00\x00")

func dataFilesDbLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesDbLatestJson,
		"data/files/db.latest.json",
	)
}

func dataFilesDbLatestJson() (*asset, error) {
	bytes, err := dataFilesDbLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/db.latest.json", size: 4044, mode: os.FileMode(420), modTime: time.Unix(1464354088, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesPkgLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xd8\x5d\x8b\x9b\x4c\x14\x07\xf0\xfb\x7c\x8a\xe0\xf5\x13\x19\xb3\xec\x73\xe1\x9d\x65\xdd\x56\xda\xec\x8a\x71\x2f\xb6\xa5\xc8\xa8\x93\x64\xc8\x38\xba\xf3\x52\xba\x2c\xfb\xdd\x7b\x4c\x93\x26\x6e\x42\xa1\xac\x09\x5e\x1c\x08\x12\xfc\x9f\x19\x8f\xc3\x0f\x19\xe6\x65\x34\x1e\x3b\xcd\x7a\xe9\xf8\xdf\xe0\xdf\x78\xfc\xb2\xb9\xc2\x3d\xbd\xb6\x8e\xef\x7c\x9a\x44\x77\x37\x51\x38\x49\x93\x28\xf8\xe2\xfc\xb7\x0b\xcd\x73\xc3\x20\x8d\x3f\x7f\xdc\xdf\xd3\x36\xcf\xb6\xf7\x1f\xe6\x61\xb2\x0f\x9e\x6c\x6d\x68\xa6\xd8\x93\xe5\x8a\x95\x10\xc3\xe3\x5c\xab\x99\xda\x97\x94\x5c\x37\x82\x3e\x67\x92\x56\xed\xf8\x48\x96\x9c\xed\xd3\x46\xf1\x82\xcb\x65\x56\xd5\x25\x13\x10\xdf\x26\x61\xd8\x79\xae\x2e\x14\x6f\x0c\xaf\xe5\xae\x81\xb7\xed\xf2\x8a\x65\x56\x72\x03\xd1\x4d\xf0\x78\x3c\xf3\xa2\x56\x95\x15\x14\x62\xe2\x7a\xc7\x6d\xb5\x65\x30\x81\x86\xe6\x77\xeb\xd3\x0e\x66\x0a\x5a\x92\x66\x95\x55\xd3\x0a\x86\x5e\xfd\x19\xd8\x09\x69\xd3\x86\x53\xf7\xda\xd9\xa6\xaf\xdd\x95\xe9\xce\xb9\x5b\x1a\xdf\x23\x87\xb3\xad\x68\x0e\x3d\x50\x53\x2b\x17\x9a\x5a\x67\xcb\xdc\xf1\xa7\x87\x15\x54\x19\xbe\xa0\x85\xd9\xc7\x1e\x39\xcc\x0b\xee\xe6\x96\x8b\x32\xa3\x4b\x26\x61\x1d\x26\xde\x61\x28\xac\x36\x4c\xb9\x6b\x9b\xb3\x93\x05\x65\xee\x36\x94\x97\x6e\x53\x6b\xb3\x54\x4c\x3b\xfe\xf5\x89\x94\x09\xaa\x0d\x2f\x34\xa3\xaa\x58\x9d\x2e\xe1\x72\x21\xec\x4f\xc8\x8e\xd6\xa2\xa4\x86\x65\xda\xc0\x7b\x6c\x8c\x4c\x89\xf7\xff\x84\x78\xf0\x4b\x09\xf1\x37\x3f\x97\x10\xf2\xd5\xe9\x0e\x60\xb2\xdc\x96\x5f\x91\x93\xe5\xa3\x83\xa7\x1c\xd9\x9e\xa7\x41\x92\x3e\xc4\x17\xd6\x3d\x6f\x5f\xd2\x36\xe8\x1b\x7d\x9f\xd9\x77\x9c\xdc\x5f\xd8\x76\xac\xea\x05\xd3\x1a\xa8\x52\x81\xc0\x11\xf8\x99\x81\x87\x77\xe9\xe4\x43\x98\x06\x17\xf3\x1d\x4a\x58\x66\xd0\xa4\xdf\xb5\x3d\x79\xd3\x32\xe2\x46\xdc\x47\xb8\xe3\xcb\xc2\x8e\x15\xff\x01\x2d\x8f\x23\x09\x6f\x29\x04\x6d\xb9\x22\x71\x24\x7e\xde\xef\x77\xd7\xd1\x99\x89\xdf\x2a\xf6\xae\xaf\x76\x9c\x44\xb3\x20\x79\x44\xd5\xa8\xfa\xef\xaa\x67\xd3\xd9\xef\x63\x93\xa1\x1c\x98\x40\x43\x48\x1b\x69\xf7\x44\x7b\x7b\x6a\x32\x9c\xf3\x12\xe4\x8d\xbc\xfb\xe3\x1d\x27\xf7\x03\x3b\x2e\x41\xdf\xe8\xbb\x1f\xdf\x41\x3c\xb0\x9d\x09\x34\x84\xb4\x91\x76\x4f\xb4\x07\xb7\x33\x41\xde\xc8\xbb\x3f\xde\xc3\xdb\x99\xa0\x6f\xf4\xfd\x8f\xbe\xe1\xfa\x7d\xf4\x3a\xfa\x15\x00\x00\xff\xff\x09\xaf\x41\x3a\x78\x22\x00\x00")

func dataFilesPkgLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesPkgLatestJson,
		"data/files/pkg.latest.json",
	)
}

func dataFilesPkgLatestJson() (*asset, error) {
	bytes, err := dataFilesPkgLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/pkg.latest.json", size: 8824, mode: os.FileMode(436), modTime: time.Unix(1464908933, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/files/ci.latest.json":      dataFilesCiLatestJson,
	"data/files/cloud_provider.json": dataFilesCloud_providerJson,
	"data/files/cluster.latest.json": dataFilesClusterLatestJson,
	"data/files/configs.yaml":        dataFilesConfigsYaml,
	"data/files/db.latest.json":      dataFilesDbLatestJson,
	"data/files/pkg.latest.json":     dataFilesPkgLatestJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"files": &bintree{nil, map[string]*bintree{
			"ci.latest.json":      &bintree{dataFilesCiLatestJson, map[string]*bintree{}},
			"cloud_provider.json": &bintree{dataFilesCloud_providerJson, map[string]*bintree{}},
			"cluster.latest.json": &bintree{dataFilesClusterLatestJson, map[string]*bintree{}},
			"configs.yaml":        &bintree{dataFilesConfigsYaml, map[string]*bintree{}},
			"db.latest.json":      &bintree{dataFilesDbLatestJson, map[string]*bintree{}},
			"pkg.latest.json":     &bintree{dataFilesPkgLatestJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
