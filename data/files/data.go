// Code generated by go-bindata.
// sources:
// data/files/ci.latest.json
// data/files/cloud_provider.json
// data/files/cluster.latest.json
// data/files/configs.yaml
// data/files/db.latest.json
// data/files/pkg.latest.json
// DO NOT EDIT!

package files

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataFilesCiLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x96\x51\x6b\xdb\x30\x14\x85\xdf\xf3\x2b\x8c\x9e\x97\x20\x29\x8e\x31\x7e\xeb\xda\x31\x0a\xdb\x3a\x4c\xf7\xb0\x8d\x21\x54\xeb\xce\x15\xb5\x24\x23\xcb\x23\xa5\xf4\xbf\x4f\xf2\xda\xa0\x56\x5d\x29\x14\xd2\x80\xc1\xe8\xe1\x9e\x73\xef\xc9\x0d\x1f\x42\x37\x8b\x2c\x43\x17\xa3\xec\x04\xe3\x2d\x68\x87\xaa\xec\xa7\x2f\x65\xd9\xcd\x74\x7a\x71\xb8\x1a\x7d\x11\x1d\x9f\x2e\x8f\x49\x4d\x96\x27\x67\xe8\xdd\xbd\xe4\xae\x7b\x08\x5a\x23\x57\xf1\x88\x9d\x2e\xe4\xd0\x77\xfc\x9a\x69\xae\x26\xdf\xfb\x60\xca\x8e\x1e\x9a\x7a\x2b\x1b\xa9\x5b\xa6\x8c\x80\x0e\x55\xe8\xeb\xd1\xf7\x8f\x51\x84\x54\xc0\x46\x2d\xfd\x0f\x43\x9f\x4f\xbf\x7c\x3b\xff\x90\x76\xfe\x36\x56\x8d\x1d\xf7\x0e\xbc\x22\x69\x7a\xb0\xf9\x19\x83\x40\xd5\xfd\x52\xa1\x19\x2c\xbb\x34\xa3\xf5\x5d\xeb\x5d\xcf\x5d\x5d\x19\xed\x2e\xbd\xb0\xd9\xa0\x3b\xe1\x76\x37\x55\x81\xe3\x82\x3b\x9f\x96\xc5\xd3\xac\xf9\x23\x05\xd8\xb0\xe5\x89\x6c\xa5\xe3\xdd\x59\x03\x5c\xc7\x93\xcd\x10\xd4\x4f\x52\x8f\xdb\xb8\xdc\xf4\xe1\xff\x25\x51\xc5\x72\xf5\xa8\xe2\x57\xb9\xf2\xa5\x35\x8e\x5d\xd0\x18\xa5\x40\x0b\x10\x0c\xb6\xd0\x8c\xce\xd8\xe1\x51\x1f\x6c\x1d\x58\xcd\x3b\x26\x45\xc8\x26\xed\x45\xba\x90\x5f\x06\xd8\xe0\xb8\x75\x30\x99\x28\x26\xc5\x12\x13\xff\x9d\x63\x5c\x4d\xdf\x0a\x63\xfc\x03\x3d\xec\x98\x82\xff\xf9\xd7\xf8\x49\xff\x22\xca\x79\x8a\x26\x5a\xd3\x59\xd1\x44\x30\xde\x1b\x4e\x34\xc1\x89\xa6\x38\xe5\x2f\xc1\x89\xfe\x1f\x27\x7a\x60\x38\xe5\xf3\xc2\xa9\x78\x4b\x9c\xf2\x14\xa7\xe2\x95\x38\xe5\x07\x85\x53\x5e\x97\xb3\xc2\x89\x6e\xf6\x87\x53\x9e\xe0\x54\xa6\x38\x95\xaf\xc4\xa9\x3c\x28\x9c\xca\xda\x07\xcd\x89\xa7\xf5\x1e\xaf\xa7\x32\x7d\x3c\x15\x29\x50\xe4\x45\x17\x54\xfe\xcc\xf3\xa9\x78\x03\xa4\xfc\xf9\x6b\x71\xbb\xf8\x1b\x00\x00\xff\xff\xd0\x55\x31\xf7\xa8\x0b\x00\x00")

func dataFilesCiLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesCiLatestJson,
		"data/files/ci.latest.json",
	)
}

func dataFilesCiLatestJson() (*asset, error) {
	bytes, err := dataFilesCiLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/ci.latest.json", size: 2984, mode: os.FileMode(420), modTime: time.Unix(1464267152, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesCloud_providerJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x99\xcf\x6e\xe3\xb6\x13\xc7\xef\x79\x0a\x42\x67\x5b\xb0\x28\xad\x63\xec\xed\x17\x63\x91\x5f\x80\x16\x1b\xc0\x9b\xf6\x50\x2c\x16\x5c\x89\x91\x89\x48\xa4\x40\x49\x4d\xbd\x8b\x3c\x4d\x1f\xa5\x2f\x56\xfa\x1f\x63\x59\xa4\xcd\x11\x4c\xd4\x37\x99\x43\xd1\x9f\xd1\x7c\x67\x24\x72\x7e\xde\x20\x14\xa4\x85\x68\xb3\x6f\x95\x14\x7f\xb2\x8c\xca\xe0\xe3\x7a\x50\x0d\x93\xd7\x7a\x7f\xad\x7e\x71\x52\xd2\xe0\xe3\x66\x70\xb4\x1f\x93\x34\x67\x82\xab\x59\x7f\xec\x46\x10\xfa\xa9\xaf\x94\xbd\x10\x29\x69\xd4\x0c\x75\xdf\x6f\x4c\xe6\x8c\x33\xa2\x6f\x3e\x58\x40\x99\xdb\x7a\x4c\x49\xdd\x8c\xa3\xae\xfd\x87\xe0\xb4\xb3\xfc\x66\x54\x4f\xee\xae\x76\x68\xf9\x6e\xb5\xa4\x56\x4b\x66\xb5\xd0\xe0\xc0\xf0\x55\x5f\xbf\x8d\xce\xba\x3d\x27\x05\x7b\x16\xf2\xa4\xe3\xaf\x14\xe0\xf8\x76\xb2\xc9\xf1\xad\xc5\xe4\xf8\xd6\x92\x0e\x76\xe2\xb3\xa2\x55\x17\xa7\x1d\xc0\x7d\x07\xac\xfc\xd8\xca\x8f\xad\xfc\x78\x38\xff\x83\xa4\x05\xe1\x99\xc5\x01\xda\x02\x22\xa0\x27\xf7\x3c\xd0\x96\x9e\x07\xda\x32\xdc\x83\x05\xe3\x39\xa9\x84\xa4\x16\x1f\x48\x35\xae\x45\xdb\x2c\xdd\x73\xa8\x7b\x47\xcf\x9b\xae\xf9\xfb\x60\xf0\x2f\xe2\x65\x25\xec\xd0\x5c\x48\x20\xf4\xc1\x1d\x26\xe8\x03\x73\x2f\x0e\x5d\x33\x30\x18\xe6\x47\x7d\x24\xfa\xc3\x88\xad\x32\x4e\x57\xe0\x48\xf4\x33\xa3\x6b\x06\x46\x42\x53\xd7\xc4\x58\x5f\x0f\x81\xff\xf9\x5b\xa0\x47\xd2\x16\xc2\x05\x5a\xaf\xd7\xe3\xd5\x16\x1b\xea\xee\xea\xab\x7e\x8b\x30\x5e\x37\x84\xa7\xf4\x5b\xb3\xaa\xa8\xfd\x65\xa2\x48\x55\x19\x92\x2b\xc5\x7a\x4f\x39\x95\xa4\x40\x8f\xad\xac\x44\x7d\x94\x14\xf5\x4b\xab\xa6\x34\x38\x2c\x59\x2a\x8f\x9c\x49\x2b\x65\x8b\x3a\x43\x25\x2d\x37\x8b\x46\x67\x1f\x26\x18\xa0\x2e\x49\x51\x38\x03\xe0\xcb\x03\x94\x34\x63\x6d\x69\x20\xc0\x46\x82\xe4\xf2\x04\x05\x91\x39\x75\x06\x98\x5d\x18\xa0\x4c\xfe\x7b\x80\xbf\x6c\x04\x89\x59\x86\xd3\xcb\x23\x60\x2b\xc3\xcc\xc8\x10\x5f\x5a\x8a\x8a\x21\xb1\x32\x44\x53\x23\xc4\xf4\xd2\x6a\x54\x10\xd1\xc4\x1e\x8d\x89\x25\x1c\x93\x4b\x63\xc4\xf6\xb4\x34\x17\x86\x38\xbc\xfd\x70\x79\x08\x58\x62\xdc\x86\x1e\x10\xa0\xa9\xe1\x01\x01\x9c\x1a\x20\x39\xcc\x45\x59\xb5\x0d\x45\x9f\xab\x86\x95\xec\x07\xcd\x4c\x14\x29\xb4\x48\x41\xf5\xe0\x4a\x01\x0c\x07\x50\x12\xae\x14\xd0\x88\xc0\x54\xe1\x4a\x01\x2e\x57\x7e\x84\x31\xb3\x62\xc4\x96\xaa\xe9\x01\x03\x5a\x2b\xfc\xe8\x13\x5c\x2e\xbc\xe8\x13\x5e\x31\x7c\xe8\x33\xbe\x0e\x7d\xc6\xa7\xf4\x69\xd6\x06\xf0\x75\xfa\xf8\x84\x1e\x76\xbb\x83\xda\x84\x90\x63\xcf\xf1\x70\x21\xf0\xfc\x10\x7e\xdd\xdc\x85\xc4\xa9\x50\x48\x68\x8e\xc2\x9e\x82\x23\x02\x30\x41\xe3\x09\x2c\x43\x1d\x29\xa0\x82\x98\x82\x76\x7e\x8e\x10\xe0\xfc\x8c\x30\xe8\xa3\xdb\x11\x03\x2c\x4d\x9c\x80\x3e\xbb\x17\x8d\x90\x24\x3f\x53\x27\x18\xf6\xad\x0c\x57\x0c\xbf\xd2\x70\xa5\xf0\xad\x0d\x57\x8e\xab\x10\x47\x76\x1d\xe2\xc8\xae\x42\x1c\xd9\x95\x88\x23\x3b\x29\x0e\x33\x47\x47\x1c\xbb\xab\xed\xa9\xdf\x8e\x2a\xc8\x53\xda\xef\x27\xad\x07\xf7\xeb\x9d\xed\x27\xe9\xe3\xcc\x4f\xa4\x6e\xa8\xe4\xe8\x69\xd1\x05\xfc\xe5\xfd\x3c\xf3\x8e\xca\x17\x5a\xd0\x15\x9a\x8b\x96\x37\xab\x11\x5a\xac\x4f\x51\xd1\x9c\x48\x51\x30\x4e\x00\x7d\xa6\x68\x6c\xeb\x26\x45\x63\x5b\x37\x29\x1a\x67\x03\x4f\x6a\xe7\x94\x37\xeb\x7d\xeb\x09\xd7\xd6\x1e\xa5\xac\x40\x77\x45\xfb\xfc\x5c\x8f\xd0\x83\x78\x75\xf5\x27\xdd\xae\x1e\x8d\x4d\x1d\x18\x6d\x34\xf9\xab\x8d\x26\x97\xb5\xf1\x79\xa0\xd7\xbf\xd3\x6d\x40\x3f\xb5\x52\x54\xd4\xea\xf9\xa2\x09\xd1\xfd\x92\xd5\x05\x61\x7c\x84\xee\x68\x91\xf7\x0e\x52\x6c\x7d\x9b\xf5\xba\x9b\x3e\x8c\xc1\xbd\x8e\xb5\xe7\x5f\xc7\x3a\x34\xac\x6b\xc5\xa2\xff\xd5\xc7\x7d\xc0\xc3\xa8\x2e\x09\xcf\x97\x2d\xd1\x82\xfd\x42\xd8\x2b\xe1\x4e\x2d\x04\xb5\xee\x4e\x76\xfd\xfe\xc1\xbb\xad\xdf\x11\x79\xb7\xd9\xda\x21\xfb\x4c\xd6\x39\x0a\x3f\xad\x5f\xf4\x8f\xc1\x77\xdf\xce\xd1\x18\x76\x44\x1e\x44\xe1\xed\xe4\xfe\x2e\x80\x15\x3c\xc2\x33\x22\x8d\x75\x8e\x2b\x80\x9d\xf9\xb8\x33\x72\x8a\x62\xbd\xc1\xf5\x44\x81\x9d\xbf\xe0\x03\xb5\xbf\xf5\x04\x91\x38\xbf\x8b\x83\xc8\x17\xc3\xcc\xf9\x3d\x1c\xc4\xde\x24\x31\x75\x7f\x0d\x07\x53\x5f\x14\x31\x36\x61\x58\x3e\xd1\x82\x08\x43\x39\xfe\xcf\xf2\x25\xda\xee\x27\x2c\x28\x4b\x35\x43\xfd\x01\x44\x9c\x51\xec\x8d\x02\xa0\x4e\x3c\xf5\x46\x01\xd0\xe7\x07\xec\x8d\x02\xa4\xd0\x68\x92\x78\x03\x81\x89\x14\x4f\x66\x43\x48\xe6\x8f\x4f\x27\x30\xd4\x3f\x82\x14\x1a\xce\x06\x65\xca\x79\x08\x80\x40\xe3\x10\x5c\x36\x1c\x21\x00\xfa\xbc\x0d\x87\xd5\x8c\xf3\x10\x30\x79\x26\x61\xe2\x89\x03\xa8\xce\xd9\xb1\x34\xf6\x1f\x41\x37\xfb\x5f\x6f\x37\x6f\x37\xff\x06\x00\x00\xff\xff\xa3\x88\xf0\x08\x3b\x27\x00\x00")

func dataFilesCloud_providerJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesCloud_providerJson,
		"data/files/cloud_provider.json",
	)
}

func dataFilesCloud_providerJson() (*asset, error) {
	bytes, err := dataFilesCloud_providerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/cloud_provider.json", size: 10043, mode: os.FileMode(420), modTime: time.Unix(1464258041, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesClusterLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x4f\x4b\xc3\x40\x10\xc5\xef\xf9\x14\xcb\x1c\xd5\x84\x8d\xa5\x1e\x72\x8b\x10\x4a\x11\xab\x87\xf4\xa0\x22\xcb\x9a\x8c\xed\xd2\xec\x26\xec\x9f\x43\x29\xf9\xee\x4e\x42\xfa\x47\x5a\x18\x86\x65\xde\xef\xbd\x9d\x39\x44\x8c\xc1\x2e\xfc\xa0\x90\x1b\x34\x1e\xb2\x2f\x1a\x30\x76\x18\x3b\x49\x6e\x17\x20\x83\x97\xf5\x73\x11\xe7\x8b\x62\x55\xc6\xf9\xf2\x0d\x1e\x8e\xaa\xdf\x77\x08\x19\x83\xaa\x09\xce\xa3\x4d\x2e\x82\x4e\x4c\xad\x5c\xd7\xc8\xbd\x30\x52\xe3\x10\x45\x88\x35\xe8\xd1\x9d\x91\xce\xaa\x4a\x99\x8d\xd0\x6d\x8d\x0d\x31\xef\xf9\xc7\xe2\xe2\x13\xa5\x51\x04\xa3\x68\x39\x78\x5d\xae\xd6\x65\x71\xed\xfc\x6d\xad\x0e\x8d\x24\x82\x27\x73\x76\xc7\xaa\x2e\xb0\x7b\xc6\x93\x94\xde\x56\xea\xeb\x6d\x06\x23\xa5\xba\x1a\xb2\xe3\xad\x43\x1c\x5a\xb1\x6d\x83\xa5\x9c\xd9\xc9\x33\xcd\x75\x6b\xfc\x96\x84\xc7\x64\x0e\x93\xd2\x9f\x63\xa5\x47\xe1\xbc\xb4\x1e\xeb\x81\xe1\xe9\x53\xcc\x53\xaa\x92\xf3\x6c\xac\x84\x73\xfe\x09\xff\x0d\x68\xea\x09\x9f\xf1\x9b\xf8\x48\xf7\xd4\xbf\xa3\x3e\xfa\x0b\x00\x00\xff\xff\x73\xd7\x44\x50\xab\x01\x00\x00")

func dataFilesClusterLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesClusterLatestJson,
		"data/files/cluster.latest.json",
	)
}

func dataFilesClusterLatestJson() (*asset, error) {
	bytes, err := dataFilesClusterLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/cluster.latest.json", size: 427, mode: os.FileMode(420), modTime: time.Unix(1464268466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesConfigsYaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x4f\x6f\xe2\x30\x10\xc5\xef\xf9\x14\xa3\x70\xde\x44\xbb\x47\x6e\x88\x45\xbb\x48\xb4\xaa\x94\xb6\x77\x63\x0f\x78\x84\x33\x8e\xec\x31\x15\xdf\xbe\x0e\x88\x7f\xa5\x4a\x7a\xca\x4b\xde\xef\x39\x93\x97\x99\xc0\xdc\xf3\x86\xb6\x29\x28\x21\xcf\x11\x36\x3e\xc0\xec\x65\xb9\x60\xd3\x79\x62\x89\x55\x7f\xd7\x60\xd8\x63\x80\x0f\x72\xae\x98\x80\xd2\x02\x9e\x81\xd8\xd0\x9e\x4c\x52\x0e\x5a\x14\xeb\x4d\x84\xd4\xe5\xe7\x62\x11\xf4\xdd\xa1\x39\xd3\x05\x9f\x59\x34\x55\x51\xc8\xa1\xc3\x29\x94\x4b\x16\x0c\x1a\x3b\xf1\xe1\x34\x42\x59\xa8\x94\xb3\x2c\xa4\x8f\xb1\x1b\x60\x5a\x00\xf8\x60\x30\x4c\xe1\x77\x96\x89\x6f\x48\x34\xe7\x59\x7b\x0a\xe0\x17\x94\xb5\x45\xe5\xc4\x56\xff\x8f\x97\xba\x11\x25\x29\x96\x17\xb7\x0f\x57\xb3\xbb\x77\xd5\x2b\xbf\x25\x1e\x45\x7c\x92\x61\xe6\xd5\xef\xf0\xe6\x98\x56\x91\x23\xde\x3a\x8a\x52\x3d\x9d\xf4\x2a\xeb\xba\x41\x36\x8b\xde\xfc\x01\x9a\xd6\x51\x07\x5a\xe3\x38\xfa\xc6\xf1\x11\x66\xd5\x62\xec\x94\xc6\xea\xf9\xac\xea\xb9\x45\xbd\x1b\x41\x02\xe6\x6a\x87\x99\xaf\xbd\x7e\xc7\xe4\xd2\xae\x40\x8c\xb6\x6a\x50\xa7\x80\x8d\x45\xe7\xea\x7f\x78\xac\x33\x1e\xa2\x60\x3b\x1b\xfe\xa5\x9a\xf2\xb7\x66\x2e\x3c\x8c\x76\x75\xfe\xa2\xc3\xde\xd9\x2b\x47\x66\x60\x87\xfe\x64\xc9\xfe\xfd\x42\x8d\x2c\xce\x67\x00\x00\x00\xff\xff\x1c\x7f\xa9\xe6\x24\x03\x00\x00")

func dataFilesConfigsYamlBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesConfigsYaml,
		"data/files/configs.yaml",
	)
}

func dataFilesConfigsYaml() (*asset, error) {
	bytes, err := dataFilesConfigsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/configs.yaml", size: 804, mode: os.FileMode(420), modTime: time.Unix(1464258041, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesDbLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\x5d\x4f\xdb\x30\x14\x7d\xef\xaf\xa8\xf2\xbc\x5a\x2e\x15\x9b\xd6\xb7\xb4\x0d\x2c\x52\x61\x55\x20\xd2\xd8\x34\x45\x4e\xe2\x52\x6b\xf9\x92\x3f\xa6\x21\xc4\x7f\xdf\x35\x73\xd2\x12\x97\x35\x43\x1d\xe2\x21\x28\x0f\x89\xef\xf1\x3d\x57\xf7\xd0\x73\xee\x07\xc3\xe1\xd0\xa9\x4a\x21\x6f\x39\x15\xce\xf4\xf1\x5b\x1f\x15\x24\xa7\xce\x74\x5b\x79\x57\x17\x7e\x52\x2e\x58\x59\x00\xf6\x9b\x39\xd2\xa7\x1f\xd1\xa9\x63\x3e\xbf\x37\xd0\x34\x7e\x02\xba\xdf\xbe\xea\xaa\xf8\xa1\x80\x60\x31\x1b\xad\xce\x47\x33\xf7\xca\x9f\x37\x1c\x06\x20\xef\x2a\x3d\x42\x1a\xa3\x35\xa7\x14\x59\xa3\xd4\x2c\x4c\x54\x19\xb9\x8b\xcc\xc4\x33\x22\x58\xd2\xc6\x54\x9c\x25\xac\xb8\x8d\xf2\x32\xa5\x19\x80\xce\x02\xcf\xb3\xe8\x58\x4e\x23\x55\x30\x09\xf5\x0b\xff\x32\xbc\xb6\x10\x75\x97\x75\xc9\x73\x95\x11\xc0\x61\x34\x7e\x6e\x1c\x0d\x86\x7e\x22\xdd\x2e\x75\xa7\x13\xe5\xd1\xa6\x54\x1c\x5a\x4c\x5a\x0d\xea\x72\x5e\x16\x72\x03\xf5\xd3\x66\xb1\x7f\xfe\x1e\xda\x7c\x44\xd2\x48\x48\xc2\x25\x05\x2a\xe7\x04\x8f\xdf\x8f\xf0\x18\x9e\x6b\x8c\xa7\x8f\x0f\xc2\x18\x7f\xb5\xc6\xd4\xd7\x68\x91\x9a\x4b\x13\xbc\xf7\xd2\x60\x2f\xed\x5f\x84\x5c\x84\x81\x3b\x5b\xda\xbb\x6d\xa4\xac\x08\x4b\xbb\x4a\xb9\x50\x9c\xc4\x19\x3d\x24\xe6\xca\xbd\x39\xef\xc5\xfc\x0f\x62\x7e\x72\x8f\xa3\xa3\xdd\xa7\x8b\x84\x42\xc5\x22\xe1\xac\x92\xe0\x36\x91\x21\x5e\x05\xfe\x85\x1b\xdc\x3c\xdb\x8e\x4a\x78\xd3\x38\x2f\x88\x40\xf6\x36\x4e\xff\x43\xec\x6a\xd9\x4b\x3e\x6c\x49\x3e\x5f\x7e\x0e\x17\xc7\x51\x7d\x9e\x95\x2a\xed\x7f\xbb\x47\x17\xb2\x8e\xd9\x41\x33\x83\x43\x33\x22\x24\x4b\x04\x25\x3c\xd9\xd8\x21\xfe\xb4\x7c\x20\xc9\xc7\xe8\x03\x64\xf9\xce\x90\xce\x09\x9a\xc0\x76\x5f\x9a\xee\xde\x55\xa7\x74\xdf\x3f\x63\x4d\xd5\x47\xfc\x1b\xb1\x08\x50\xb3\x5b\xc4\xff\x8b\x9e\x7d\xce\xbf\xa2\x57\xb0\x62\x9d\xa9\x5f\xb6\x49\x98\xf3\x03\xee\x00\xbb\xc3\x68\xf2\x62\x33\xf0\x2f\xcf\x96\xe1\x97\x4e\x86\xd0\x9a\xa7\xe6\xe9\x9d\xe0\x8d\x38\x81\x91\xb2\x9b\x1b\x74\x12\xb3\xb7\x81\x57\xb1\x81\xc1\xc3\xef\x00\x00\x00\xff\xff\x94\x10\xbd\x49\xf5\x0f\x00\x00")

func dataFilesDbLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesDbLatestJson,
		"data/files/db.latest.json",
	)
}

func dataFilesDbLatestJson() (*asset, error) {
	bytes, err := dataFilesDbLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/db.latest.json", size: 4085, mode: os.FileMode(420), modTime: time.Unix(1464267433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataFilesPkgLatestJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xd8\x4d\x6f\x9b\x30\x18\x07\xf0\x7b\x3e\x05\xe2\xbc\x20\x93\xaa\x3b\xe4\xc6\x54\xaa\x21\x2d\x2d\xa2\xec\xd0\x4d\x13\x32\xe0\x24\x56\xc0\x30\xbf\x4c\xab\xaa\x7e\xf7\x3d\xce\x9a\x86\xbc\x6c\xdd\x52\x39\xa7\x47\x42\x08\xf1\x7f\xfc\x82\xf5\x13\xb2\xfc\x38\xf2\x3c\xbf\x5f\x2d\xfc\xa9\xf7\x15\x1e\x3d\xef\x71\x7d\x87\x97\x6a\x65\xe0\xa5\xff\x71\x9c\xdc\x5c\x25\xf1\x38\xcf\x92\xe8\x93\xff\x6e\x93\xea\x87\x9e\xd9\x18\x9a\x06\x46\x31\xb9\x4d\x6a\xae\xfa\x86\x3e\x14\x82\xb6\xeb\x8a\x44\xd4\x9c\x6d\xe3\x5e\xf2\x8a\x8b\x45\xd1\x76\x35\x6b\x6c\x7e\x9d\xc5\xf1\x36\x56\xa6\x54\x95\xe4\xbd\xe6\x9d\x28\x36\x83\xec\x8f\xcd\x5b\x56\x18\xc1\xb5\xcd\xae\xa2\xfb\xc3\xce\xe7\x9d\x6c\x4d\x43\x6d\x4e\x82\xf0\x70\x6e\xb6\x0e\xba\x50\x35\x54\x6c\x3e\xd8\x36\x67\x12\xe6\x25\xf4\xb2\x68\x27\xad\x6d\x7c\xf1\xd2\x74\x27\xa5\xfd\x3a\x9d\x04\x97\xfe\x73\xfc\xf4\x32\xc4\x77\xd3\x69\xba\xd7\xed\x66\x8d\xa6\x5e\x48\x86\x1d\x2e\x69\x09\x13\xa1\xba\x93\x01\xcc\x6c\x55\x2c\x4a\x28\x99\x0c\x4b\xa8\xd4\x7c\x4e\x2b\x3d\xc8\x43\x32\x2c\xa8\x78\x50\x1a\xde\xd4\x05\x5d\x30\x61\x17\x64\x1c\x0e\xd3\xc6\x28\xcd\x64\xb0\x32\x25\x3b\x5e\x51\x97\x41\x4f\x79\x1d\xf4\x9d\xd2\x0b\xc9\x14\xe4\x97\x47\x62\xd6\x50\xa5\x79\xa5\x18\x95\xd5\xf2\x0f\x35\x5c\xcc\x1b\xf3\xd3\x86\x07\x8b\x52\x53\xcd\x0a\xa5\xe1\x6b\x58\xbd\x5e\x39\x12\xbe\x1f\x93\x10\xae\x9c\x90\xe9\xfa\x0a\x08\x21\x5f\xfc\xdd\x16\x4c\xd4\x9b\xfa\x0b\x72\xb4\x7e\x34\x18\xe7\x50\xee\x5d\x1e\x65\xf9\xe7\xf4\x74\xbb\x77\x76\xca\xa6\x47\xbd\xa8\xf7\xfc\x7a\xd3\xec\xf6\x74\xb9\xa9\xec\xe6\x4c\x29\x70\x48\x1b\xe4\x8b\x7c\xcf\xcf\x37\xbe\xc9\xc7\x1f\xe2\x3c\x3a\x45\x6f\x2c\x60\xe1\xc0\x89\x7a\xe3\xc6\x61\x6f\x7c\xa4\x8b\x74\x5f\xa7\x9b\x9e\xcc\x36\x95\xfc\x07\x8c\xef\x25\x02\xe6\xdc\x34\xd4\x5a\x44\xc0\x08\xf8\xec\xff\xde\x5d\x59\xff\x0e\xf8\x5a\xb2\xbf\xfd\x71\x67\x93\xd9\x2b\x5e\xd3\x2c\x99\x45\xd9\x3d\x92\x45\xb2\xff\x49\x16\x6c\xfd\x3e\x69\x70\x71\xc6\x80\x70\x11\xae\x4b\xb8\xcf\x07\x0d\x6e\x8e\x18\x10\x2f\xe2\x75\x89\x37\xcd\x6e\x1d\x9e\x30\xa0\x5e\xd4\xeb\x4a\x6f\x94\x3a\xdc\x33\x40\xe7\x08\x17\xe1\x3a\x83\xeb\x74\xcf\x80\x78\x11\xaf\x4b\xbc\x6e\xf7\x0c\xa8\x17\xf5\xbe\x55\x2f\xdc\xbf\x8d\x9e\x7e\x05\x00\x00\xff\xff\xc8\x07\x32\x66\xdf\x20\x00\x00")

func dataFilesPkgLatestJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataFilesPkgLatestJson,
		"data/files/pkg.latest.json",
	)
}

func dataFilesPkgLatestJson() (*asset, error) {
	bytes, err := dataFilesPkgLatestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/files/pkg.latest.json", size: 8415, mode: os.FileMode(420), modTime: time.Unix(1464267152, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/files/ci.latest.json":      dataFilesCiLatestJson,
	"data/files/cloud_provider.json": dataFilesCloud_providerJson,
	"data/files/cluster.latest.json": dataFilesClusterLatestJson,
	"data/files/configs.yaml":        dataFilesConfigsYaml,
	"data/files/db.latest.json":      dataFilesDbLatestJson,
	"data/files/pkg.latest.json":     dataFilesPkgLatestJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"files": &bintree{nil, map[string]*bintree{
			"ci.latest.json":      &bintree{dataFilesCiLatestJson, map[string]*bintree{}},
			"cloud_provider.json": &bintree{dataFilesCloud_providerJson, map[string]*bintree{}},
			"cluster.latest.json": &bintree{dataFilesClusterLatestJson, map[string]*bintree{}},
			"configs.yaml":        &bintree{dataFilesConfigsYaml, map[string]*bintree{}},
			"db.latest.json":      &bintree{dataFilesDbLatestJson, map[string]*bintree{}},
			"pkg.latest.json":     &bintree{dataFilesPkgLatestJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
