// Code generated by protoc-gen-go.
// source: dashboard.proto
// DO NOT EDIT!

/*
Package monitoring is a generated protocol buffer package.

It is generated from these files:
	dashboard.proto

It has these top-level messages:
	DashboardCreateRequest
	DashboardCreateResponse
*/
package monitoring

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type DashboardCreateRequest struct {
	Type        string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName" json:"cluster_name,omitempty"`
	ObjectName  string `protobuf:"bytes,3,opt,name=object_name,json=objectName" json:"object_name,omitempty"`
	Namespace   string `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
}

func (m *DashboardCreateRequest) Reset()                    { *m = DashboardCreateRequest{} }
func (m *DashboardCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*DashboardCreateRequest) ProtoMessage()               {}
func (*DashboardCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DashboardCreateResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Url    string         `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

func (m *DashboardCreateResponse) Reset()                    { *m = DashboardCreateResponse{} }
func (m *DashboardCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*DashboardCreateResponse) ProtoMessage()               {}
func (*DashboardCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DashboardCreateResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*DashboardCreateRequest)(nil), "monitoring.DashboardCreateRequest")
	proto.RegisterType((*DashboardCreateResponse)(nil), "monitoring.DashboardCreateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for Dashboard service

type DashboardClient interface {
	Create(ctx context.Context, in *DashboardCreateRequest, opts ...grpc.CallOption) (*DashboardCreateResponse, error)
}

type dashboardClient struct {
	cc *grpc.ClientConn
}

func NewDashboardClient(cc *grpc.ClientConn) DashboardClient {
	return &dashboardClient{cc}
}

func (c *dashboardClient) Create(ctx context.Context, in *DashboardCreateRequest, opts ...grpc.CallOption) (*DashboardCreateResponse, error) {
	out := new(DashboardCreateResponse)
	err := grpc.Invoke(ctx, "/monitoring.Dashboard/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Dashboard service

type DashboardServer interface {
	Create(context.Context, *DashboardCreateRequest) (*DashboardCreateResponse, error)
}

func RegisterDashboardServer(s *grpc.Server, srv DashboardServer) {
	s.RegisterService(&_Dashboard_serviceDesc, srv)
}

func _Dashboard_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DashboardCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/monitoring.Dashboard/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServer).Create(ctx, req.(*DashboardCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dashboard_serviceDesc = grpc.ServiceDesc{
	ServiceName: "monitoring.Dashboard",
	HandlerType: (*DashboardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Dashboard_Create_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0xec, 0x30,
	0x14, 0x86, 0xe9, 0xcc, 0x50, 0xe8, 0xe9, 0xe5, 0x2a, 0x59, 0x8c, 0xa5, 0x0c, 0x8c, 0x56, 0x14,
	0x71, 0x91, 0xe8, 0xb8, 0x73, 0xab, 0x6b, 0x17, 0x9d, 0x07, 0x90, 0xb4, 0x3d, 0xd4, 0x4a, 0x27,
	0xa9, 0x49, 0x2a, 0xba, 0x15, 0xdc, 0xba, 0xf1, 0xd1, 0x7c, 0x05, 0x1f, 0xc4, 0x36, 0xa9, 0xd3,
	0x85, 0xe2, 0xa6, 0x84, 0xef, 0xff, 0x38, 0xfc, 0xe7, 0x14, 0x76, 0x0a, 0xae, 0xef, 0x32, 0xc9,
	0x55, 0x41, 0x1b, 0x25, 0x8d, 0x24, 0xb0, 0x91, 0xa2, 0x32, 0x52, 0x55, 0xa2, 0x8c, 0x17, 0xa5,
	0x94, 0x65, 0x8d, 0x8c, 0x37, 0x15, 0xe3, 0x42, 0x48, 0xc3, 0x4d, 0x25, 0x85, 0x76, 0x66, 0x3c,
	0xef, 0x71, 0x61, 0x9e, 0x1b, 0xd4, 0xcc, 0x7e, 0x1d, 0x4f, 0xde, 0x3c, 0x98, 0x5f, 0x7f, 0x4f,
	0xbd, 0x52, 0xc8, 0x0d, 0xa6, 0xf8, 0xd0, 0xa2, 0x36, 0x84, 0xc0, 0xac, 0x37, 0x23, 0x6f, 0xdf,
	0x3b, 0x09, 0x52, 0xfb, 0x26, 0x07, 0xf0, 0x2f, 0xaf, 0x5b, 0x6d, 0x50, 0xdd, 0x0a, 0xbe, 0xc1,
	0x68, 0x62, 0xb3, 0x70, 0x60, 0x37, 0x1d, 0x22, 0x4b, 0x08, 0x65, 0x76, 0x8f, 0xb9, 0x71, 0xc6,
	0xd4, 0x1a, 0xe0, 0x90, 0x15, 0x16, 0x10, 0xf4, 0x89, 0x6e, 0x78, 0x8e, 0xd1, 0xcc, 0xc6, 0x23,
	0x48, 0xd6, 0xb0, 0xf7, 0xa3, 0x8f, 0x6e, 0xba, 0x45, 0x90, 0x1c, 0x83, 0xaf, 0xbb, 0xad, 0x5a,
	0x6d, 0x2b, 0x85, 0xab, 0xff, 0xd4, 0x2d, 0x44, 0xd7, 0x96, 0xa6, 0x43, 0x4a, 0x76, 0x61, 0xda,
	0xaa, 0x7a, 0xe8, 0xd6, 0x3f, 0x57, 0xaf, 0x1e, 0x04, 0xdb, 0xa9, 0xe4, 0x09, 0x7c, 0x37, 0x99,
	0x24, 0x74, 0x3c, 0x20, 0xfd, 0xfd, 0x0c, 0xf1, 0xe1, 0x9f, 0x8e, 0xab, 0x96, 0x1c, 0xbd, 0x7c,
	0x7c, 0xbe, 0x4f, 0x96, 0x71, 0xcc, 0x46, 0x99, 0x3d, 0x9e, 0xd1, 0x73, 0xb6, 0xfd, 0x65, 0x97,
	0xde, 0x69, 0xe6, 0xdb, 0xa3, 0x5f, 0x7c, 0x05, 0x00, 0x00, 0xff, 0xff, 0x81, 0x6e, 0x1e, 0x22,
	0xc9, 0x01, 0x00, 0x00,
}
