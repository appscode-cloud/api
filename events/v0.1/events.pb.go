// Code generated by protoc-gen-go.
// source: events.proto
// DO NOT EDIT!

/*
Package events is a generated protocol buffer package.

It is generated from these files:
	events.proto

It has these top-level messages:
	Request
	Response
	Handler
*/
package events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Request struct {
	ClusterName    string              `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName" json:"cluster_name,omitempty"`
	KubeNamespace  string              `protobuf:"bytes,2,opt,name=kube_namespace,json=kubeNamespace" json:"kube_namespace,omitempty"`
	KubeObjectType string              `protobuf:"bytes,3,opt,name=kube_object_type,json=kubeObjectType" json:"kube_object_type,omitempty"`
	KubeObjectName string              `protobuf:"bytes,4,opt,name=kube_object_name,json=kubeObjectName" json:"kube_object_name,omitempty"`
	EventType      string              `protobuf:"bytes,5,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	Metadata       *Request_ObjectMeta `protobuf:"bytes,7,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetMetadata() *Request_ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Request_ObjectMeta struct {
	Kind                  string            `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	Service               []string          `protobuf:"bytes,2,rep,name=service" json:"service,omitempty"`
	ReplicationController string            `protobuf:"bytes,3,opt,name=replication_controller,json=replicationController" json:"replication_controller,omitempty"`
	Namespace             string            `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	PodIp                 string            `protobuf:"bytes,5,opt,name=pod_ip,json=podIp" json:"pod_ip,omitempty"`
	InstanceId            string            `protobuf:"bytes,6,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Labels                map[string]string `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Request_ObjectMeta) Reset()                    { *m = Request_ObjectMeta{} }
func (m *Request_ObjectMeta) String() string            { return proto.CompactTextString(m) }
func (*Request_ObjectMeta) ProtoMessage()               {}
func (*Request_ObjectMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Request_ObjectMeta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type Response struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Tasks  []*Handler     `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Response) GetTasks() []*Handler {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type Handler struct {
	Action   string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Receiver string `protobuf:"bytes,2,opt,name=receiver" json:"receiver,omitempty"`
	Base     string `protobuf:"bytes,3,opt,name=base" json:"base,omitempty"`
	Suffix   string `protobuf:"bytes,4,opt,name=suffix" json:"suffix,omitempty"`
	Verb     string `protobuf:"bytes,5,opt,name=verb" json:"verb,omitempty"`
	Data     []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Handler) Reset()                    { *m = Handler{} }
func (m *Handler) String() string            { return proto.CompactTextString(m) }
func (*Handler) ProtoMessage()               {}
func (*Handler) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Request)(nil), "events.Request")
	proto.RegisterType((*Request_ObjectMeta)(nil), "events.Request.ObjectMeta")
	proto.RegisterType((*Response)(nil), "events.Response")
	proto.RegisterType((*Handler)(nil), "events.Handler")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Events service

type EventsClient interface {
	Constructive(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Destructive(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type eventsClient struct {
	cc *grpc.ClientConn
}

func NewEventsClient(cc *grpc.ClientConn) EventsClient {
	return &eventsClient{cc}
}

func (c *eventsClient) Constructive(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/events.Events/Constructive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventsClient) Destructive(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/events.Events/Destructive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Events service

type EventsServer interface {
	Constructive(context.Context, *Request) (*Response, error)
	Destructive(context.Context, *Request) (*Response, error)
}

func RegisterEventsServer(s *grpc.Server, srv EventsServer) {
	s.RegisterService(&_Events_serviceDesc, srv)
}

func _Events_Constructive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(EventsServer).Constructive(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Events_Destructive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(EventsServer).Destructive(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Events_serviceDesc = grpc.ServiceDesc{
	ServiceName: "events.Events",
	HandlerType: (*EventsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Constructive",
			Handler:    _Events_Constructive_Handler,
		},
		{
			MethodName: "Destructive",
			Handler:    _Events_Destructive_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0xf3, 0xe3, 0x24, 0xe3, 0xd0, 0x46, 0x2b, 0x1a, 0x19, 0xab, 0x50, 0x88, 0x68, 0x55,
	0x71, 0x70, 0x20, 0x08, 0x04, 0x3d, 0x70, 0x81, 0x4a, 0x54, 0x82, 0x22, 0x19, 0x84, 0xe0, 0x14,
	0xad, 0xed, 0x69, 0x65, 0xe2, 0xda, 0xc6, 0xbb, 0xb6, 0xc8, 0x95, 0x37, 0x40, 0xbc, 0x0d, 0x47,
	0x78, 0x04, 0x5e, 0x81, 0x07, 0x61, 0x3d, 0x5e, 0x27, 0x55, 0x10, 0x87, 0x5e, 0xac, 0x99, 0x6f,
	0xbe, 0x9d, 0x9d, 0xef, 0xdb, 0x31, 0x0c, 0xb1, 0xc4, 0x44, 0x0a, 0x37, 0xcb, 0x53, 0x99, 0x32,
	0xb3, 0xce, 0x9c, 0xdd, 0xf3, 0x34, 0x3d, 0x8f, 0x71, 0xca, 0xb3, 0x68, 0xca, 0x93, 0x24, 0x95,
	0x5c, 0x46, 0x69, 0xa2, 0x59, 0xce, 0xb8, 0x82, 0x43, 0xb9, 0xcc, 0x50, 0x4c, 0xe9, 0x5b, 0xe3,
	0x93, 0x5f, 0x1d, 0xe8, 0x79, 0xf8, 0xb9, 0x40, 0x21, 0xd9, 0x1d, 0x18, 0x06, 0x71, 0x21, 0x24,
	0xe6, 0xf3, 0x84, 0x5f, 0xa0, 0x6d, 0xdc, 0x36, 0x0e, 0x07, 0x9e, 0xa5, 0xb1, 0x53, 0x05, 0xb1,
	0x7d, 0xd8, 0x5a, 0x14, 0x3e, 0x52, 0x5d, 0x64, 0x3c, 0x40, 0xbb, 0x45, 0xa4, 0x6b, 0x15, 0x7a,
	0xda, 0x80, 0xec, 0x10, 0x46, 0x44, 0x4b, 0xfd, 0x4f, 0x18, 0xc8, 0x79, 0x75, 0xa1, 0xdd, 0x26,
	0x22, 0x1d, 0x7f, 0x43, 0xf0, 0x3b, 0x85, 0x6e, 0x32, 0xe9, 0xde, 0xce, 0x26, 0x93, 0xae, 0xbe,
	0x09, 0x40, 0x4a, 0xeb, 0x6e, 0x5d, 0xe2, 0x0c, 0x08, 0xa1, 0x46, 0x8f, 0xa1, 0x7f, 0x81, 0x92,
	0x87, 0x5c, 0x72, 0xbb, 0xa7, 0x8a, 0xd6, 0xcc, 0x71, 0xb5, 0x4f, 0x5a, 0x9f, 0x5b, 0x37, 0x7b,
	0xad, 0x58, 0xde, 0x8a, 0xeb, 0xfc, 0x6c, 0x01, 0xac, 0x0b, 0x8c, 0x41, 0x67, 0x11, 0x25, 0xa1,
	0xd6, 0x4e, 0x31, 0xb3, 0xa1, 0x27, 0x30, 0x2f, 0x23, 0x52, 0xdb, 0x56, 0x70, 0x93, 0xb2, 0x47,
	0x30, 0xce, 0x31, 0x8b, 0xa3, 0x80, 0xbc, 0x9e, 0x07, 0x69, 0x22, 0xf3, 0x34, 0x8e, 0x31, 0xd7,
	0x6a, 0x77, 0x2e, 0x55, 0x9f, 0xaf, 0x8a, 0x6c, 0x17, 0x06, 0x6b, 0x03, 0x6b, 0xb5, 0x6b, 0x80,
	0xed, 0x80, 0x99, 0xa5, 0xe1, 0x3c, 0xca, 0xb4, 0xc8, 0xae, 0xca, 0x4e, 0x32, 0xb6, 0x07, 0x56,
	0x94, 0x08, 0xc9, 0x93, 0x00, 0xe7, 0x51, 0x68, 0x9b, 0x54, 0x83, 0x06, 0x3a, 0x09, 0xd9, 0x33,
	0x30, 0x63, 0xee, 0x63, 0x2c, 0x94, 0xfe, 0xb6, 0xd2, 0x7f, 0xf0, 0x7f, 0xfd, 0xee, 0x2b, 0x22,
	0x1e, 0xab, 0x89, 0x96, 0x9e, 0x3e, 0xe5, 0x3c, 0x05, 0xeb, 0x12, 0xcc, 0x46, 0xd0, 0x5e, 0xe0,
	0x52, 0x1b, 0x51, 0x85, 0xec, 0x3a, 0x74, 0x4b, 0x1e, 0x17, 0xcd, 0x9b, 0xd7, 0xc9, 0x51, 0xeb,
	0x89, 0x31, 0xf9, 0x08, 0x7d, 0x4f, 0x4d, 0xaf, 0xd6, 0x0d, 0xd9, 0x01, 0x98, 0x6a, 0x24, 0x59,
	0x08, 0x3a, 0x6a, 0xcd, 0xb6, 0xdc, 0x7a, 0xed, 0xdc, 0xb7, 0x84, 0x7a, 0xba, 0xaa, 0x56, 0xa9,
	0x2b, 0xb9, 0x58, 0x08, 0xf2, 0xd4, 0x9a, 0x6d, 0x37, 0xd3, 0xbe, 0xe4, 0x49, 0xa8, 0x4c, 0xf2,
	0xea, 0xea, 0xe4, 0x9b, 0x01, 0x3d, 0x0d, 0xb1, 0x31, 0x98, 0x3c, 0xa8, 0xbc, 0xd4, 0x53, 0xe9,
	0x8c, 0x39, 0xd0, 0xcf, 0x31, 0xc0, 0xa8, 0x54, 0xc6, 0xd7, 0xb3, 0xad, 0xf2, 0xea, 0x41, 0x7d,
	0x2e, 0x9a, 0xf5, 0xa3, 0xb8, 0xea, 0x23, 0x8a, 0xb3, 0xb3, 0xe8, 0x8b, 0x36, 0x5f, 0x67, 0x15,
	0x57, 0x1d, 0xf1, 0xb5, 0xef, 0x14, 0x57, 0x18, 0xed, 0x54, 0xe5, 0xf7, 0xd0, 0xa3, 0x78, 0xf6,
	0xc3, 0x00, 0xf3, 0x98, 0xa6, 0x65, 0x1f, 0x60, 0xa8, 0x1e, 0x56, 0xc8, 0xbc, 0x50, 0xa3, 0x94,
	0xc8, 0xb6, 0x37, 0x4c, 0x77, 0x46, 0x6b, 0xa0, 0x36, 0x68, 0xb2, 0xff, 0xf5, 0xf7, 0x9f, 0xef,
	0xad, 0x3d, 0xc7, 0xa1, 0x5f, 0xb5, 0xae, 0x4e, 0xcb, 0xfb, 0xee, 0x83, 0x69, 0xd0, 0x74, 0x3a,
	0x32, 0xee, 0xb1, 0xf7, 0x60, 0xbd, 0xc0, 0x2b, 0x35, 0xbe, 0x4b, 0x8d, 0x6f, 0x39, 0x37, 0xfe,
	0x69, 0x1c, 0xe2, 0xaa, 0xaf, 0x6f, 0xd2, 0x8f, 0xff, 0xf0, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x2f, 0xb0, 0x20, 0xf5, 0x46, 0x04, 0x00, 0x00,
}
